-module(fix_parser).
-include("../include/admin.hrl").
-include("../include/business.hrl").

-export([decode_message/1, field_by_number/1, number_by_field/1, decode_typed_field/2, encode_typed_field/2, message_by_number/1, number_by_message/1]).

decode_message([{msg_type,heartbeat}|Message]) -> % Heartbeat
  decode_fields(Message, #heartbeat{}, heartbeat, 4);

decode_message([{msg_type,test_request}|Message]) -> % TestRequest
  decode_fields(Message, #test_request{}, test_request, 4);

decode_message([{msg_type,resend_request}|Message]) -> % ResendRequest
  decode_fields(Message, #resend_request{}, resend_request, 5);

decode_message([{msg_type,reject}|Message]) -> % Reject
  decode_fields(Message, #reject{}, reject, 9);

decode_message([{msg_type,sequence_reset}|Message]) -> % SequenceReset
  decode_fields(Message, #sequence_reset{}, sequence_reset, 5);

decode_message([{msg_type,logout}|Message]) -> % Logout
  decode_fields(Message, #logout{}, logout, 5);

decode_message([{msg_type,execution_report}|Message]) -> % ExecutionReport
  decode_fields(Message, #execution_report{}, execution_report, 26);

decode_message([{msg_type,order_cancel_reject}|Message]) -> % OrderCancelReject
  decode_fields(Message, #order_cancel_reject{}, order_cancel_reject, 23);

decode_message([{msg_type,logon}|Message]) -> % Logon
  decode_fields(Message, #logon{}, logon, 12);

decode_message([{msg_type,new_order_single}|Message]) -> % NewOrderSingle
  decode_fields(Message, #new_order_single{}, new_order_single, 14);

decode_message([{msg_type,order_cancel_request}|Message]) -> % OrderCancelRequest
  decode_fields(Message, #order_cancel_request{}, order_cancel_request, 9);

decode_message([{msg_type,order_status_request}|Message]) -> % OrderStatusRequest
  decode_fields(Message, #order_status_request{}, order_status_request, 6);

decode_message([{msg_type,market_data_request}|Message]) -> % MarketDataRequest
  decode_fields(Message, #market_data_request{}, market_data_request, 17);

decode_message([{msg_type,market_data_snapshot_full_refresh}|Message]) -> % MarketDataSnapshotFullRefresh
  decode_fields(Message, #market_data_snapshot_full_refresh{}, market_data_snapshot_full_refresh, 9);

decode_message([{msg_type,market_data_incremental_refresh}|Message]) -> % MarketDataIncrementalRefresh
  decode_fields(Message, #market_data_incremental_refresh{}, market_data_incremental_refresh, 42);

decode_message([{msg_type,market_data_request_reject}|Message]) -> % MarketDataRequestReject
  decode_fields(Message, #market_data_request_reject{}, market_data_request_reject, 8);

decode_message([{msg_type,business_message_reject}|Message]) -> % BusinessMessageReject
  decode_fields(Message, #business_message_reject{}, business_message_reject, 9);

decode_message([{msg_type,order_mass_status_request}|Message]) -> % OrderMassStatusRequest
  decode_fields(Message, #order_mass_status_request{}, order_mass_status_request, 4);

decode_message([{msg_type,request_for_positions}|Message]) -> % RequestForPositions
  decode_fields(Message, #request_for_positions{}, request_for_positions, 7);

decode_message([{msg_type,position_report}|Message]) -> % PositionReport
  decode_fields(Message, #position_report{}, position_report, 5);

decode_message([{msg_type,quote}|Message]) -> % Quote
  decode_fields(Message, #quote{}, quote, 12);

decode_message([{msg_type,quote_request}|Message]) -> % QuoteRequest
  decode_fields(Message, #quote_request{}, quote_request, 7);

decode_message([{msg_type,quote_request_reject}|Message]) -> % QuoteRequestReject
  decode_fields(Message, #quote_request_reject{}, quote_request_reject, 6);

decode_message([{msg_type,mass_quote}|Message]) -> % MassQuote
  decode_fields(Message, #mass_quote{}, mass_quote, 7);

decode_message([{msg_type,security_list_request}|Message]) -> % SecurityListRequest
  decode_fields(Message, #security_list_request{}, security_list_request, 6);

decode_message([{msg_type,security_list}|Message]) -> % SecurityList
  decode_fields(Message, #security_list{}, security_list, 6);

decode_message([{msg_type,quote_cancel}|Message]) -> % QuoteCancel
  decode_fields(Message, #quote_cancel{}, quote_cancel, 5);

decode_message([{msg_type,quote_status_report}|Message]) -> % QuoteStatusReport
  decode_fields(Message, #quote_status_report{}, quote_status_report, 5).

field_index(heartbeat, sender_comp_id) -> false;
field_index(heartbeat, target_comp_id) -> false;
field_index(heartbeat, msg_seq_num) -> false;
field_index(heartbeat, sending_time) -> 2;
field_index(heartbeat, test_req_id) -> 3;
field_index(test_request, sender_comp_id) -> false;
field_index(test_request, target_comp_id) -> false;
field_index(test_request, msg_seq_num) -> false;
field_index(test_request, sending_time) -> 2;
field_index(test_request, test_req_id) -> 3;
field_index(resend_request, sender_comp_id) -> false;
field_index(resend_request, target_comp_id) -> false;
field_index(resend_request, msg_seq_num) -> false;
field_index(resend_request, sending_time) -> 2;
field_index(resend_request, begin_seq_no) -> 3;
field_index(resend_request, end_seq_no) -> 4;
field_index(reject, sender_comp_id) -> false;
field_index(reject, target_comp_id) -> false;
field_index(reject, msg_seq_num) -> false;
field_index(reject, sending_time) -> 2;
field_index(reject, ref_seq_num) -> 3;
field_index(reject, ref_tag_id) -> 4;
field_index(reject, ref_msg_type) -> 5;
field_index(reject, session_reject_reason) -> 6;
field_index(reject, text) -> 7;
field_index(reject, encoded_text) -> 8;
field_index(sequence_reset, sender_comp_id) -> false;
field_index(sequence_reset, target_comp_id) -> false;
field_index(sequence_reset, msg_seq_num) -> false;
field_index(sequence_reset, sending_time) -> 2;
field_index(sequence_reset, gap_fill_flag) -> 3;
field_index(sequence_reset, new_seq_no) -> 4;
field_index(logout, sender_comp_id) -> false;
field_index(logout, target_comp_id) -> false;
field_index(logout, msg_seq_num) -> false;
field_index(logout, sending_time) -> 2;
field_index(logout, text) -> 3;
field_index(logout, encoded_text) -> 4;
field_index(execution_report, sender_comp_id) -> false;
field_index(execution_report, target_comp_id) -> false;
field_index(execution_report, msg_seq_num) -> false;
field_index(execution_report, sending_time) -> 2;
field_index(execution_report, cl_ord_id) -> 3;
field_index(execution_report, orig_cl_ord_id) -> 4;
field_index(execution_report, exec_type) -> 5;
field_index(execution_report, ord_status) -> 6;
field_index(execution_report, side) -> 7;
field_index(execution_report, transact_time) -> 8;
field_index(execution_report, leaves_qty) -> 9;
field_index(execution_report, cum_qty) -> 10;
field_index(execution_report, last_px) -> 11;
field_index(execution_report, last_qty) -> 12;
field_index(execution_report, order_qty) -> 13;
field_index(execution_report, ord_type) -> 14;
field_index(execution_report, price) -> 15;
field_index(execution_report, ord_rej_reason) -> 16;
field_index(execution_report, text) -> 17;
field_index(execution_report, security_exchange) -> 18;
field_index(execution_report, symbol) -> 19;
field_index(execution_report, avg_px) -> 20;
field_index(order_cancel_reject, sender_comp_id) -> false;
field_index(order_cancel_reject, target_comp_id) -> false;
field_index(order_cancel_reject, msg_seq_num) -> false;
field_index(order_cancel_reject, sending_time) -> 2;
field_index(order_cancel_reject, order_id) -> 3;
field_index(order_cancel_reject, secondary_order_id) -> 4;
field_index(order_cancel_reject, secondary_cl_ord_id) -> 5;
field_index(order_cancel_reject, cl_ord_id) -> 6;
field_index(order_cancel_reject, cl_ord_link_id) -> 7;
field_index(order_cancel_reject, orig_cl_ord_id) -> 8;
field_index(order_cancel_reject, ord_status) -> 9;
field_index(order_cancel_reject, working_indicator) -> 10;
field_index(order_cancel_reject, orig_ord_mod_time) -> 11;
field_index(order_cancel_reject, list_id) -> 12;
field_index(order_cancel_reject, account) -> 13;
field_index(order_cancel_reject, acct_id_source) -> 14;
field_index(order_cancel_reject, account_type) -> 15;
field_index(order_cancel_reject, trade_origination_date) -> 16;
field_index(order_cancel_reject, trade_date) -> 17;
field_index(order_cancel_reject, transact_time) -> 18;
field_index(order_cancel_reject, cxl_rej_response_to) -> 19;
field_index(order_cancel_reject, cxl_rej_reason) -> 20;
field_index(order_cancel_reject, text) -> 21;
field_index(order_cancel_reject, encoded_text) -> 22;
field_index(logon, sender_comp_id) -> false;
field_index(logon, target_comp_id) -> false;
field_index(logon, msg_seq_num) -> false;
field_index(logon, sending_time) -> 2;
field_index(logon, encrypt_method) -> 3;
field_index(logon, heart_bt_int) -> 4;
field_index(logon, raw_data) -> 5;
field_index(logon, reset_seq_num_flag) -> 6;
field_index(logon, next_expected_msg_seq_num) -> 7;
field_index(logon, test_message_indicator) -> 8;
field_index(logon, username) -> 9;
field_index(logon, password) -> 10;
field_index(new_order_single, sender_comp_id) -> false;
field_index(new_order_single, target_comp_id) -> false;
field_index(new_order_single, msg_seq_num) -> false;
field_index(new_order_single, sending_time) -> 2;
field_index(new_order_single, cl_ord_id) -> 3;
field_index(new_order_single, side) -> 4;
field_index(new_order_single, transact_time) -> 5;
field_index(new_order_single, order_qty) -> 6;
field_index(new_order_single, ord_type) -> 7;
field_index(new_order_single, price) -> 8;
field_index(new_order_single, stop_px) -> 9;
field_index(new_order_single, time_in_force) -> 10;
field_index(order_cancel_request, sender_comp_id) -> false;
field_index(order_cancel_request, target_comp_id) -> false;
field_index(order_cancel_request, msg_seq_num) -> false;
field_index(order_cancel_request, sending_time) -> 2;
field_index(order_cancel_request, cl_ord_id) -> 3;
field_index(order_cancel_request, orig_cl_ord_id) -> 4;
field_index(order_cancel_request, side) -> 5;
field_index(order_cancel_request, transact_time) -> 6;
field_index(order_cancel_request, order_qty) -> 7;
field_index(order_status_request, sender_comp_id) -> false;
field_index(order_status_request, target_comp_id) -> false;
field_index(order_status_request, msg_seq_num) -> false;
field_index(order_status_request, sending_time) -> 2;
field_index(order_status_request, cl_ord_id) -> 3;
field_index(order_status_request, side) -> 4;
field_index(market_data_request, sender_comp_id) -> false;
field_index(market_data_request, target_comp_id) -> false;
field_index(market_data_request, msg_seq_num) -> false;
field_index(market_data_request, sending_time) -> 2;
field_index(market_data_request, md_req_id) -> 3;
field_index(market_data_request, subscription_request_type) -> 4;
field_index(market_data_request, market_depth) -> 5;
field_index(market_data_request, md_update_type) -> 6;
field_index(market_data_request, aggregated_book) -> 7;
field_index(market_data_request, open_close_settl_flag) -> 8;
field_index(market_data_request, scope) -> 9;
field_index(market_data_request, md_implicit_delete) -> 10;
field_index(market_data_request, appl_queue_action) -> 11;
field_index(market_data_request, appl_queue_max) -> 12;
field_index(market_data_snapshot_full_refresh, sender_comp_id) -> false;
field_index(market_data_snapshot_full_refresh, target_comp_id) -> false;
field_index(market_data_snapshot_full_refresh, msg_seq_num) -> false;
field_index(market_data_snapshot_full_refresh, sending_time) -> 2;
field_index(market_data_snapshot_full_refresh, exchange) -> 3;
field_index(market_data_snapshot_full_refresh, symbol) -> 4;
field_index(market_data_snapshot_full_refresh, md_req_id) -> 5;
field_index(market_data_incremental_refresh, sender_comp_id) -> false;
field_index(market_data_incremental_refresh, target_comp_id) -> false;
field_index(market_data_incremental_refresh, msg_seq_num) -> false;
field_index(market_data_incremental_refresh, sending_time) -> 2;
field_index(market_data_incremental_refresh, md_req_id) -> 3;
field_index(market_data_incremental_refresh, financial_status) -> 4;
field_index(market_data_incremental_refresh, corporate_action) -> 5;
field_index(market_data_incremental_refresh, md_entry_px) -> 6;
field_index(market_data_incremental_refresh, currency) -> 7;
field_index(market_data_incremental_refresh, md_entry_size) -> 8;
field_index(market_data_incremental_refresh, md_entry_date) -> 9;
field_index(market_data_incremental_refresh, md_entry_time) -> 10;
field_index(market_data_incremental_refresh, tick_direction) -> 11;
field_index(market_data_incremental_refresh, md_mkt) -> 12;
field_index(market_data_incremental_refresh, trading_session_id) -> 13;
field_index(market_data_incremental_refresh, trading_session_sub_id) -> 14;
field_index(market_data_incremental_refresh, quote_condition) -> 15;
field_index(market_data_incremental_refresh, trade_condition) -> 16;
field_index(market_data_incremental_refresh, md_entry_originator) -> 17;
field_index(market_data_incremental_refresh, location_id) -> 18;
field_index(market_data_incremental_refresh, desk_id) -> 19;
field_index(market_data_incremental_refresh, open_close_settl_flag) -> 20;
field_index(market_data_incremental_refresh, time_in_force) -> 21;
field_index(market_data_incremental_refresh, expire_date) -> 22;
field_index(market_data_incremental_refresh, expire_time) -> 23;
field_index(market_data_incremental_refresh, min_qty) -> 24;
field_index(market_data_incremental_refresh, exec_inst) -> 25;
field_index(market_data_incremental_refresh, seller_days) -> 26;
field_index(market_data_incremental_refresh, order_id) -> 27;
field_index(market_data_incremental_refresh, quote_entry_id) -> 28;
field_index(market_data_incremental_refresh, md_entry_buyer) -> 29;
field_index(market_data_incremental_refresh, md_entry_seller) -> 30;
field_index(market_data_incremental_refresh, number_of_orders) -> 31;
field_index(market_data_incremental_refresh, md_entry_position_no) -> 32;
field_index(market_data_incremental_refresh, scope) -> 33;
field_index(market_data_incremental_refresh, price_delta) -> 34;
field_index(market_data_incremental_refresh, net_chg_prev_day) -> 35;
field_index(market_data_incremental_refresh, text) -> 36;
field_index(market_data_incremental_refresh, encoded_text) -> 37;
field_index(market_data_incremental_refresh, appl_queue_depth) -> 38;
field_index(market_data_incremental_refresh, appl_queue_resolution) -> 39;
field_index(market_data_request_reject, sender_comp_id) -> false;
field_index(market_data_request_reject, target_comp_id) -> false;
field_index(market_data_request_reject, msg_seq_num) -> false;
field_index(market_data_request_reject, sending_time) -> 2;
field_index(market_data_request_reject, md_req_id) -> 3;
field_index(market_data_request_reject, md_req_rej_reason) -> 4;
field_index(market_data_request_reject, text) -> 5;
field_index(market_data_request_reject, encoded_text) -> 6;
field_index(business_message_reject, sender_comp_id) -> false;
field_index(business_message_reject, target_comp_id) -> false;
field_index(business_message_reject, msg_seq_num) -> false;
field_index(business_message_reject, sending_time) -> 2;
field_index(business_message_reject, ref_seq_num) -> 3;
field_index(business_message_reject, ref_msg_type) -> 4;
field_index(business_message_reject, business_reject_ref_id) -> 5;
field_index(business_message_reject, business_reject_reason) -> 6;
field_index(business_message_reject, text) -> 7;
field_index(business_message_reject, encoded_text) -> 8;
field_index(order_mass_status_request, sender_comp_id) -> false;
field_index(order_mass_status_request, target_comp_id) -> false;
field_index(order_mass_status_request, msg_seq_num) -> false;
field_index(order_mass_status_request, mass_status_req_id) -> 2;
field_index(order_mass_status_request, mass_status_req_type) -> 3;
field_index(request_for_positions, sender_comp_id) -> false;
field_index(request_for_positions, target_comp_id) -> false;
field_index(request_for_positions, msg_seq_num) -> false;
field_index(request_for_positions, pos_req_id) -> 2;
field_index(request_for_positions, pos_req_type) -> 3;
field_index(position_report, sender_comp_id) -> false;
field_index(position_report, target_comp_id) -> false;
field_index(position_report, msg_seq_num) -> false;
field_index(position_report, pos_req_id) -> 2;
field_index(quote, sender_comp_id) -> false;
field_index(quote, target_comp_id) -> false;
field_index(quote, msg_seq_num) -> false;
field_index(quote, sending_time) -> false;
field_index(quote, quote_id) -> 2;
field_index(quote, quote_req_id) -> 3;
field_index(quote, bid_px) -> 4;
field_index(quote, offer_px) -> 5;
field_index(quote, bid_size) -> 6;
field_index(quote, offer_size) -> 7;
field_index(quote, quote_type) -> 8;
field_index(quote, quote_msg_id) -> 9;
field_index(quote, symbol) -> 10;
field_index(quote, settl_date) -> 11;
field_index(quote_request, sender_comp_id) -> false;
field_index(quote_request, target_comp_id) -> false;
field_index(quote_request, msg_seq_num) -> false;
field_index(quote_request, sending_time) -> false;
field_index(quote_request, quote_req_id) -> 2;
field_index(quote_request, private_quote) -> 3;
field_index(quote_request, no_related_sym) -> 4;
field_index(quote_request, booking_type) -> 5;
field_index(mass_quote, sender_comp_id) -> false;
field_index(mass_quote, target_comp_id) -> false;
field_index(mass_quote, msg_seq_num) -> false;
field_index(mass_quote, sending_time) -> false;
field_index(mass_quote, quote_id) -> 2;
field_index(mass_quote, quote_req_id) -> 3;
field_index(mass_quote, quote_type) -> 4;
field_index(mass_quote, no_quote_sets) -> 5;
field_index(quote_request_reject, sender_comp_id) -> false;
field_index(quote_request_reject, target_comp_id) -> false;
field_index(quote_request_reject, msg_seq_num) -> false;
field_index(quote_request_reject, sending_time) -> false;
field_index(quote_request_reject, quote_req_id) -> 2;
field_index(quote_request_reject, quote_request_reject_reason) -> 3;
field_index(quote_request_reject, no_related_sym) -> 4;
field_index(security_list_request, sender_comp_id) -> false;
field_index(security_list_request, target_comp_id) -> false;
field_index(security_list_request, msg_seq_num) -> false;
field_index(security_list_request, sending_time) -> false;
field_index(security_list_request, subscription_request_type) -> 2;
field_index(security_list_request, security_req_id) -> 3;
field_index(security_list_request, security_list_request_type) -> 4;
field_index(security_list_request, security_list_type) -> 5;
field_index(security_list, sender_comp_id) -> false;
field_index(security_list, target_comp_id) -> false;
field_index(security_list, msg_seq_num) -> false;
field_index(security_list, sending_time) -> false;
field_index(security_list, security_req_id) -> 2;
field_index(security_list, security_request_result) -> 3;
field_index(security_list, no_related_sym) -> 4;
field_index(security_list, security_reject_reason) -> 5;
field_index(quote_cancel, sender_comp_id) -> false;
field_index(quote_cancel, target_comp_id) -> false;
field_index(quote_cancel, msg_seq_num) -> false;
field_index(quote_cancel, sending_time) -> false;
field_index(quote_cancel, quote_req_id) -> 2;
field_index(quote_cancel, quote_cancel_type) -> 3;
field_index(quote_cancel, no_quote_entries) -> 4;
field_index(quote_status_report, quote_id) -> 2;
field_index(quote_status_report, quote_status) -> 3;
field_index(quote_status_report, quote_type) -> 4;
field_index(_,_) -> undefined.

decode_fields([{Code,Value}|Message], Record, RecordName, Default) ->
  Record1 = case field_index(RecordName, Code) of
    undefined -> erlang:setelement(Default, Record, [{Code,Value}|erlang:element(Default,Record)]);
    false -> Record;
    Index -> erlang:setelement(Index, Record, Value)
  end,
  decode_fields(Message, Record1, RecordName, Default);

decode_fields([], Record, _RecordName, Default) ->
  erlang:setelement(Default, Record, lists:reverse(erlang:element(Default,Record))).

field_by_number(<<"1">>) -> account;
field_by_number(<<"2">>) -> adv_id;
field_by_number(<<"3">>) -> adv_ref_id;
field_by_number(<<"4">>) -> adv_side;
field_by_number(<<"5">>) -> adv_trans_type;
field_by_number(<<"6">>) -> avg_px;
field_by_number(<<"7">>) -> begin_seq_no;
field_by_number(<<"8">>) -> begin_string;
field_by_number(<<"9">>) -> body_length;
field_by_number(<<"10">>) -> check_sum;
field_by_number(<<"11">>) -> cl_ord_id;
field_by_number(<<"12">>) -> commission;
field_by_number(<<"13">>) -> comm_type;
field_by_number(<<"14">>) -> cum_qty;
field_by_number(<<"15">>) -> currency;
field_by_number(<<"16">>) -> end_seq_no;
field_by_number(<<"17">>) -> exec_id;
field_by_number(<<"18">>) -> exec_inst;
field_by_number(<<"19">>) -> exec_ref_id;
field_by_number(<<"20">>) -> exec_trans_type;
field_by_number(<<"21">>) -> handl_inst;
field_by_number(<<"22">>) -> security_id_source;
field_by_number(<<"23">>) -> ioi_id;
field_by_number(<<"24">>) -> ioi_oth_svc;
field_by_number(<<"25">>) -> ioi_qlty_ind;
field_by_number(<<"26">>) -> ioi_ref_id;
field_by_number(<<"27">>) -> ioi_qty;
field_by_number(<<"28">>) -> ioi_trans_type;
field_by_number(<<"29">>) -> last_capacity;
field_by_number(<<"30">>) -> last_mkt;
field_by_number(<<"31">>) -> last_px;
field_by_number(<<"32">>) -> last_qty;
field_by_number(<<"33">>) -> no_lines_of_text;
field_by_number(<<"34">>) -> msg_seq_num;
field_by_number(<<"35">>) -> msg_type;
field_by_number(<<"36">>) -> new_seq_no;
field_by_number(<<"37">>) -> order_id;
field_by_number(<<"38">>) -> order_qty;
field_by_number(<<"39">>) -> ord_status;
field_by_number(<<"40">>) -> ord_type;
field_by_number(<<"41">>) -> orig_cl_ord_id;
field_by_number(<<"42">>) -> orig_time;
field_by_number(<<"43">>) -> poss_dup_flag;
field_by_number(<<"44">>) -> price;
field_by_number(<<"45">>) -> ref_seq_num;
field_by_number(<<"46">>) -> relatd_sym;
field_by_number(<<"47">>) -> rule80a;
field_by_number(<<"48">>) -> security_id;
field_by_number(<<"49">>) -> sender_comp_id;
field_by_number(<<"50">>) -> sender_sub_id;
field_by_number(<<"51">>) -> sending_date;
field_by_number(<<"52">>) -> sending_time;
field_by_number(<<"53">>) -> quantity;
field_by_number(<<"54">>) -> side;
field_by_number(<<"55">>) -> symbol;
field_by_number(<<"56">>) -> target_comp_id;
field_by_number(<<"57">>) -> target_sub_id;
field_by_number(<<"58">>) -> text;
field_by_number(<<"59">>) -> time_in_force;
field_by_number(<<"60">>) -> transact_time;
field_by_number(<<"61">>) -> urgency;
field_by_number(<<"62">>) -> valid_until_time;
field_by_number(<<"63">>) -> settl_type;
field_by_number(<<"64">>) -> settl_date;
field_by_number(<<"65">>) -> symbol_sfx;
field_by_number(<<"66">>) -> list_id;
field_by_number(<<"67">>) -> list_seq_no;
field_by_number(<<"68">>) -> tot_no_orders;
field_by_number(<<"69">>) -> list_exec_inst;
field_by_number(<<"70">>) -> alloc_id;
field_by_number(<<"71">>) -> alloc_trans_type;
field_by_number(<<"72">>) -> ref_alloc_id;
field_by_number(<<"73">>) -> no_orders;
field_by_number(<<"74">>) -> avg_px_precision;
field_by_number(<<"75">>) -> trade_date;
field_by_number(<<"76">>) -> exec_broker;
field_by_number(<<"77">>) -> position_effect;
field_by_number(<<"78">>) -> no_allocs;
field_by_number(<<"79">>) -> alloc_account;
field_by_number(<<"80">>) -> alloc_qty;
field_by_number(<<"81">>) -> process_code;
field_by_number(<<"82">>) -> no_rpts;
field_by_number(<<"83">>) -> rpt_seq;
field_by_number(<<"84">>) -> cxl_qty;
field_by_number(<<"85">>) -> no_dlvy_inst;
field_by_number(<<"86">>) -> dlvy_inst;
field_by_number(<<"87">>) -> alloc_status;
field_by_number(<<"88">>) -> alloc_rej_code;
field_by_number(<<"89">>) -> signature;
field_by_number(<<"90">>) -> secure_data_len;
field_by_number(<<"91">>) -> secure_data;
field_by_number(<<"92">>) -> broker_of_credit;
field_by_number(<<"93">>) -> signature_length;
field_by_number(<<"94">>) -> email_type;
field_by_number(<<"95">>) -> raw_data_length;
field_by_number(<<"96">>) -> raw_data;
field_by_number(<<"97">>) -> poss_resend;
field_by_number(<<"98">>) -> encrypt_method;
field_by_number(<<"99">>) -> stop_px;
field_by_number(<<"100">>) -> ex_destination;
field_by_number(<<"102">>) -> cxl_rej_reason;
field_by_number(<<"103">>) -> ord_rej_reason;
field_by_number(<<"104">>) -> ioi_qualifier;
field_by_number(<<"105">>) -> wave_no;
field_by_number(<<"106">>) -> issuer;
field_by_number(<<"107">>) -> security_desc;
field_by_number(<<"108">>) -> heart_bt_int;
field_by_number(<<"109">>) -> client_id;
field_by_number(<<"110">>) -> min_qty;
field_by_number(<<"111">>) -> max_floor;
field_by_number(<<"112">>) -> test_req_id;
field_by_number(<<"113">>) -> report_to_exch;
field_by_number(<<"114">>) -> locate_reqd;
field_by_number(<<"115">>) -> on_behalf_of_comp_id;
field_by_number(<<"116">>) -> on_behalf_of_sub_id;
field_by_number(<<"117">>) -> quote_id;
field_by_number(<<"118">>) -> net_money;
field_by_number(<<"119">>) -> settl_curr_amt;
field_by_number(<<"120">>) -> settl_currency;
field_by_number(<<"121">>) -> forex_req;
field_by_number(<<"122">>) -> orig_sending_time;
field_by_number(<<"123">>) -> gap_fill_flag;
field_by_number(<<"124">>) -> no_execs;
field_by_number(<<"125">>) -> cxl_type;
field_by_number(<<"126">>) -> expire_time;
field_by_number(<<"127">>) -> dk_reason;
field_by_number(<<"128">>) -> deliver_to_comp_id;
field_by_number(<<"129">>) -> deliver_to_sub_id;
field_by_number(<<"130">>) -> ioi_natural_flag;
field_by_number(<<"131">>) -> quote_req_id;
field_by_number(<<"132">>) -> bid_px;
field_by_number(<<"133">>) -> offer_px;
field_by_number(<<"134">>) -> bid_size;
field_by_number(<<"135">>) -> offer_size;
field_by_number(<<"136">>) -> no_misc_fees;
field_by_number(<<"137">>) -> misc_fee_amt;
field_by_number(<<"138">>) -> misc_fee_curr;
field_by_number(<<"139">>) -> misc_fee_type;
field_by_number(<<"140">>) -> prev_close_px;
field_by_number(<<"141">>) -> reset_seq_num_flag;
field_by_number(<<"142">>) -> sender_location_id;
field_by_number(<<"143">>) -> target_location_id;
field_by_number(<<"144">>) -> on_behalf_of_location_id;
field_by_number(<<"145">>) -> deliver_to_location_id;
field_by_number(<<"146">>) -> no_related_sym;
field_by_number(<<"147">>) -> subject;
field_by_number(<<"148">>) -> headline;
field_by_number(<<"149">>) -> url_link;
field_by_number(<<"150">>) -> exec_type;
field_by_number(<<"151">>) -> leaves_qty;
field_by_number(<<"152">>) -> cash_order_qty;
field_by_number(<<"153">>) -> alloc_avg_px;
field_by_number(<<"154">>) -> alloc_net_money;
field_by_number(<<"155">>) -> settl_curr_fx_rate;
field_by_number(<<"156">>) -> settl_curr_fx_rate_calc;
field_by_number(<<"157">>) -> num_days_interest;
field_by_number(<<"158">>) -> accrued_interest_rate;
field_by_number(<<"159">>) -> accrued_interest_amt;
field_by_number(<<"160">>) -> settl_inst_mode;
field_by_number(<<"161">>) -> alloc_text;
field_by_number(<<"162">>) -> settl_inst_id;
field_by_number(<<"163">>) -> settl_inst_trans_type;
field_by_number(<<"164">>) -> email_thread_id;
field_by_number(<<"165">>) -> settl_inst_source;
field_by_number(<<"166">>) -> settl_location;
field_by_number(<<"167">>) -> security_type;
field_by_number(<<"168">>) -> effective_time;
field_by_number(<<"169">>) -> stand_inst_db_type;
field_by_number(<<"170">>) -> stand_inst_db_name;
field_by_number(<<"171">>) -> stand_inst_db_id;
field_by_number(<<"172">>) -> settl_delivery_type;
field_by_number(<<"173">>) -> settl_depository_code;
field_by_number(<<"174">>) -> settl_brkr_code;
field_by_number(<<"175">>) -> settl_inst_code;
field_by_number(<<"176">>) -> security_settl_agent_name;
field_by_number(<<"177">>) -> security_settl_agent_code;
field_by_number(<<"178">>) -> security_settl_agent_acct_num;
field_by_number(<<"179">>) -> security_settl_agent_acct_name;
field_by_number(<<"180">>) -> security_settl_agent_contact_name;
field_by_number(<<"181">>) -> security_settl_agent_contact_phone;
field_by_number(<<"182">>) -> cash_settl_agent_name;
field_by_number(<<"183">>) -> cash_settl_agent_code;
field_by_number(<<"184">>) -> cash_settl_agent_acct_num;
field_by_number(<<"185">>) -> cash_settl_agent_acct_name;
field_by_number(<<"186">>) -> cash_settl_agent_contact_name;
field_by_number(<<"187">>) -> cash_settl_agent_contact_phone;
field_by_number(<<"188">>) -> bid_spot_rate;
field_by_number(<<"189">>) -> bid_forward_points;
field_by_number(<<"190">>) -> offer_spot_rate;
field_by_number(<<"191">>) -> offer_forward_points;
field_by_number(<<"192">>) -> order_qty2;
field_by_number(<<"193">>) -> settl_date2;
field_by_number(<<"194">>) -> last_spot_rate;
field_by_number(<<"195">>) -> last_forward_points;
field_by_number(<<"196">>) -> alloc_link_id;
field_by_number(<<"197">>) -> alloc_link_type;
field_by_number(<<"198">>) -> secondary_order_id;
field_by_number(<<"199">>) -> no_ioi_qualifiers;
field_by_number(<<"200">>) -> maturity_month_year;
field_by_number(<<"201">>) -> put_or_call;
field_by_number(<<"202">>) -> strike_price;
field_by_number(<<"203">>) -> covered_or_uncovered;
field_by_number(<<"204">>) -> customer_or_firm;
field_by_number(<<"205">>) -> maturity_day;
field_by_number(<<"206">>) -> opt_attribute;
field_by_number(<<"207">>) -> security_exchange;
field_by_number(<<"208">>) -> notify_broker_of_credit;
field_by_number(<<"209">>) -> alloc_handl_inst;
field_by_number(<<"210">>) -> max_show;
field_by_number(<<"211">>) -> peg_offset_value;
field_by_number(<<"212">>) -> xml_data_len;
field_by_number(<<"213">>) -> xml_data;
field_by_number(<<"214">>) -> settl_inst_ref_id;
field_by_number(<<"215">>) -> no_routing_ids;
field_by_number(<<"216">>) -> routing_type;
field_by_number(<<"217">>) -> routing_id;
field_by_number(<<"218">>) -> spread;
field_by_number(<<"219">>) -> benchmark;
field_by_number(<<"220">>) -> benchmark_curve_currency;
field_by_number(<<"221">>) -> benchmark_curve_name;
field_by_number(<<"222">>) -> benchmark_curve_point;
field_by_number(<<"223">>) -> coupon_rate;
field_by_number(<<"224">>) -> coupon_payment_date;
field_by_number(<<"225">>) -> issue_date;
field_by_number(<<"226">>) -> repurchase_term;
field_by_number(<<"227">>) -> repurchase_rate;
field_by_number(<<"228">>) -> factor;
field_by_number(<<"229">>) -> trade_origination_date;
field_by_number(<<"230">>) -> ex_date;
field_by_number(<<"231">>) -> contract_multiplier;
field_by_number(<<"232">>) -> no_stipulations;
field_by_number(<<"233">>) -> stipulation_type;
field_by_number(<<"234">>) -> stipulation_value;
field_by_number(<<"235">>) -> yield_type;
field_by_number(<<"236">>) -> yield;
field_by_number(<<"237">>) -> total_takedown;
field_by_number(<<"238">>) -> concession;
field_by_number(<<"239">>) -> repo_collateral_security_type;
field_by_number(<<"240">>) -> redemption_date;
field_by_number(<<"241">>) -> underlying_coupon_payment_date;
field_by_number(<<"242">>) -> underlying_issue_date;
field_by_number(<<"243">>) -> underlying_repo_collateral_security_type;
field_by_number(<<"244">>) -> underlying_repurchase_term;
field_by_number(<<"245">>) -> underlying_repurchase_rate;
field_by_number(<<"246">>) -> underlying_factor;
field_by_number(<<"247">>) -> underlying_redemption_date;
field_by_number(<<"248">>) -> leg_coupon_payment_date;
field_by_number(<<"249">>) -> leg_issue_date;
field_by_number(<<"250">>) -> leg_repo_collateral_security_type;
field_by_number(<<"251">>) -> leg_repurchase_term;
field_by_number(<<"252">>) -> leg_repurchase_rate;
field_by_number(<<"253">>) -> leg_factor;
field_by_number(<<"254">>) -> leg_redemption_date;
field_by_number(<<"255">>) -> credit_rating;
field_by_number(<<"256">>) -> underlying_credit_rating;
field_by_number(<<"257">>) -> leg_credit_rating;
field_by_number(<<"258">>) -> traded_flat_switch;
field_by_number(<<"259">>) -> basis_feature_date;
field_by_number(<<"260">>) -> basis_feature_price;
field_by_number(<<"262">>) -> md_req_id;
field_by_number(<<"263">>) -> subscription_request_type;
field_by_number(<<"264">>) -> market_depth;
field_by_number(<<"265">>) -> md_update_type;
field_by_number(<<"266">>) -> aggregated_book;
field_by_number(<<"267">>) -> no_md_entry_types;
field_by_number(<<"268">>) -> no_md_entries;
field_by_number(<<"269">>) -> md_entry_type;
field_by_number(<<"270">>) -> md_entry_px;
field_by_number(<<"271">>) -> md_entry_size;
field_by_number(<<"272">>) -> md_entry_date;
field_by_number(<<"273">>) -> md_entry_time;
field_by_number(<<"274">>) -> tick_direction;
field_by_number(<<"275">>) -> md_mkt;
field_by_number(<<"276">>) -> quote_condition;
field_by_number(<<"277">>) -> trade_condition;
field_by_number(<<"278">>) -> md_entry_id;
field_by_number(<<"279">>) -> md_update_action;
field_by_number(<<"280">>) -> md_entry_ref_id;
field_by_number(<<"281">>) -> md_req_rej_reason;
field_by_number(<<"282">>) -> md_entry_originator;
field_by_number(<<"283">>) -> location_id;
field_by_number(<<"284">>) -> desk_id;
field_by_number(<<"285">>) -> delete_reason;
field_by_number(<<"286">>) -> open_close_settl_flag;
field_by_number(<<"287">>) -> seller_days;
field_by_number(<<"288">>) -> md_entry_buyer;
field_by_number(<<"289">>) -> md_entry_seller;
field_by_number(<<"290">>) -> md_entry_position_no;
field_by_number(<<"291">>) -> financial_status;
field_by_number(<<"292">>) -> corporate_action;
field_by_number(<<"293">>) -> def_bid_size;
field_by_number(<<"294">>) -> def_offer_size;
field_by_number(<<"295">>) -> no_quote_entries;
field_by_number(<<"296">>) -> no_quote_sets;
field_by_number(<<"297">>) -> quote_status;
field_by_number(<<"298">>) -> quote_cancel_type;
field_by_number(<<"299">>) -> quote_entry_id;
field_by_number(<<"300">>) -> quote_reject_reason;
field_by_number(<<"301">>) -> quote_response_level;
field_by_number(<<"302">>) -> quote_set_id;
field_by_number(<<"303">>) -> quote_request_type;
field_by_number(<<"304">>) -> tot_no_quote_entries;
field_by_number(<<"305">>) -> underlying_security_id_source;
field_by_number(<<"306">>) -> underlying_issuer;
field_by_number(<<"307">>) -> underlying_security_desc;
field_by_number(<<"308">>) -> underlying_security_exchange;
field_by_number(<<"309">>) -> underlying_security_id;
field_by_number(<<"310">>) -> underlying_security_type;
field_by_number(<<"311">>) -> underlying_symbol;
field_by_number(<<"312">>) -> underlying_symbol_sfx;
field_by_number(<<"313">>) -> underlying_maturity_month_year;
field_by_number(<<"314">>) -> underlying_maturity_day;
field_by_number(<<"315">>) -> underlying_put_or_call;
field_by_number(<<"316">>) -> underlying_strike_price;
field_by_number(<<"317">>) -> underlying_opt_attribute;
field_by_number(<<"318">>) -> underlying_currency;
field_by_number(<<"319">>) -> ratio_qty;
field_by_number(<<"320">>) -> security_req_id;
field_by_number(<<"321">>) -> security_request_type;
field_by_number(<<"322">>) -> security_response_id;
field_by_number(<<"323">>) -> security_response_type;
field_by_number(<<"324">>) -> security_status_req_id;
field_by_number(<<"325">>) -> unsolicited_indicator;
field_by_number(<<"326">>) -> security_trading_status;
field_by_number(<<"327">>) -> halt_reason_char;
field_by_number(<<"328">>) -> in_view_of_common;
field_by_number(<<"329">>) -> due_to_related;
field_by_number(<<"330">>) -> buy_volume;
field_by_number(<<"331">>) -> sell_volume;
field_by_number(<<"332">>) -> high_px;
field_by_number(<<"333">>) -> low_px;
field_by_number(<<"334">>) -> adjustment;
field_by_number(<<"335">>) -> trad_ses_req_id;
field_by_number(<<"336">>) -> trading_session_id;
field_by_number(<<"337">>) -> contra_trader;
field_by_number(<<"338">>) -> trad_ses_method;
field_by_number(<<"339">>) -> trad_ses_mode;
field_by_number(<<"340">>) -> trad_ses_status;
field_by_number(<<"341">>) -> trad_ses_start_time;
field_by_number(<<"342">>) -> trad_ses_open_time;
field_by_number(<<"343">>) -> trad_ses_pre_close_time;
field_by_number(<<"344">>) -> trad_ses_close_time;
field_by_number(<<"345">>) -> trad_ses_end_time;
field_by_number(<<"346">>) -> number_of_orders;
field_by_number(<<"347">>) -> message_encoding;
field_by_number(<<"348">>) -> encoded_issuer_len;
field_by_number(<<"349">>) -> encoded_issuer;
field_by_number(<<"350">>) -> encoded_security_desc_len;
field_by_number(<<"351">>) -> encoded_security_desc;
field_by_number(<<"352">>) -> encoded_list_exec_inst_len;
field_by_number(<<"353">>) -> encoded_list_exec_inst;
field_by_number(<<"354">>) -> encoded_text_len;
field_by_number(<<"355">>) -> encoded_text;
field_by_number(<<"356">>) -> encoded_subject_len;
field_by_number(<<"357">>) -> encoded_subject;
field_by_number(<<"358">>) -> encoded_headline_len;
field_by_number(<<"359">>) -> encoded_headline;
field_by_number(<<"360">>) -> encoded_alloc_text_len;
field_by_number(<<"361">>) -> encoded_alloc_text;
field_by_number(<<"362">>) -> encoded_underlying_issuer_len;
field_by_number(<<"363">>) -> encoded_underlying_issuer;
field_by_number(<<"364">>) -> encoded_underlying_security_desc_len;
field_by_number(<<"365">>) -> encoded_underlying_security_desc;
field_by_number(<<"366">>) -> alloc_price;
field_by_number(<<"367">>) -> quote_set_valid_until_time;
field_by_number(<<"368">>) -> quote_entry_reject_reason;
field_by_number(<<"369">>) -> last_msg_seq_num_processed;
field_by_number(<<"370">>) -> on_behalf_of_sending_time;
field_by_number(<<"371">>) -> ref_tag_id;
field_by_number(<<"372">>) -> ref_msg_type;
field_by_number(<<"373">>) -> session_reject_reason;
field_by_number(<<"374">>) -> bid_request_trans_type;
field_by_number(<<"375">>) -> contra_broker;
field_by_number(<<"376">>) -> compliance_id;
field_by_number(<<"377">>) -> solicited_flag;
field_by_number(<<"378">>) -> exec_restatement_reason;
field_by_number(<<"379">>) -> business_reject_ref_id;
field_by_number(<<"380">>) -> business_reject_reason;
field_by_number(<<"381">>) -> gross_trade_amt;
field_by_number(<<"382">>) -> no_contra_brokers;
field_by_number(<<"383">>) -> max_message_size;
field_by_number(<<"384">>) -> no_msg_types;
field_by_number(<<"385">>) -> msg_direction;
field_by_number(<<"386">>) -> no_trading_sessions;
field_by_number(<<"387">>) -> total_volume_traded;
field_by_number(<<"388">>) -> discretion_inst;
field_by_number(<<"389">>) -> discretion_offset_value;
field_by_number(<<"390">>) -> bid_id;
field_by_number(<<"391">>) -> client_bid_id;
field_by_number(<<"392">>) -> list_name;
field_by_number(<<"393">>) -> tot_no_related_sym;
field_by_number(<<"394">>) -> bid_type;
field_by_number(<<"395">>) -> num_tickets;
field_by_number(<<"396">>) -> side_value1;
field_by_number(<<"397">>) -> side_value2;
field_by_number(<<"398">>) -> no_bid_descriptors;
field_by_number(<<"399">>) -> bid_descriptor_type;
field_by_number(<<"400">>) -> bid_descriptor;
field_by_number(<<"401">>) -> side_value_ind;
field_by_number(<<"402">>) -> liquidity_pct_low;
field_by_number(<<"403">>) -> liquidity_pct_high;
field_by_number(<<"404">>) -> liquidity_value;
field_by_number(<<"405">>) -> efp_tracking_error;
field_by_number(<<"406">>) -> fair_value;
field_by_number(<<"407">>) -> outside_index_pct;
field_by_number(<<"408">>) -> value_of_futures;
field_by_number(<<"409">>) -> liquidity_ind_type;
field_by_number(<<"410">>) -> wt_average_liquidity;
field_by_number(<<"411">>) -> exchange_for_physical;
field_by_number(<<"412">>) -> out_main_cntry_u_index;
field_by_number(<<"413">>) -> cross_percent;
field_by_number(<<"414">>) -> prog_rpt_reqs;
field_by_number(<<"415">>) -> prog_period_interval;
field_by_number(<<"416">>) -> inc_tax_ind;
field_by_number(<<"417">>) -> num_bidders;
field_by_number(<<"418">>) -> bid_trade_type;
field_by_number(<<"419">>) -> basis_px_type;
field_by_number(<<"420">>) -> no_bid_components;
field_by_number(<<"421">>) -> country;
field_by_number(<<"422">>) -> tot_no_strikes;
field_by_number(<<"423">>) -> price_type;
field_by_number(<<"424">>) -> day_order_qty;
field_by_number(<<"425">>) -> day_cum_qty;
field_by_number(<<"426">>) -> day_avg_px;
field_by_number(<<"427">>) -> gt_booking_inst;
field_by_number(<<"428">>) -> no_strikes;
field_by_number(<<"429">>) -> list_status_type;
field_by_number(<<"430">>) -> net_gross_ind;
field_by_number(<<"431">>) -> list_order_status;
field_by_number(<<"432">>) -> expire_date;
field_by_number(<<"433">>) -> list_exec_inst_type;
field_by_number(<<"434">>) -> cxl_rej_response_to;
field_by_number(<<"435">>) -> underlying_coupon_rate;
field_by_number(<<"436">>) -> underlying_contract_multiplier;
field_by_number(<<"437">>) -> contra_trade_qty;
field_by_number(<<"438">>) -> contra_trade_time;
field_by_number(<<"439">>) -> clearing_firm;
field_by_number(<<"440">>) -> clearing_account;
field_by_number(<<"441">>) -> liquidity_num_securities;
field_by_number(<<"442">>) -> multi_leg_reporting_type;
field_by_number(<<"443">>) -> strike_time;
field_by_number(<<"444">>) -> list_status_text;
field_by_number(<<"445">>) -> encoded_list_status_text_len;
field_by_number(<<"446">>) -> encoded_list_status_text;
field_by_number(<<"447">>) -> party_id_source;
field_by_number(<<"448">>) -> party_id;
field_by_number(<<"449">>) -> total_volume_traded_date;
field_by_number(<<"450">>) -> total_volume_traded_time;
field_by_number(<<"451">>) -> net_chg_prev_day;
field_by_number(<<"452">>) -> party_role;
field_by_number(<<"453">>) -> no_party_ids;
field_by_number(<<"454">>) -> no_security_alt_id;
field_by_number(<<"455">>) -> security_alt_id;
field_by_number(<<"456">>) -> security_alt_id_source;
field_by_number(<<"457">>) -> no_underlying_security_alt_id;
field_by_number(<<"458">>) -> underlying_security_alt_id;
field_by_number(<<"459">>) -> underlying_security_alt_id_source;
field_by_number(<<"460">>) -> product;
field_by_number(<<"461">>) -> cfi_code;
field_by_number(<<"462">>) -> underlying_product;
field_by_number(<<"463">>) -> underlying_cfi_code;
field_by_number(<<"464">>) -> test_message_indicator;
field_by_number(<<"465">>) -> quantity_type;
field_by_number(<<"466">>) -> booking_ref_id;
field_by_number(<<"467">>) -> individual_alloc_id;
field_by_number(<<"468">>) -> rounding_direction;
field_by_number(<<"469">>) -> rounding_modulus;
field_by_number(<<"470">>) -> country_of_issue;
field_by_number(<<"471">>) -> state_or_province_of_issue;
field_by_number(<<"472">>) -> locale_of_issue;
field_by_number(<<"473">>) -> no_regist_dtls;
field_by_number(<<"474">>) -> mailing_dtls;
field_by_number(<<"475">>) -> investor_country_of_residence;
field_by_number(<<"476">>) -> payment_ref;
field_by_number(<<"477">>) -> distrib_payment_method;
field_by_number(<<"478">>) -> cash_distrib_curr;
field_by_number(<<"479">>) -> comm_currency;
field_by_number(<<"480">>) -> cancellation_rights;
field_by_number(<<"481">>) -> money_laundering_status;
field_by_number(<<"482">>) -> mailing_inst;
field_by_number(<<"483">>) -> trans_bkd_time;
field_by_number(<<"484">>) -> exec_price_type;
field_by_number(<<"485">>) -> exec_price_adjustment;
field_by_number(<<"486">>) -> date_of_birth;
field_by_number(<<"487">>) -> trade_report_trans_type;
field_by_number(<<"488">>) -> card_holder_name;
field_by_number(<<"489">>) -> card_number;
field_by_number(<<"490">>) -> card_exp_date;
field_by_number(<<"491">>) -> card_iss_num;
field_by_number(<<"492">>) -> payment_method;
field_by_number(<<"493">>) -> regist_acct_type;
field_by_number(<<"494">>) -> designation;
field_by_number(<<"495">>) -> tax_advantage_type;
field_by_number(<<"496">>) -> regist_rej_reason_text;
field_by_number(<<"497">>) -> fund_renew_waiv;
field_by_number(<<"498">>) -> cash_distrib_agent_name;
field_by_number(<<"499">>) -> cash_distrib_agent_code;
field_by_number(<<"500">>) -> cash_distrib_agent_acct_number;
field_by_number(<<"501">>) -> cash_distrib_pay_ref;
field_by_number(<<"502">>) -> cash_distrib_agent_acct_name;
field_by_number(<<"503">>) -> card_start_date;
field_by_number(<<"504">>) -> payment_date;
field_by_number(<<"505">>) -> payment_remitter_id;
field_by_number(<<"506">>) -> regist_status;
field_by_number(<<"507">>) -> regist_rej_reason_code;
field_by_number(<<"508">>) -> regist_ref_id;
field_by_number(<<"509">>) -> regist_dtls;
field_by_number(<<"510">>) -> no_distrib_insts;
field_by_number(<<"511">>) -> regist_email;
field_by_number(<<"512">>) -> distrib_percentage;
field_by_number(<<"513">>) -> regist_id;
field_by_number(<<"514">>) -> regist_trans_type;
field_by_number(<<"515">>) -> exec_valuation_point;
field_by_number(<<"516">>) -> order_percent;
field_by_number(<<"517">>) -> ownership_type;
field_by_number(<<"518">>) -> no_cont_amts;
field_by_number(<<"519">>) -> cont_amt_type;
field_by_number(<<"520">>) -> cont_amt_value;
field_by_number(<<"521">>) -> cont_amt_curr;
field_by_number(<<"522">>) -> owner_type;
field_by_number(<<"523">>) -> party_sub_id;
field_by_number(<<"524">>) -> nested_party_id;
field_by_number(<<"525">>) -> nested_party_id_source;
field_by_number(<<"526">>) -> secondary_cl_ord_id;
field_by_number(<<"527">>) -> secondary_exec_id;
field_by_number(<<"528">>) -> order_capacity;
field_by_number(<<"529">>) -> order_restrictions;
field_by_number(<<"530">>) -> mass_cancel_request_type;
field_by_number(<<"531">>) -> mass_cancel_response;
field_by_number(<<"532">>) -> mass_cancel_reject_reason;
field_by_number(<<"533">>) -> total_affected_orders;
field_by_number(<<"534">>) -> no_affected_orders;
field_by_number(<<"535">>) -> affected_order_id;
field_by_number(<<"536">>) -> affected_secondary_order_id;
field_by_number(<<"537">>) -> quote_type;
field_by_number(<<"538">>) -> nested_party_role;
field_by_number(<<"539">>) -> no_nested_party_ids;
field_by_number(<<"540">>) -> total_accrued_interest_amt;
field_by_number(<<"541">>) -> maturity_date;
field_by_number(<<"542">>) -> underlying_maturity_date;
field_by_number(<<"543">>) -> instr_registry;
field_by_number(<<"544">>) -> cash_margin;
field_by_number(<<"545">>) -> nested_party_sub_id;
field_by_number(<<"546">>) -> scope;
field_by_number(<<"547">>) -> md_implicit_delete;
field_by_number(<<"548">>) -> cross_id;
field_by_number(<<"549">>) -> cross_type;
field_by_number(<<"550">>) -> cross_prioritization;
field_by_number(<<"551">>) -> orig_cross_id;
field_by_number(<<"552">>) -> no_sides;
field_by_number(<<"553">>) -> username;
field_by_number(<<"554">>) -> password;
field_by_number(<<"555">>) -> no_legs;
field_by_number(<<"556">>) -> leg_currency;
field_by_number(<<"557">>) -> tot_no_security_types;
field_by_number(<<"558">>) -> no_security_types;
field_by_number(<<"559">>) -> security_list_request_type;
field_by_number(<<"560">>) -> security_request_result;
field_by_number(<<"561">>) -> round_lot;
field_by_number(<<"562">>) -> min_trade_vol;
field_by_number(<<"563">>) -> multi_leg_rpt_type_req;
field_by_number(<<"564">>) -> leg_position_effect;
field_by_number(<<"565">>) -> leg_covered_or_uncovered;
field_by_number(<<"566">>) -> leg_price;
field_by_number(<<"567">>) -> trad_ses_status_rej_reason;
field_by_number(<<"568">>) -> trade_request_id;
field_by_number(<<"569">>) -> trade_request_type;
field_by_number(<<"570">>) -> previously_reported;
field_by_number(<<"571">>) -> trade_report_id;
field_by_number(<<"572">>) -> trade_report_ref_id;
field_by_number(<<"573">>) -> match_status;
field_by_number(<<"574">>) -> match_type;
field_by_number(<<"575">>) -> odd_lot;
field_by_number(<<"576">>) -> no_clearing_instructions;
field_by_number(<<"577">>) -> clearing_instruction;
field_by_number(<<"578">>) -> trade_input_source;
field_by_number(<<"579">>) -> trade_input_device;
field_by_number(<<"580">>) -> no_dates;
field_by_number(<<"581">>) -> account_type;
field_by_number(<<"582">>) -> cust_order_capacity;
field_by_number(<<"583">>) -> cl_ord_link_id;
field_by_number(<<"584">>) -> mass_status_req_id;
field_by_number(<<"585">>) -> mass_status_req_type;
field_by_number(<<"586">>) -> orig_ord_mod_time;
field_by_number(<<"587">>) -> leg_settl_type;
field_by_number(<<"588">>) -> leg_settl_date;
field_by_number(<<"589">>) -> day_booking_inst;
field_by_number(<<"590">>) -> booking_unit;
field_by_number(<<"591">>) -> prealloc_method;
field_by_number(<<"592">>) -> underlying_country_of_issue;
field_by_number(<<"593">>) -> underlying_state_or_province_of_issue;
field_by_number(<<"594">>) -> underlying_locale_of_issue;
field_by_number(<<"595">>) -> underlying_instr_registry;
field_by_number(<<"596">>) -> leg_country_of_issue;
field_by_number(<<"597">>) -> leg_state_or_province_of_issue;
field_by_number(<<"598">>) -> leg_locale_of_issue;
field_by_number(<<"599">>) -> leg_instr_registry;
field_by_number(<<"600">>) -> leg_symbol;
field_by_number(<<"601">>) -> leg_symbol_sfx;
field_by_number(<<"602">>) -> leg_security_id;
field_by_number(<<"603">>) -> leg_security_id_source;
field_by_number(<<"604">>) -> no_leg_security_alt_id;
field_by_number(<<"605">>) -> leg_security_alt_id;
field_by_number(<<"606">>) -> leg_security_alt_id_source;
field_by_number(<<"607">>) -> leg_product;
field_by_number(<<"608">>) -> leg_cfi_code;
field_by_number(<<"609">>) -> leg_security_type;
field_by_number(<<"610">>) -> leg_maturity_month_year;
field_by_number(<<"611">>) -> leg_maturity_date;
field_by_number(<<"612">>) -> leg_strike_price;
field_by_number(<<"613">>) -> leg_opt_attribute;
field_by_number(<<"614">>) -> leg_contract_multiplier;
field_by_number(<<"615">>) -> leg_coupon_rate;
field_by_number(<<"616">>) -> leg_security_exchange;
field_by_number(<<"617">>) -> leg_issuer;
field_by_number(<<"618">>) -> encoded_leg_issuer_len;
field_by_number(<<"619">>) -> encoded_leg_issuer;
field_by_number(<<"620">>) -> leg_security_desc;
field_by_number(<<"621">>) -> encoded_leg_security_desc_len;
field_by_number(<<"622">>) -> encoded_leg_security_desc;
field_by_number(<<"623">>) -> leg_ratio_qty;
field_by_number(<<"624">>) -> leg_side;
field_by_number(<<"625">>) -> trading_session_sub_id;
field_by_number(<<"626">>) -> alloc_type;
field_by_number(<<"627">>) -> no_hops;
field_by_number(<<"628">>) -> hop_comp_id;
field_by_number(<<"629">>) -> hop_sending_time;
field_by_number(<<"630">>) -> hop_ref_id;
field_by_number(<<"631">>) -> mid_px;
field_by_number(<<"632">>) -> bid_yield;
field_by_number(<<"633">>) -> mid_yield;
field_by_number(<<"634">>) -> offer_yield;
field_by_number(<<"635">>) -> clearing_fee_indicator;
field_by_number(<<"636">>) -> working_indicator;
field_by_number(<<"637">>) -> leg_last_px;
field_by_number(<<"638">>) -> priority_indicator;
field_by_number(<<"639">>) -> price_improvement;
field_by_number(<<"640">>) -> price2;
field_by_number(<<"641">>) -> last_forward_points2;
field_by_number(<<"642">>) -> bid_forward_points2;
field_by_number(<<"643">>) -> offer_forward_points2;
field_by_number(<<"644">>) -> rfq_req_id;
field_by_number(<<"645">>) -> mkt_bid_px;
field_by_number(<<"646">>) -> mkt_offer_px;
field_by_number(<<"647">>) -> min_bid_size;
field_by_number(<<"648">>) -> min_offer_size;
field_by_number(<<"649">>) -> quote_status_req_id;
field_by_number(<<"650">>) -> legal_confirm;
field_by_number(<<"651">>) -> underlying_last_px;
field_by_number(<<"652">>) -> underlying_last_qty;
field_by_number(<<"653">>) -> sec_def_status;
field_by_number(<<"654">>) -> leg_ref_id;
field_by_number(<<"655">>) -> contra_leg_ref_id;
field_by_number(<<"656">>) -> settl_curr_bid_fx_rate;
field_by_number(<<"657">>) -> settl_curr_offer_fx_rate;
field_by_number(<<"658">>) -> quote_request_reject_reason;
field_by_number(<<"659">>) -> side_compliance_id;
field_by_number(<<"660">>) -> acct_id_source;
field_by_number(<<"661">>) -> alloc_acct_id_source;
field_by_number(<<"662">>) -> benchmark_price;
field_by_number(<<"663">>) -> benchmark_price_type;
field_by_number(<<"664">>) -> confirm_id;
field_by_number(<<"665">>) -> confirm_status;
field_by_number(<<"666">>) -> confirm_trans_type;
field_by_number(<<"667">>) -> contract_settl_month;
field_by_number(<<"668">>) -> delivery_form;
field_by_number(<<"669">>) -> last_par_px;
field_by_number(<<"670">>) -> no_leg_allocs;
field_by_number(<<"671">>) -> leg_alloc_account;
field_by_number(<<"672">>) -> leg_individual_alloc_id;
field_by_number(<<"673">>) -> leg_alloc_qty;
field_by_number(<<"674">>) -> leg_alloc_acct_id_source;
field_by_number(<<"675">>) -> leg_settl_currency;
field_by_number(<<"676">>) -> leg_benchmark_curve_currency;
field_by_number(<<"677">>) -> leg_benchmark_curve_name;
field_by_number(<<"678">>) -> leg_benchmark_curve_point;
field_by_number(<<"679">>) -> leg_benchmark_price;
field_by_number(<<"680">>) -> leg_benchmark_price_type;
field_by_number(<<"681">>) -> leg_bid_px;
field_by_number(<<"682">>) -> leg_ioi_qty;
field_by_number(<<"683">>) -> no_leg_stipulations;
field_by_number(<<"684">>) -> leg_offer_px;
field_by_number(<<"685">>) -> leg_order_qty;
field_by_number(<<"686">>) -> leg_price_type;
field_by_number(<<"687">>) -> leg_qty;
field_by_number(<<"688">>) -> leg_stipulation_type;
field_by_number(<<"689">>) -> leg_stipulation_value;
field_by_number(<<"690">>) -> leg_swap_type;
field_by_number(<<"691">>) -> pool;
field_by_number(<<"692">>) -> quote_price_type;
field_by_number(<<"693">>) -> quote_resp_id;
field_by_number(<<"694">>) -> quote_resp_type;
field_by_number(<<"695">>) -> quote_qualifier;
field_by_number(<<"696">>) -> yield_redemption_date;
field_by_number(<<"697">>) -> yield_redemption_price;
field_by_number(<<"698">>) -> yield_redemption_price_type;
field_by_number(<<"699">>) -> benchmark_security_id;
field_by_number(<<"700">>) -> reversal_indicator;
field_by_number(<<"701">>) -> yield_calc_date;
field_by_number(<<"702">>) -> no_positions;
field_by_number(<<"703">>) -> pos_type;
field_by_number(<<"704">>) -> long_qty;
field_by_number(<<"705">>) -> short_qty;
field_by_number(<<"706">>) -> pos_qty_status;
field_by_number(<<"707">>) -> pos_amt_type;
field_by_number(<<"708">>) -> pos_amt;
field_by_number(<<"709">>) -> pos_trans_type;
field_by_number(<<"710">>) -> pos_req_id;
field_by_number(<<"711">>) -> no_underlyings;
field_by_number(<<"712">>) -> pos_maint_action;
field_by_number(<<"713">>) -> orig_pos_req_ref_id;
field_by_number(<<"714">>) -> pos_maint_rpt_ref_id;
field_by_number(<<"715">>) -> clearing_business_date;
field_by_number(<<"716">>) -> settl_sess_id;
field_by_number(<<"717">>) -> settl_sess_sub_id;
field_by_number(<<"718">>) -> adjustment_type;
field_by_number(<<"719">>) -> contrary_instruction_indicator;
field_by_number(<<"720">>) -> prior_spread_indicator;
field_by_number(<<"721">>) -> pos_maint_rpt_id;
field_by_number(<<"722">>) -> pos_maint_status;
field_by_number(<<"723">>) -> pos_maint_result;
field_by_number(<<"724">>) -> pos_req_type;
field_by_number(<<"725">>) -> response_transport_type;
field_by_number(<<"726">>) -> response_destination;
field_by_number(<<"727">>) -> total_num_pos_reports;
field_by_number(<<"728">>) -> pos_req_result;
field_by_number(<<"729">>) -> pos_req_status;
field_by_number(<<"730">>) -> settl_price;
field_by_number(<<"731">>) -> settl_price_type;
field_by_number(<<"732">>) -> underlying_settl_price;
field_by_number(<<"733">>) -> underlying_settl_price_type;
field_by_number(<<"734">>) -> prior_settl_price;
field_by_number(<<"735">>) -> no_quote_qualifiers;
field_by_number(<<"736">>) -> alloc_settl_currency;
field_by_number(<<"737">>) -> alloc_settl_curr_amt;
field_by_number(<<"738">>) -> interest_at_maturity;
field_by_number(<<"739">>) -> leg_dated_date;
field_by_number(<<"740">>) -> leg_pool;
field_by_number(<<"741">>) -> alloc_interest_at_maturity;
field_by_number(<<"742">>) -> alloc_accrued_interest_amt;
field_by_number(<<"743">>) -> delivery_date;
field_by_number(<<"744">>) -> assignment_method;
field_by_number(<<"745">>) -> assignment_unit;
field_by_number(<<"746">>) -> open_interest;
field_by_number(<<"747">>) -> exercise_method;
field_by_number(<<"748">>) -> tot_num_trade_reports;
field_by_number(<<"749">>) -> trade_request_result;
field_by_number(<<"750">>) -> trade_request_status;
field_by_number(<<"751">>) -> trade_report_reject_reason;
field_by_number(<<"752">>) -> side_multi_leg_reporting_type;
field_by_number(<<"753">>) -> no_pos_amt;
field_by_number(<<"754">>) -> auto_accept_indicator;
field_by_number(<<"755">>) -> alloc_report_id;
field_by_number(<<"756">>) -> no_nested2_party_ids;
field_by_number(<<"757">>) -> nested2_party_id;
field_by_number(<<"758">>) -> nested2_party_id_source;
field_by_number(<<"759">>) -> nested2_party_role;
field_by_number(<<"760">>) -> nested2_party_sub_id;
field_by_number(<<"761">>) -> benchmark_security_id_source;
field_by_number(<<"762">>) -> security_sub_type;
field_by_number(<<"763">>) -> underlying_security_sub_type;
field_by_number(<<"764">>) -> leg_security_sub_type;
field_by_number(<<"765">>) -> allowable_one_sidedness_pct;
field_by_number(<<"766">>) -> allowable_one_sidedness_value;
field_by_number(<<"767">>) -> allowable_one_sidedness_curr;
field_by_number(<<"768">>) -> no_trd_reg_timestamps;
field_by_number(<<"769">>) -> trd_reg_timestamp;
field_by_number(<<"770">>) -> trd_reg_timestamp_type;
field_by_number(<<"771">>) -> trd_reg_timestamp_origin;
field_by_number(<<"772">>) -> confirm_ref_id;
field_by_number(<<"773">>) -> confirm_type;
field_by_number(<<"774">>) -> confirm_rej_reason;
field_by_number(<<"775">>) -> booking_type;
field_by_number(<<"776">>) -> individual_alloc_rej_code;
field_by_number(<<"777">>) -> settl_inst_msg_id;
field_by_number(<<"778">>) -> no_settl_inst;
field_by_number(<<"779">>) -> last_update_time;
field_by_number(<<"780">>) -> alloc_settl_inst_type;
field_by_number(<<"781">>) -> no_settl_party_ids;
field_by_number(<<"782">>) -> settl_party_id;
field_by_number(<<"783">>) -> settl_party_id_source;
field_by_number(<<"784">>) -> settl_party_role;
field_by_number(<<"785">>) -> settl_party_sub_id;
field_by_number(<<"786">>) -> settl_party_sub_id_type;
field_by_number(<<"787">>) -> dlvy_inst_type;
field_by_number(<<"788">>) -> termination_type;
field_by_number(<<"789">>) -> next_expected_msg_seq_num;
field_by_number(<<"790">>) -> ord_status_req_id;
field_by_number(<<"791">>) -> settl_inst_req_id;
field_by_number(<<"792">>) -> settl_inst_req_rej_code;
field_by_number(<<"793">>) -> secondary_alloc_id;
field_by_number(<<"794">>) -> alloc_report_type;
field_by_number(<<"795">>) -> alloc_report_ref_id;
field_by_number(<<"796">>) -> alloc_canc_replace_reason;
field_by_number(<<"797">>) -> copy_msg_indicator;
field_by_number(<<"798">>) -> alloc_account_type;
field_by_number(<<"799">>) -> order_avg_px;
field_by_number(<<"800">>) -> order_booking_qty;
field_by_number(<<"801">>) -> no_settl_party_sub_ids;
field_by_number(<<"802">>) -> no_party_sub_ids;
field_by_number(<<"803">>) -> party_sub_id_type;
field_by_number(<<"804">>) -> no_nested_party_sub_ids;
field_by_number(<<"805">>) -> nested_party_sub_id_type;
field_by_number(<<"806">>) -> no_nested2_party_sub_ids;
field_by_number(<<"807">>) -> nested2_party_sub_id_type;
field_by_number(<<"808">>) -> alloc_intermed_req_type;
field_by_number(<<"810">>) -> underlying_px;
field_by_number(<<"811">>) -> price_delta;
field_by_number(<<"812">>) -> appl_queue_max;
field_by_number(<<"813">>) -> appl_queue_depth;
field_by_number(<<"814">>) -> appl_queue_resolution;
field_by_number(<<"815">>) -> appl_queue_action;
field_by_number(<<"816">>) -> no_alt_md_source;
field_by_number(<<"817">>) -> alt_md_source_id;
field_by_number(<<"818">>) -> secondary_trade_report_id;
field_by_number(<<"819">>) -> avg_px_indicator;
field_by_number(<<"820">>) -> trade_link_id;
field_by_number(<<"821">>) -> order_input_device;
field_by_number(<<"822">>) -> underlying_trading_session_id;
field_by_number(<<"823">>) -> underlying_trading_session_sub_id;
field_by_number(<<"824">>) -> trade_leg_ref_id;
field_by_number(<<"825">>) -> exchange_rule;
field_by_number(<<"826">>) -> trade_alloc_indicator;
field_by_number(<<"827">>) -> expiration_cycle;
field_by_number(<<"828">>) -> trd_type;
field_by_number(<<"829">>) -> trd_sub_type;
field_by_number(<<"830">>) -> transfer_reason;
field_by_number(<<"831">>) -> asgn_req_id;
field_by_number(<<"832">>) -> tot_num_assignment_reports;
field_by_number(<<"833">>) -> asgn_rpt_id;
field_by_number(<<"834">>) -> threshold_amount;
field_by_number(<<"835">>) -> peg_move_type;
field_by_number(<<"836">>) -> peg_offset_type;
field_by_number(<<"837">>) -> peg_limit_type;
field_by_number(<<"838">>) -> peg_round_direction;
field_by_number(<<"839">>) -> pegged_price;
field_by_number(<<"840">>) -> peg_scope;
field_by_number(<<"841">>) -> discretion_move_type;
field_by_number(<<"842">>) -> discretion_offset_type;
field_by_number(<<"843">>) -> discretion_limit_type;
field_by_number(<<"844">>) -> discretion_round_direction;
field_by_number(<<"845">>) -> discretion_price;
field_by_number(<<"846">>) -> discretion_scope;
field_by_number(<<"847">>) -> target_strategy;
field_by_number(<<"848">>) -> target_strategy_parameters;
field_by_number(<<"849">>) -> participation_rate;
field_by_number(<<"850">>) -> target_strategy_performance;
field_by_number(<<"851">>) -> last_liquidity_ind;
field_by_number(<<"852">>) -> publish_trd_indicator;
field_by_number(<<"853">>) -> short_sale_reason;
field_by_number(<<"854">>) -> qty_type;
field_by_number(<<"855">>) -> secondary_trd_type;
field_by_number(<<"856">>) -> trade_report_type;
field_by_number(<<"857">>) -> alloc_no_orders_type;
field_by_number(<<"858">>) -> shared_commission;
field_by_number(<<"859">>) -> confirm_req_id;
field_by_number(<<"860">>) -> avg_par_px;
field_by_number(<<"861">>) -> reported_px;
field_by_number(<<"862">>) -> no_capacities;
field_by_number(<<"863">>) -> order_capacity_qty;
field_by_number(<<"864">>) -> no_events;
field_by_number(<<"865">>) -> event_type;
field_by_number(<<"866">>) -> event_date;
field_by_number(<<"867">>) -> event_px;
field_by_number(<<"868">>) -> event_text;
field_by_number(<<"869">>) -> pct_at_risk;
field_by_number(<<"870">>) -> no_instr_attrib;
field_by_number(<<"871">>) -> instr_attrib_type;
field_by_number(<<"872">>) -> instr_attrib_value;
field_by_number(<<"873">>) -> dated_date;
field_by_number(<<"874">>) -> interest_accrual_date;
field_by_number(<<"875">>) -> cp_program;
field_by_number(<<"876">>) -> cp_reg_type;
field_by_number(<<"877">>) -> underlying_cp_program;
field_by_number(<<"878">>) -> underlying_cp_reg_type;
field_by_number(<<"879">>) -> underlying_qty;
field_by_number(<<"880">>) -> trd_match_id;
field_by_number(<<"881">>) -> secondary_trade_report_ref_id;
field_by_number(<<"882">>) -> underlying_dirty_price;
field_by_number(<<"883">>) -> underlying_end_price;
field_by_number(<<"884">>) -> underlying_start_value;
field_by_number(<<"885">>) -> underlying_current_value;
field_by_number(<<"886">>) -> underlying_end_value;
field_by_number(<<"887">>) -> no_underlying_stips;
field_by_number(<<"888">>) -> underlying_stip_type;
field_by_number(<<"889">>) -> underlying_stip_value;
field_by_number(<<"890">>) -> maturity_net_money;
field_by_number(<<"891">>) -> misc_fee_basis;
field_by_number(<<"892">>) -> tot_no_allocs;
field_by_number(<<"893">>) -> last_fragment;
field_by_number(<<"894">>) -> coll_req_id;
field_by_number(<<"895">>) -> coll_asgn_reason;
field_by_number(<<"896">>) -> coll_inquiry_qualifier;
field_by_number(<<"897">>) -> no_trades;
field_by_number(<<"898">>) -> margin_ratio;
field_by_number(<<"899">>) -> margin_excess;
field_by_number(<<"900">>) -> total_net_value;
field_by_number(<<"901">>) -> cash_outstanding;
field_by_number(<<"902">>) -> coll_asgn_id;
field_by_number(<<"903">>) -> coll_asgn_trans_type;
field_by_number(<<"904">>) -> coll_resp_id;
field_by_number(<<"905">>) -> coll_asgn_resp_type;
field_by_number(<<"906">>) -> coll_asgn_reject_reason;
field_by_number(<<"907">>) -> coll_asgn_ref_id;
field_by_number(<<"908">>) -> coll_rpt_id;
field_by_number(<<"909">>) -> coll_inquiry_id;
field_by_number(<<"910">>) -> coll_status;
field_by_number(<<"911">>) -> tot_num_reports;
field_by_number(<<"912">>) -> last_rpt_requested;
field_by_number(<<"913">>) -> agreement_desc;
field_by_number(<<"914">>) -> agreement_id;
field_by_number(<<"915">>) -> agreement_date;
field_by_number(<<"916">>) -> start_date;
field_by_number(<<"917">>) -> end_date;
field_by_number(<<"918">>) -> agreement_currency;
field_by_number(<<"919">>) -> delivery_type;
field_by_number(<<"920">>) -> end_accrued_interest_amt;
field_by_number(<<"921">>) -> start_cash;
field_by_number(<<"922">>) -> end_cash;
field_by_number(<<"923">>) -> user_request_id;
field_by_number(<<"924">>) -> user_request_type;
field_by_number(<<"925">>) -> new_password;
field_by_number(<<"926">>) -> user_status;
field_by_number(<<"927">>) -> user_status_text;
field_by_number(<<"928">>) -> status_value;
field_by_number(<<"929">>) -> status_text;
field_by_number(<<"930">>) -> ref_comp_id;
field_by_number(<<"931">>) -> ref_sub_id;
field_by_number(<<"932">>) -> network_response_id;
field_by_number(<<"933">>) -> network_request_id;
field_by_number(<<"934">>) -> last_network_response_id;
field_by_number(<<"935">>) -> network_request_type;
field_by_number(<<"936">>) -> no_comp_ids;
field_by_number(<<"937">>) -> network_status_response_type;
field_by_number(<<"938">>) -> no_coll_inquiry_qualifier;
field_by_number(<<"939">>) -> trd_rpt_status;
field_by_number(<<"940">>) -> affirm_status;
field_by_number(<<"941">>) -> underlying_strike_currency;
field_by_number(<<"942">>) -> leg_strike_currency;
field_by_number(<<"943">>) -> time_bracket;
field_by_number(<<"944">>) -> coll_action;
field_by_number(<<"945">>) -> coll_inquiry_status;
field_by_number(<<"946">>) -> coll_inquiry_result;
field_by_number(<<"947">>) -> strike_currency;
field_by_number(<<"948">>) -> no_nested3_party_ids;
field_by_number(<<"949">>) -> nested3_party_id;
field_by_number(<<"950">>) -> nested3_party_id_source;
field_by_number(<<"951">>) -> nested3_party_role;
field_by_number(<<"952">>) -> no_nested3_party_sub_ids;
field_by_number(<<"953">>) -> nested3_party_sub_id;
field_by_number(<<"954">>) -> nested3_party_sub_id_type;
field_by_number(<<"955">>) -> leg_contract_settl_month;
field_by_number(<<"956">>) -> leg_interest_accrual_date;
field_by_number(<<"1128">>) -> appl_ver_id;
field_by_number(<<"1137">>) -> default_appl_ver_id;
field_by_number(<<"1166">>) -> quote_msg_id;
field_by_number(<<"1470">>) -> security_list_type;
field_by_number(_Key) -> undefined.

decode_typed_field(account, V) -> V;
decode_typed_field(adv_id, V) -> V;
decode_typed_field(adv_ref_id, V) -> V;
decode_typed_field(adv_side, <<"B">>) -> 'buy';
decode_typed_field(adv_side, <<"S">>) -> 'sell';
decode_typed_field(adv_side, <<"T">>) -> 'trade';
decode_typed_field(adv_side, <<"X">>) -> 'cross';
decode_typed_field(adv_trans_type, V) -> V;
decode_typed_field(avg_px, V) -> parse_num(V)*1.0;
decode_typed_field(begin_seq_no, V) -> parse_num(V);
decode_typed_field(begin_string, V) -> V;
decode_typed_field(body_length, V) -> parse_num(V);
decode_typed_field(check_sum, V) -> V;
decode_typed_field(cl_ord_id, V) -> V;
decode_typed_field(commission, V) -> V;
decode_typed_field(comm_type, <<"1">>) -> 'per_unit';
decode_typed_field(comm_type, <<"2">>) -> 'percent';
decode_typed_field(comm_type, <<"3">>) -> 'absolute';
decode_typed_field(comm_type, <<"4">>) -> 'pctwaivedcshdisc';
decode_typed_field(comm_type, <<"5">>) -> 'pctwaivedenunits';
decode_typed_field(comm_type, <<"6">>) -> 'perbond';
decode_typed_field(cum_qty, V) -> parse_num(V);
decode_typed_field(currency, V) -> V;
decode_typed_field(end_seq_no, V) -> parse_num(V);
decode_typed_field(exec_id, V) -> V;
decode_typed_field(exec_inst, V) -> V;
decode_typed_field(exec_ref_id, V) -> V;
decode_typed_field(exec_trans_type, <<"0">>) -> 'new';
decode_typed_field(exec_trans_type, <<"1">>) -> 'cancel';
decode_typed_field(exec_trans_type, <<"2">>) -> 'correct';
decode_typed_field(exec_trans_type, <<"3">>) -> 'status';
decode_typed_field(handl_inst, <<"1">>) -> 'autoexecpriv';
decode_typed_field(handl_inst, <<"2">>) -> 'autoexecpub';
decode_typed_field(handl_inst, <<"3">>) -> 'manual';
decode_typed_field(security_id_source, V) -> V;
decode_typed_field(ioi_id, V) -> V;
decode_typed_field(ioi_qlty_ind, <<"H">>) -> 'high';
decode_typed_field(ioi_qlty_ind, <<"L">>) -> 'low';
decode_typed_field(ioi_qlty_ind, <<"M">>) -> 'medium';
decode_typed_field(ioi_ref_id, V) -> V;
decode_typed_field(ioi_qty, V) -> V;
decode_typed_field(ioi_trans_type, <<"C">>) -> 'cancel';
decode_typed_field(ioi_trans_type, <<"N">>) -> 'new';
decode_typed_field(ioi_trans_type, <<"R">>) -> 'replace';
decode_typed_field(last_capacity, <<"1">>) -> 'a';
decode_typed_field(last_capacity, <<"2">>) -> 'xa';
decode_typed_field(last_capacity, <<"3">>) -> 'xp';
decode_typed_field(last_capacity, <<"4">>) -> 'p';
decode_typed_field(last_mkt, V) -> V;
decode_typed_field(last_px, V) -> parse_num(V)*1.0;
decode_typed_field(last_qty, V) -> parse_num(V);
decode_typed_field(no_lines_of_text, V) -> parse_num(V);
decode_typed_field(msg_seq_num, V) -> parse_num(V);
decode_typed_field(msg_type, V) -> message_by_number(V);
decode_typed_field(new_seq_no, V) -> parse_num(V);
decode_typed_field(order_id, V) -> V;
decode_typed_field(order_qty, V) -> parse_num(V);
decode_typed_field(ord_status, <<"0">>) -> 'new';
decode_typed_field(ord_status, <<"1">>) -> 'partial';
decode_typed_field(ord_status, <<"2">>) -> 'filled';
decode_typed_field(ord_status, <<"3">>) -> 'done';
decode_typed_field(ord_status, <<"4">>) -> 'canceled';
decode_typed_field(ord_status, <<"6">>) -> 'pending_cancel';
decode_typed_field(ord_status, <<"7">>) -> 'stopped';
decode_typed_field(ord_status, <<"8">>) -> 'rejected';
decode_typed_field(ord_status, <<"9">>) -> 'suspended';
decode_typed_field(ord_status, <<"A">>) -> 'pendingnew';
decode_typed_field(ord_status, <<"B">>) -> 'calculated';
decode_typed_field(ord_status, <<"C">>) -> 'expired';
decode_typed_field(ord_status, <<"D">>) -> 'acceptb_idding';
decode_typed_field(ord_status, <<"E">>) -> 'pendingrep';
decode_typed_field(ord_type, <<"1">>) -> 'market';
decode_typed_field(ord_type, <<"2">>) -> 'limit';
decode_typed_field(ord_type, <<"3">>) -> 'stop';
decode_typed_field(ord_type, <<"4">>) -> 'stoplimit';
decode_typed_field(ord_type, <<"5">>) -> 'marketonclose';
decode_typed_field(ord_type, <<"6">>) -> 'withorwithout';
decode_typed_field(ord_type, <<"7">>) -> 'limitorbetter';
decode_typed_field(ord_type, <<"8">>) -> 'limitwithorwithout';
decode_typed_field(ord_type, <<"9">>) -> 'onbasis';
decode_typed_field(ord_type, <<"A">>) -> 'onclose';
decode_typed_field(ord_type, <<"B">>) -> 'limitonclose';
decode_typed_field(ord_type, <<"C">>) -> 'forexmarket';
decode_typed_field(ord_type, <<"D">>) -> 'previouslyquoted';
decode_typed_field(ord_type, <<"E">>) -> 'previouslyindicated';
decode_typed_field(ord_type, <<"F">>) -> 'forexlimit';
decode_typed_field(ord_type, <<"G">>) -> 'forexswap';
decode_typed_field(ord_type, <<"H">>) -> 'forexpreviouslyquoted';
decode_typed_field(ord_type, <<"I">>) -> 'funari';
decode_typed_field(ord_type, <<"J">>) -> 'marketiftouched';
decode_typed_field(ord_type, <<"K">>) -> 'marketwithleftoverlimit';
decode_typed_field(ord_type, <<"L">>) -> 'previousfundvaluationpoint';
decode_typed_field(ord_type, <<"M">>) -> 'nextfundvaluationpoint';
decode_typed_field(ord_type, <<"P">>) -> 'pegged';
decode_typed_field(orig_cl_ord_id, V) -> V;
decode_typed_field(orig_time, V) -> V;
decode_typed_field(poss_dup_flag, V) -> V == <<"Y">>;
decode_typed_field(price, V) -> parse_num(V)*1.0;
decode_typed_field(ref_seq_num, V) -> parse_num(V);
decode_typed_field(relatd_sym, V) -> V;
decode_typed_field(rule80a, <<"A">>) -> 'agencysingle';
decode_typed_field(rule80a, <<"B">>) -> 'shtextrana';
decode_typed_field(rule80a, <<"C">>) -> 'prgnonindexarbmem';
decode_typed_field(rule80a, <<"D">>) -> 'prgindexarbmem';
decode_typed_field(rule80a, <<"E">>) -> 'marketmaker';
decode_typed_field(rule80a, <<"F">>) -> 'shtextranw';
decode_typed_field(rule80a, <<"H">>) -> 'shtextrani';
decode_typed_field(rule80a, <<"I">>) -> 'invinestor';
decode_typed_field(rule80a, <<"J">>) -> 'prgnonindexarbinv';
decode_typed_field(rule80a, <<"K">>) -> 'prgindexarbinv';
decode_typed_field(rule80a, <<"L">>) -> 'shtextranmem';
decode_typed_field(rule80a, <<"M">>) -> 'prgnonindexarbothmem';
decode_typed_field(rule80a, <<"N">>) -> 'prgindexarbothmem';
decode_typed_field(rule80a, <<"O">>) -> 'competingdealer';
decode_typed_field(rule80a, <<"P">>) -> 'principal';
decode_typed_field(rule80a, <<"R">>) -> 'compdeale_r1';
decode_typed_field(rule80a, <<"S">>) -> 'specialist';
decode_typed_field(rule80a, <<"T">>) -> 'compdeale_r2';
decode_typed_field(rule80a, <<"U">>) -> 'prgindexarbothagn';
decode_typed_field(rule80a, <<"W">>) -> 'allotheragn';
decode_typed_field(rule80a, <<"X">>) -> 'shtextranmemwt';
decode_typed_field(rule80a, <<"Y">>) -> 'prgnonindexarbothagn';
decode_typed_field(rule80a, <<"Z">>) -> 'shtextrannonmem';
decode_typed_field(security_id, V) -> V;
decode_typed_field(sender_comp_id, V) -> V;
decode_typed_field(sender_sub_id, V) -> V;
decode_typed_field(sending_date, V) -> V;
decode_typed_field(sending_time, V) -> V;
decode_typed_field(quantity, V) -> parse_num(V);
decode_typed_field(side, <<"1">>) -> 'buy';
decode_typed_field(side, <<"2">>) -> 'sell';
decode_typed_field(side, <<"3">>) -> 'buymin';
decode_typed_field(side, <<"4">>) -> 'sellplus';
decode_typed_field(side, <<"5">>) -> 'sellsht';
decode_typed_field(side, <<"6">>) -> 'sellshtex';
decode_typed_field(side, <<"7">>) -> 'undisc';
decode_typed_field(side, <<"8">>) -> 'cross';
decode_typed_field(side, <<"9">>) -> 'crossshort';
decode_typed_field(side, <<"A">>) -> 'crossshortex';
decode_typed_field(side, <<"B">>) -> 'asdefined';
decode_typed_field(side, <<"C">>) -> 'opposite';
decode_typed_field(side, <<"D">>) -> 'subscribe';
decode_typed_field(side, <<"E">>) -> 'redeem';
decode_typed_field(side, <<"F">>) -> 'lendfinancing';
decode_typed_field(side, <<"G">>) -> 'borrowfinancing';
decode_typed_field(symbol, V) -> V;
decode_typed_field(target_comp_id, V) -> V;
decode_typed_field(target_sub_id, V) -> V;
decode_typed_field(text, V) -> V;
decode_typed_field(time_in_force, <<"0">>) -> 'day';
decode_typed_field(time_in_force, <<"1">>) -> 'goodtillcancel';
decode_typed_field(time_in_force, <<"2">>) -> 'attheopening';
decode_typed_field(time_in_force, <<"3">>) -> 'immediateorcancel';
decode_typed_field(time_in_force, <<"4">>) -> 'fillorkill';
decode_typed_field(time_in_force, <<"5">>) -> 'goodtillcrossing';
decode_typed_field(time_in_force, <<"6">>) -> 'goodtilldate';
decode_typed_field(time_in_force, <<"7">>) -> 'attheclose';
decode_typed_field(transact_time, V) -> V;
decode_typed_field(urgency, <<"0">>) -> 'normal';
decode_typed_field(urgency, <<"1">>) -> 'flash';
decode_typed_field(urgency, <<"2">>) -> 'background';
decode_typed_field(valid_until_time, V) -> V;
decode_typed_field(settl_type, <<"0">>) -> 'regular';
decode_typed_field(settl_type, <<"1">>) -> 'cash';
decode_typed_field(settl_type, <<"2">>) -> 'nextday';
decode_typed_field(settl_type, <<"3">>) -> 't2';
decode_typed_field(settl_type, <<"4">>) -> 't3';
decode_typed_field(settl_type, <<"5">>) -> 't4';
decode_typed_field(settl_type, <<"6">>) -> 'future';
decode_typed_field(settl_type, <<"7">>) -> 'whenissued';
decode_typed_field(settl_type, <<"8">>) -> 't5';
decode_typed_field(settl_type, <<"9">>) -> 't1';
decode_typed_field(settl_date, V) -> V;
decode_typed_field(symbol_sfx, V) -> V;
decode_typed_field(list_id, V) -> V;
decode_typed_field(list_seq_no, V) -> parse_num(V);
decode_typed_field(tot_no_orders, V) -> parse_num(V);
decode_typed_field(list_exec_inst, V) -> V;
decode_typed_field(alloc_id, V) -> V;
decode_typed_field(alloc_trans_type, <<"0">>) -> 'new';
decode_typed_field(alloc_trans_type, <<"1">>) -> 'replace';
decode_typed_field(alloc_trans_type, <<"2">>) -> 'cancel';
decode_typed_field(alloc_trans_type, <<"3">>) -> 'preliminary';
decode_typed_field(alloc_trans_type, <<"4">>) -> 'calculated';
decode_typed_field(alloc_trans_type, <<"5">>) -> 'calculatedwithoutpreliminary';
decode_typed_field(ref_alloc_id, V) -> V;
decode_typed_field(no_orders, V) -> parse_num(V);
decode_typed_field(avg_px_precision, V) -> parse_num(V);
decode_typed_field(trade_date, V) -> V;
decode_typed_field(exec_broker, V) -> V;
decode_typed_field(position_effect, <<"C">>) -> 'close';
decode_typed_field(position_effect, <<"F">>) -> 'fifo';
decode_typed_field(position_effect, <<"O">>) -> 'open';
decode_typed_field(position_effect, <<"R">>) -> 'rolled';
decode_typed_field(no_allocs, V) -> parse_num(V);
decode_typed_field(alloc_account, V) -> V;
decode_typed_field(alloc_qty, V) -> parse_num(V);
decode_typed_field(process_code, <<"0">>) -> 'regular';
decode_typed_field(process_code, <<"1">>) -> 'softdollar';
decode_typed_field(process_code, <<"2">>) -> 'stepin';
decode_typed_field(process_code, <<"3">>) -> 'stepout';
decode_typed_field(process_code, <<"4">>) -> 'stepinsoft';
decode_typed_field(process_code, <<"5">>) -> 'stepoutsoft';
decode_typed_field(process_code, <<"6">>) -> 'plansponsor';
decode_typed_field(no_rpts, V) -> parse_num(V);
decode_typed_field(rpt_seq, V) -> parse_num(V);
decode_typed_field(cxl_qty, V) -> parse_num(V);
decode_typed_field(no_dlvy_inst, V) -> parse_num(V);
decode_typed_field(dlvy_inst, V) -> V;
decode_typed_field(alloc_status, V) -> parse_num(V);
decode_typed_field(alloc_rej_code, V) -> parse_num(V);
decode_typed_field(signature, V) -> V;
decode_typed_field(secure_data_len, V) -> parse_num(V);
decode_typed_field(secure_data, V) -> V;
decode_typed_field(broker_of_credit, V) -> V;
decode_typed_field(signature_length, V) -> parse_num(V);
decode_typed_field(email_type, <<"0">>) -> 'new';
decode_typed_field(email_type, <<"1">>) -> 'reply';
decode_typed_field(email_type, <<"2">>) -> 'adminreply';
decode_typed_field(raw_data_length, V) -> parse_num(V);
decode_typed_field(raw_data, V) -> V;
decode_typed_field(poss_resend, V) -> V == <<"Y">>;
decode_typed_field(encrypt_method, 0) -> noneother;
decode_typed_field(encrypt_method, 1) -> pkcs;
decode_typed_field(encrypt_method, 2) -> des;
decode_typed_field(encrypt_method, 3) -> pkcs_des;
decode_typed_field(encrypt_method, 4) -> pgp_des;
decode_typed_field(encrypt_method, 5) -> pgp_des_md5;
decode_typed_field(encrypt_method, 6) -> pem_des_md5;
decode_typed_field(stop_px, V) -> parse_num(V)*1.0;
decode_typed_field(ex_destination, V) -> V;
decode_typed_field(cxl_rej_reason, V) -> parse_num(V);
decode_typed_field(ord_rej_reason, V) -> parse_num(V);
decode_typed_field(ioi_qualifier, <<"A">>) -> 'aon';
decode_typed_field(ioi_qualifier, <<"B">>) -> 'moc';
decode_typed_field(ioi_qualifier, <<"C">>) -> 'atclose';
decode_typed_field(ioi_qualifier, <<"D">>) -> 'vwap';
decode_typed_field(ioi_qualifier, <<"I">>) -> 'intouch';
decode_typed_field(ioi_qualifier, <<"L">>) -> 'limit';
decode_typed_field(ioi_qualifier, <<"M">>) -> 'morebehind';
decode_typed_field(ioi_qualifier, <<"O">>) -> 'atopen';
decode_typed_field(ioi_qualifier, <<"P">>) -> 'takeposition';
decode_typed_field(ioi_qualifier, <<"Q">>) -> 'atmarket';
decode_typed_field(ioi_qualifier, <<"R">>) -> 'readytrade';
decode_typed_field(ioi_qualifier, <<"S">>) -> 'portshow';
decode_typed_field(ioi_qualifier, <<"T">>) -> 'throughday';
decode_typed_field(ioi_qualifier, <<"V">>) -> 'versus';
decode_typed_field(ioi_qualifier, <<"W">>) -> 'indwrkaway';
decode_typed_field(ioi_qualifier, <<"X">>) -> 'crossopp';
decode_typed_field(ioi_qualifier, <<"Y">>) -> 'atm_id';
decode_typed_field(ioi_qualifier, <<"Z">>) -> 'preopen';
decode_typed_field(wave_no, V) -> V;
decode_typed_field(issuer, V) -> V;
decode_typed_field(security_desc, V) -> V;
decode_typed_field(heart_bt_int, V) -> parse_num(V);
decode_typed_field(client_id, V) -> V;
decode_typed_field(min_qty, V) -> parse_num(V);
decode_typed_field(max_floor, V) -> parse_num(V);
decode_typed_field(test_req_id, V) -> V;
decode_typed_field(report_to_exch, V) -> V == <<"Y">>;
decode_typed_field(locate_reqd, V) -> V == <<"Y">>;
decode_typed_field(on_behalf_of_comp_id, V) -> V;
decode_typed_field(on_behalf_of_sub_id, V) -> V;
decode_typed_field(quote_id, V) -> V;
decode_typed_field(net_money, V) -> V;
decode_typed_field(settl_curr_amt, V) -> V;
decode_typed_field(settl_currency, V) -> V;
decode_typed_field(forex_req, V) -> V == <<"Y">>;
decode_typed_field(orig_sending_time, V) -> V;
decode_typed_field(gap_fill_flag, V) -> V == <<"Y">>;
decode_typed_field(no_execs, V) -> parse_num(V);
decode_typed_field(expire_time, V) -> V;
decode_typed_field(dk_reason, <<"A">>) -> 'unknownsymbol';
decode_typed_field(dk_reason, <<"B">>) -> 'wrongs_ide';
decode_typed_field(dk_reason, <<"C">>) -> 'quantityexceedsorder';
decode_typed_field(dk_reason, <<"D">>) -> 'nomatch';
decode_typed_field(dk_reason, <<"E">>) -> 'priceexceedslimit';
decode_typed_field(dk_reason, <<"F">>) -> 'calculationdifference';
decode_typed_field(dk_reason, <<"Z">>) -> 'other';
decode_typed_field(deliver_to_comp_id, V) -> V;
decode_typed_field(deliver_to_sub_id, V) -> V;
decode_typed_field(ioi_natural_flag, V) -> V == <<"Y">>;
decode_typed_field(quote_req_id, V) -> V;
decode_typed_field(bid_px, V) -> parse_num(V)*1.0;
decode_typed_field(offer_px, V) -> parse_num(V)*1.0;
decode_typed_field(bid_size, V) -> parse_num(V);
decode_typed_field(offer_size, V) -> parse_num(V);
decode_typed_field(no_misc_fees, V) -> parse_num(V);
decode_typed_field(misc_fee_amt, V) -> V;
decode_typed_field(misc_fee_curr, V) -> V;
decode_typed_field(misc_fee_type, <<"1">>) -> 'reg';
decode_typed_field(misc_fee_type, <<"10">>) -> 'transaction';
decode_typed_field(misc_fee_type, <<"11">>) -> 'conversion';
decode_typed_field(misc_fee_type, <<"12">>) -> 'agent';
decode_typed_field(misc_fee_type, <<"2">>) -> 'tax';
decode_typed_field(misc_fee_type, <<"3">>) -> 'localcomm';
decode_typed_field(misc_fee_type, <<"4">>) -> 'exchfee';
decode_typed_field(misc_fee_type, <<"5">>) -> 'stamp';
decode_typed_field(misc_fee_type, <<"6">>) -> 'levy';
decode_typed_field(misc_fee_type, <<"7">>) -> 'other';
decode_typed_field(misc_fee_type, <<"8">>) -> 'markup';
decode_typed_field(misc_fee_type, <<"9">>) -> 'consumption';
decode_typed_field(prev_close_px, V) -> parse_num(V)*1.0;
decode_typed_field(reset_seq_num_flag, V) -> V == <<"Y">>;
decode_typed_field(sender_location_id, V) -> V;
decode_typed_field(target_location_id, V) -> V;
decode_typed_field(on_behalf_of_location_id, V) -> V;
decode_typed_field(deliver_to_location_id, V) -> V;
decode_typed_field(no_related_sym, V) -> parse_num(V);
decode_typed_field(subject, V) -> V;
decode_typed_field(headline, V) -> V;
decode_typed_field(url_link, V) -> V;
decode_typed_field(exec_type, <<"0">>) -> 'new';
decode_typed_field(exec_type, <<"3">>) -> 'done';
decode_typed_field(exec_type, <<"4">>) -> 'canceled';
decode_typed_field(exec_type, <<"5">>) -> 'replaced';
decode_typed_field(exec_type, <<"6">>) -> 'pendingcxl';
decode_typed_field(exec_type, <<"7">>) -> 'stopped';
decode_typed_field(exec_type, <<"8">>) -> 'rejected';
decode_typed_field(exec_type, <<"9">>) -> 'suspended';
decode_typed_field(exec_type, <<"A">>) -> 'pendingnew';
decode_typed_field(exec_type, <<"B">>) -> 'calculated';
decode_typed_field(exec_type, <<"C">>) -> 'expired';
decode_typed_field(exec_type, <<"D">>) -> 'restated';
decode_typed_field(exec_type, <<"E">>) -> 'pendingreplace';
decode_typed_field(exec_type, <<"F">>) -> 'trade';
decode_typed_field(exec_type, <<"G">>) -> 'tradecorrect';
decode_typed_field(exec_type, <<"H">>) -> 'tradecancel';
decode_typed_field(exec_type, <<"I">>) -> 'orderstatus';
decode_typed_field(leaves_qty, V) -> parse_num(V);
decode_typed_field(cash_order_qty, V) -> parse_num(V);
decode_typed_field(alloc_avg_px, V) -> parse_num(V)*1.0;
decode_typed_field(alloc_net_money, V) -> V;
decode_typed_field(settl_curr_fx_rate, V) -> V;
decode_typed_field(settl_curr_fx_rate_calc, <<"M">>) -> 'multiply';
decode_typed_field(settl_curr_fx_rate_calc, <<"D">>) -> 'div_ide';
decode_typed_field(num_days_interest, V) -> parse_num(V);
decode_typed_field(accrued_interest_rate, V) -> V;
decode_typed_field(accrued_interest_amt, V) -> V;
decode_typed_field(settl_inst_mode, <<"0">>) -> 'default';
decode_typed_field(settl_inst_mode, <<"1">>) -> 'siprov_ided';
decode_typed_field(settl_inst_mode, <<"2">>) -> 'accountoverr_iding';
decode_typed_field(settl_inst_mode, <<"3">>) -> 'accountstanding';
decode_typed_field(settl_inst_mode, <<"4">>) -> 'civordersingleacct';
decode_typed_field(settl_inst_mode, <<"5">>) -> 'reject';
decode_typed_field(alloc_text, V) -> V;
decode_typed_field(settl_inst_id, V) -> V;
decode_typed_field(settl_inst_trans_type, <<"C">>) -> 'cancel';
decode_typed_field(settl_inst_trans_type, <<"N">>) -> 'new';
decode_typed_field(settl_inst_trans_type, <<"R">>) -> 'replace';
decode_typed_field(settl_inst_trans_type, <<"T">>) -> 'restate';
decode_typed_field(email_thread_id, V) -> V;
decode_typed_field(settl_inst_source, <<"1">>) -> 'brokerinstr';
decode_typed_field(settl_inst_source, <<"2">>) -> 'instinstr';
decode_typed_field(settl_inst_source, <<"3">>) -> 'investorciv';
decode_typed_field(settl_location, V) -> V;
decode_typed_field(security_type, V) -> V;
decode_typed_field(effective_time, V) -> V;
decode_typed_field(stand_inst_db_type, V) -> parse_num(V);
decode_typed_field(stand_inst_db_name, V) -> V;
decode_typed_field(stand_inst_db_id, V) -> V;
decode_typed_field(settl_delivery_type, V) -> parse_num(V);
decode_typed_field(settl_depository_code, V) -> V;
decode_typed_field(settl_brkr_code, V) -> V;
decode_typed_field(settl_inst_code, V) -> V;
decode_typed_field(security_settl_agent_name, V) -> V;
decode_typed_field(security_settl_agent_code, V) -> V;
decode_typed_field(security_settl_agent_acct_num, V) -> V;
decode_typed_field(security_settl_agent_acct_name, V) -> V;
decode_typed_field(security_settl_agent_contact_name, V) -> V;
decode_typed_field(security_settl_agent_contact_phone, V) -> V;
decode_typed_field(cash_settl_agent_name, V) -> V;
decode_typed_field(cash_settl_agent_code, V) -> V;
decode_typed_field(cash_settl_agent_acct_num, V) -> V;
decode_typed_field(cash_settl_agent_acct_name, V) -> V;
decode_typed_field(cash_settl_agent_contact_name, V) -> V;
decode_typed_field(cash_settl_agent_contact_phone, V) -> V;
decode_typed_field(bid_spot_rate, V) -> parse_num(V)*1.0;
decode_typed_field(bid_forward_points, V) -> V;
decode_typed_field(offer_spot_rate, V) -> parse_num(V)*1.0;
decode_typed_field(offer_forward_points, V) -> V;
decode_typed_field(order_qty2, V) -> parse_num(V);
decode_typed_field(settl_date2, V) -> V;
decode_typed_field(last_spot_rate, V) -> parse_num(V)*1.0;
decode_typed_field(last_forward_points, V) -> V;
decode_typed_field(alloc_link_id, V) -> V;
decode_typed_field(alloc_link_type, V) -> parse_num(V);
decode_typed_field(secondary_order_id, V) -> V;
decode_typed_field(no_ioi_qualifiers, V) -> parse_num(V);
decode_typed_field(maturity_month_year, V) -> V;
decode_typed_field(put_or_call, V) -> parse_num(V);
decode_typed_field(strike_price, V) -> parse_num(V)*1.0;
decode_typed_field(covered_or_uncovered, V) -> parse_num(V);
decode_typed_field(customer_or_firm, V) -> parse_num(V);
decode_typed_field(maturity_day, V) -> V;
decode_typed_field(security_exchange, V) -> V;
decode_typed_field(notify_broker_of_credit, V) -> V == <<"Y">>;
decode_typed_field(alloc_handl_inst, V) -> parse_num(V);
decode_typed_field(max_show, V) -> parse_num(V);
decode_typed_field(peg_offset_value, V) -> V;
decode_typed_field(xml_data_len, V) -> parse_num(V);
decode_typed_field(xml_data, V) -> V;
decode_typed_field(settl_inst_ref_id, V) -> V;
decode_typed_field(no_routing_ids, V) -> parse_num(V);
decode_typed_field(routing_type, V) -> parse_num(V);
decode_typed_field(routing_id, V) -> V;
decode_typed_field(spread, V) -> V;
decode_typed_field(benchmark, <<"1">>) -> 'curve';
decode_typed_field(benchmark, <<"2">>) -> '5yr';
decode_typed_field(benchmark, <<"3">>) -> 'ol_d5';
decode_typed_field(benchmark, <<"4">>) -> '10_yr';
decode_typed_field(benchmark, <<"5">>) -> 'ol_d10';
decode_typed_field(benchmark, <<"6">>) -> '30_yr';
decode_typed_field(benchmark, <<"7">>) -> 'ol_d30';
decode_typed_field(benchmark, <<"8">>) -> '3molibor';
decode_typed_field(benchmark, <<"9">>) -> '6molibor';
decode_typed_field(benchmark_curve_currency, V) -> V;
decode_typed_field(benchmark_curve_name, V) -> V;
decode_typed_field(benchmark_curve_point, V) -> V;
decode_typed_field(coupon_rate, V) -> V;
decode_typed_field(coupon_payment_date, V) -> V;
decode_typed_field(issue_date, V) -> V;
decode_typed_field(repurchase_term, V) -> parse_num(V);
decode_typed_field(repurchase_rate, V) -> V;
decode_typed_field(factor, V) -> V;
decode_typed_field(trade_origination_date, V) -> V;
decode_typed_field(ex_date, V) -> V;
decode_typed_field(contract_multiplier, V) -> V;
decode_typed_field(no_stipulations, V) -> parse_num(V);
decode_typed_field(stipulation_type, V) -> V;
decode_typed_field(stipulation_value, V) -> V;
decode_typed_field(yield_type, V) -> V;
decode_typed_field(yield, V) -> V;
decode_typed_field(total_takedown, V) -> V;
decode_typed_field(concession, V) -> V;
decode_typed_field(repo_collateral_security_type, V) -> parse_num(V);
decode_typed_field(redemption_date, V) -> V;
decode_typed_field(underlying_coupon_payment_date, V) -> V;
decode_typed_field(underlying_issue_date, V) -> V;
decode_typed_field(underlying_repo_collateral_security_type, V) -> parse_num(V);
decode_typed_field(underlying_repurchase_term, V) -> parse_num(V);
decode_typed_field(underlying_repurchase_rate, V) -> V;
decode_typed_field(underlying_factor, V) -> V;
decode_typed_field(underlying_redemption_date, V) -> V;
decode_typed_field(leg_coupon_payment_date, V) -> V;
decode_typed_field(leg_issue_date, V) -> V;
decode_typed_field(leg_repo_collateral_security_type, V) -> parse_num(V);
decode_typed_field(leg_repurchase_term, V) -> parse_num(V);
decode_typed_field(leg_repurchase_rate, V) -> V;
decode_typed_field(leg_factor, V) -> V;
decode_typed_field(leg_redemption_date, V) -> V;
decode_typed_field(credit_rating, V) -> V;
decode_typed_field(underlying_credit_rating, V) -> V;
decode_typed_field(leg_credit_rating, V) -> V;
decode_typed_field(traded_flat_switch, V) -> V == <<"Y">>;
decode_typed_field(basis_feature_date, V) -> V;
decode_typed_field(basis_feature_price, V) -> parse_num(V)*1.0;
decode_typed_field(md_req_id, V) -> V;
decode_typed_field(subscription_request_type, <<"0">>) -> 'snapshot';
decode_typed_field(subscription_request_type, <<"1">>) -> 'snapshotupdate';
decode_typed_field(subscription_request_type, <<"2">>) -> 'unsubscribe';
decode_typed_field(market_depth, V) -> parse_num(V);
decode_typed_field(md_update_type, V) -> parse_num(V);
decode_typed_field(aggregated_book, V) -> V == <<"Y">>;
decode_typed_field(no_md_entry_types, V) -> parse_num(V);
decode_typed_field(no_md_entries, V) -> parse_num(V);
decode_typed_field(md_entry_type, <<"0">>) -> 'bid';
decode_typed_field(md_entry_type, <<"1">>) -> 'offer';
decode_typed_field(md_entry_type, <<"2">>) -> 'trade';
decode_typed_field(md_entry_type, <<"3">>) -> 'indexvalue';
decode_typed_field(md_entry_type, <<"4">>) -> 'opening';
decode_typed_field(md_entry_type, <<"5">>) -> 'closing';
decode_typed_field(md_entry_type, <<"6">>) -> 'settlement';
decode_typed_field(md_entry_type, <<"7">>) -> 'tradinghigh';
decode_typed_field(md_entry_type, <<"8">>) -> 'tradinglow';
decode_typed_field(md_entry_type, <<"9">>) -> 'tradingvwap';
decode_typed_field(md_entry_type, <<"A">>) -> 'imbalance';
decode_typed_field(md_entry_type, <<"B">>) -> 'tradevolume';
decode_typed_field(md_entry_type, <<"C">>) -> 'openinterest';
decode_typed_field(md_entry_px, V) -> parse_num(V)*1.0;
decode_typed_field(md_entry_size, V) -> parse_num(V);
decode_typed_field(md_entry_date, V) -> V;
decode_typed_field(md_entry_time, V) -> V;
decode_typed_field(tick_direction, <<"0">>) -> 'plus';
decode_typed_field(tick_direction, <<"1">>) -> 'zeroplus';
decode_typed_field(tick_direction, <<"2">>) -> 'minus';
decode_typed_field(tick_direction, <<"3">>) -> 'zerominus';
decode_typed_field(md_mkt, V) -> V;
decode_typed_field(quote_condition, V) -> V;
decode_typed_field(trade_condition, V) -> V;
decode_typed_field(md_entry_id, V) -> V;
decode_typed_field(md_update_action, <<"0">>) -> 'new';
decode_typed_field(md_update_action, <<"1">>) -> 'change';
decode_typed_field(md_update_action, <<"2">>) -> 'delete';
decode_typed_field(md_entry_ref_id, V) -> V;
decode_typed_field(md_req_rej_reason, <<"0">>) -> 'unknownsym';
decode_typed_field(md_req_rej_reason, <<"1">>) -> 'dup_id';
decode_typed_field(md_req_rej_reason, <<"2">>) -> 'insband';
decode_typed_field(md_req_rej_reason, <<"3">>) -> 'insperm';
decode_typed_field(md_req_rej_reason, <<"4">>) -> 'unsuppsub';
decode_typed_field(md_req_rej_reason, <<"5">>) -> 'unsuppmktdepth';
decode_typed_field(md_req_rej_reason, <<"6">>) -> 'unsuppmdupdate';
decode_typed_field(md_req_rej_reason, <<"7">>) -> 'unsuppaggbk';
decode_typed_field(md_req_rej_reason, <<"8">>) -> 'unsuppentry';
decode_typed_field(md_req_rej_reason, <<"9">>) -> 'unsupptrdsession_id';
decode_typed_field(md_req_rej_reason, <<"A">>) -> 'unsuppscope';
decode_typed_field(md_req_rej_reason, <<"B">>) -> 'unsupppositioneffectsettleflag';
decode_typed_field(md_req_rej_reason, <<"C">>) -> 'unsuppmdimplicitdelete';
decode_typed_field(md_entry_originator, V) -> V;
decode_typed_field(location_id, V) -> V;
decode_typed_field(desk_id, V) -> V;
decode_typed_field(delete_reason, <<"0">>) -> 'canceltradebust';
decode_typed_field(delete_reason, <<"1">>) -> 'error';
decode_typed_field(open_close_settl_flag, V) -> V;
decode_typed_field(seller_days, V) -> parse_num(V);
decode_typed_field(md_entry_buyer, V) -> V;
decode_typed_field(md_entry_seller, V) -> V;
decode_typed_field(md_entry_position_no, V) -> parse_num(V);
decode_typed_field(financial_status, V) -> V;
decode_typed_field(corporate_action, V) -> V;
decode_typed_field(def_bid_size, V) -> parse_num(V);
decode_typed_field(def_offer_size, V) -> parse_num(V);
decode_typed_field(no_quote_entries, V) -> parse_num(V);
decode_typed_field(no_quote_sets, V) -> parse_num(V);
decode_typed_field(quote_status, V) -> parse_num(V);
decode_typed_field(quote_cancel_type, <<"1">>) -> cxlsym;
decode_typed_field(quote_cancel_type, <<"2">>) -> cxlsectype;
decode_typed_field(quote_cancel_type, <<"3">>) -> cxlunder;
decode_typed_field(quote_cancel_type, <<"4">>) -> cxlall;
decode_typed_field(quote_cancel_type, <<"5">>) -> cxlquote;
decode_typed_field(quote_cancel_type, <<"6">>) -> cxlquotetype;
decode_typed_field(quote_cancel_type, <<"7">>) -> cxlsecissuer;
decode_typed_field(quote_cancel_type, <<"8">>) -> cxlissuer;
decode_typed_field(quote_entry_id, V) -> V;
decode_typed_field(quote_reject_reason, V) -> parse_num(V);
decode_typed_field(quote_response_level, V) -> parse_num(V);
decode_typed_field(quote_set_id, V) -> V;
decode_typed_field(quote_request_type, V) -> parse_num(V);
decode_typed_field(tot_no_quote_entries, V) -> parse_num(V);
decode_typed_field(underlying_security_id_source, V) -> V;
decode_typed_field(underlying_issuer, V) -> V;
decode_typed_field(underlying_security_desc, V) -> V;
decode_typed_field(underlying_security_exchange, V) -> V;
decode_typed_field(underlying_security_id, V) -> V;
decode_typed_field(underlying_security_type, V) -> V;
decode_typed_field(underlying_symbol, V) -> V;
decode_typed_field(underlying_symbol_sfx, V) -> V;
decode_typed_field(underlying_maturity_month_year, V) -> V;
decode_typed_field(underlying_maturity_day, V) -> V;
decode_typed_field(underlying_put_or_call, V) -> parse_num(V);
decode_typed_field(underlying_strike_price, V) -> parse_num(V)*1.0;
decode_typed_field(underlying_currency, V) -> V;
decode_typed_field(ratio_qty, V) -> parse_num(V);
decode_typed_field(security_req_id, V) -> V;
decode_typed_field(security_request_type, V) -> parse_num(V);
decode_typed_field(security_response_id, V) -> V;
decode_typed_field(security_response_type, V) -> parse_num(V);
decode_typed_field(security_status_req_id, V) -> V;
decode_typed_field(unsolicited_indicator, V) -> V == <<"Y">>;
decode_typed_field(security_trading_status, V) -> parse_num(V);
decode_typed_field(halt_reason_char, <<"D">>) -> 'newsdiss';
decode_typed_field(halt_reason_char, <<"E">>) -> 'ordinfl';
decode_typed_field(halt_reason_char, <<"I">>) -> 'ordimb';
decode_typed_field(halt_reason_char, <<"M">>) -> 'addinfo';
decode_typed_field(halt_reason_char, <<"P">>) -> 'newspend';
decode_typed_field(halt_reason_char, <<"X">>) -> 'equipchange';
decode_typed_field(in_view_of_common, V) -> V == <<"Y">>;
decode_typed_field(due_to_related, V) -> V == <<"Y">>;
decode_typed_field(buy_volume, V) -> parse_num(V);
decode_typed_field(sell_volume, V) -> parse_num(V);
decode_typed_field(high_px, V) -> parse_num(V)*1.0;
decode_typed_field(low_px, V) -> parse_num(V)*1.0;
decode_typed_field(adjustment, V) -> parse_num(V);
decode_typed_field(trad_ses_req_id, V) -> V;
decode_typed_field(trading_session_id, V) -> V;
decode_typed_field(contra_trader, V) -> V;
decode_typed_field(trad_ses_method, V) -> parse_num(V);
decode_typed_field(trad_ses_mode, V) -> parse_num(V);
decode_typed_field(trad_ses_status, V) -> parse_num(V);
decode_typed_field(trad_ses_start_time, V) -> V;
decode_typed_field(trad_ses_open_time, V) -> V;
decode_typed_field(trad_ses_pre_close_time, V) -> V;
decode_typed_field(trad_ses_close_time, V) -> V;
decode_typed_field(trad_ses_end_time, V) -> V;
decode_typed_field(number_of_orders, V) -> parse_num(V);
decode_typed_field(message_encoding, V) -> V;
decode_typed_field(encoded_issuer_len, V) -> parse_num(V);
decode_typed_field(encoded_issuer, V) -> V;
decode_typed_field(encoded_security_desc_len, V) -> parse_num(V);
decode_typed_field(encoded_security_desc, V) -> V;
decode_typed_field(encoded_list_exec_inst_len, V) -> parse_num(V);
decode_typed_field(encoded_list_exec_inst, V) -> V;
decode_typed_field(encoded_text_len, V) -> parse_num(V);
decode_typed_field(encoded_text, V) -> V;
decode_typed_field(encoded_subject_len, V) -> parse_num(V);
decode_typed_field(encoded_subject, V) -> V;
decode_typed_field(encoded_headline_len, V) -> parse_num(V);
decode_typed_field(encoded_headline, V) -> V;
decode_typed_field(encoded_alloc_text_len, V) -> parse_num(V);
decode_typed_field(encoded_alloc_text, V) -> V;
decode_typed_field(encoded_underlying_issuer_len, V) -> parse_num(V);
decode_typed_field(encoded_underlying_issuer, V) -> V;
decode_typed_field(encoded_underlying_security_desc_len, V) -> parse_num(V);
decode_typed_field(encoded_underlying_security_desc, V) -> V;
decode_typed_field(alloc_price, V) -> parse_num(V)*1.0;
decode_typed_field(quote_set_valid_until_time, V) -> V;
decode_typed_field(quote_entry_reject_reason, V) -> parse_num(V);
decode_typed_field(last_msg_seq_num_processed, V) -> parse_num(V);
decode_typed_field(on_behalf_of_sending_time, V) -> V;
decode_typed_field(ref_tag_id, V) -> parse_num(V);
decode_typed_field(ref_msg_type, V) -> V;
decode_typed_field(session_reject_reason, V) -> parse_num(V);
decode_typed_field(bid_request_trans_type, <<"C">>) -> 'cancel';
decode_typed_field(bid_request_trans_type, <<"N">>) -> 'no';
decode_typed_field(contra_broker, V) -> V;
decode_typed_field(compliance_id, V) -> V;
decode_typed_field(solicited_flag, V) -> V == <<"Y">>;
decode_typed_field(exec_restatement_reason, V) -> parse_num(V);
decode_typed_field(business_reject_ref_id, V) -> V;
decode_typed_field(business_reject_reason, V) -> parse_num(V);
decode_typed_field(gross_trade_amt, V) -> V;
decode_typed_field(no_contra_brokers, V) -> parse_num(V);
decode_typed_field(max_message_size, V) -> parse_num(V);
decode_typed_field(no_msg_types, V) -> parse_num(V);
decode_typed_field(msg_direction, <<"R">>) -> 'receive';
decode_typed_field(msg_direction, <<"S">>) -> 'send';
decode_typed_field(no_trading_sessions, V) -> parse_num(V);
decode_typed_field(total_volume_traded, V) -> parse_num(V);
decode_typed_field(discretion_inst, <<"0">>) -> 'reldisppx';
decode_typed_field(discretion_inst, <<"1">>) -> 'relmktpx';
decode_typed_field(discretion_inst, <<"2">>) -> 'relprimpx';
decode_typed_field(discretion_inst, <<"3">>) -> 'rellocprimpx';
decode_typed_field(discretion_inst, <<"4">>) -> 'relm_idpx';
decode_typed_field(discretion_inst, <<"5">>) -> 'rellstpx';
decode_typed_field(discretion_inst, <<"6">>) -> 'relvwap';
decode_typed_field(discretion_offset_value, V) -> V;
decode_typed_field(bid_id, V) -> V;
decode_typed_field(client_bid_id, V) -> V;
decode_typed_field(list_name, V) -> V;
decode_typed_field(tot_no_related_sym, V) -> parse_num(V);
decode_typed_field(bid_type, V) -> parse_num(V);
decode_typed_field(num_tickets, V) -> parse_num(V);
decode_typed_field(side_value1, V) -> V;
decode_typed_field(side_value2, V) -> V;
decode_typed_field(no_bid_descriptors, V) -> parse_num(V);
decode_typed_field(bid_descriptor_type, V) -> parse_num(V);
decode_typed_field(bid_descriptor, V) -> V;
decode_typed_field(side_value_ind, V) -> parse_num(V);
decode_typed_field(liquidity_pct_low, V) -> V;
decode_typed_field(liquidity_pct_high, V) -> V;
decode_typed_field(liquidity_value, V) -> V;
decode_typed_field(efp_tracking_error, V) -> V;
decode_typed_field(fair_value, V) -> V;
decode_typed_field(outside_index_pct, V) -> V;
decode_typed_field(value_of_futures, V) -> V;
decode_typed_field(liquidity_ind_type, V) -> parse_num(V);
decode_typed_field(wt_average_liquidity, V) -> V;
decode_typed_field(exchange_for_physical, V) -> V == <<"Y">>;
decode_typed_field(out_main_cntry_u_index, V) -> V;
decode_typed_field(cross_percent, V) -> V;
decode_typed_field(prog_rpt_reqs, V) -> parse_num(V);
decode_typed_field(prog_period_interval, V) -> parse_num(V);
decode_typed_field(inc_tax_ind, V) -> parse_num(V);
decode_typed_field(num_bidders, V) -> parse_num(V);
decode_typed_field(bid_trade_type, <<"A">>) -> 'agency';
decode_typed_field(bid_trade_type, <<"G">>) -> 'vwapguarantee';
decode_typed_field(bid_trade_type, <<"J">>) -> 'guaranteedclose';
decode_typed_field(bid_trade_type, <<"R">>) -> 'risktrade';
decode_typed_field(basis_px_type, <<"2">>) -> 'clspxmorn';
decode_typed_field(basis_px_type, <<"3">>) -> 'clspx';
decode_typed_field(basis_px_type, <<"4">>) -> 'currpx';
decode_typed_field(basis_px_type, <<"5">>) -> 'sq';
decode_typed_field(basis_px_type, <<"6">>) -> 'vwapday';
decode_typed_field(basis_px_type, <<"7">>) -> 'vwapmorn';
decode_typed_field(basis_px_type, <<"8">>) -> 'vwapaft';
decode_typed_field(basis_px_type, <<"9">>) -> 'vwapdayxyori';
decode_typed_field(basis_px_type, <<"A">>) -> 'vwapmornxyori';
decode_typed_field(basis_px_type, <<"B">>) -> 'vwapaftxyori';
decode_typed_field(basis_px_type, <<"C">>) -> 'strike';
decode_typed_field(basis_px_type, <<"D">>) -> 'open';
decode_typed_field(basis_px_type, <<"Z">>) -> 'others';
decode_typed_field(no_bid_components, V) -> parse_num(V);
decode_typed_field(country, V) -> V;
decode_typed_field(tot_no_strikes, V) -> parse_num(V);
decode_typed_field(price_type, V) -> parse_num(V);
decode_typed_field(day_order_qty, V) -> parse_num(V);
decode_typed_field(day_cum_qty, V) -> parse_num(V);
decode_typed_field(day_avg_px, V) -> parse_num(V)*1.0;
decode_typed_field(gt_booking_inst, V) -> parse_num(V);
decode_typed_field(no_strikes, V) -> parse_num(V);
decode_typed_field(list_status_type, V) -> parse_num(V);
decode_typed_field(net_gross_ind, V) -> parse_num(V);
decode_typed_field(list_order_status, V) -> parse_num(V);
decode_typed_field(expire_date, V) -> V;
decode_typed_field(list_exec_inst_type, <<"1">>) -> 'immed';
decode_typed_field(list_exec_inst_type, <<"2">>) -> 'wait';
decode_typed_field(list_exec_inst_type, <<"3">>) -> 'exchcivsell';
decode_typed_field(list_exec_inst_type, <<"4">>) -> 'exchcivbuytop';
decode_typed_field(list_exec_inst_type, <<"5">>) -> 'exchcivbuywd';
decode_typed_field(cxl_rej_response_to, <<"1">>) -> 'ordcxlreq';
decode_typed_field(cxl_rej_response_to, <<"2">>) -> 'ordcxlrepreq';
decode_typed_field(underlying_coupon_rate, V) -> V;
decode_typed_field(underlying_contract_multiplier, V) -> V;
decode_typed_field(contra_trade_qty, V) -> parse_num(V);
decode_typed_field(contra_trade_time, V) -> V;
decode_typed_field(clearing_firm, V) -> V;
decode_typed_field(clearing_account, V) -> V;
decode_typed_field(liquidity_num_securities, V) -> parse_num(V);
decode_typed_field(multi_leg_reporting_type, <<"1">>) -> 'single';
decode_typed_field(multi_leg_reporting_type, <<"2">>) -> 'indivleg';
decode_typed_field(multi_leg_reporting_type, <<"3">>) -> 'multileg';
decode_typed_field(strike_time, V) -> V;
decode_typed_field(list_status_text, V) -> V;
decode_typed_field(encoded_list_status_text_len, V) -> parse_num(V);
decode_typed_field(encoded_list_status_text, V) -> V;
decode_typed_field(party_id_source, <<"1">>) -> 'koreaninvestor_id';
decode_typed_field(party_id_source, <<"2">>) -> 'taiwanesequalified';
decode_typed_field(party_id_source, <<"3">>) -> 'taiwanesetradingacct';
decode_typed_field(party_id_source, <<"4">>) -> 'mcdnumber';
decode_typed_field(party_id_source, <<"5">>) -> 'chinesebshare';
decode_typed_field(party_id_source, <<"6">>) -> 'uknationalinspennumber';
decode_typed_field(party_id_source, <<"7">>) -> 'ussocialsecurity';
decode_typed_field(party_id_source, <<"8">>) -> 'usemployer_idnumber';
decode_typed_field(party_id_source, <<"9">>) -> 'australianbusinessnumber';
decode_typed_field(party_id_source, <<"A">>) -> 'australiantaxfilenumber';
decode_typed_field(party_id_source, <<"B">>) -> 'bic';
decode_typed_field(party_id_source, <<"C">>) -> 'accptmarketpart';
decode_typed_field(party_id_source, <<"D">>) -> 'propcode';
decode_typed_field(party_id_source, <<"E">>) -> 'isocode';
decode_typed_field(party_id_source, <<"F">>) -> 'settlentloc';
decode_typed_field(party_id_source, <<"G">>) -> 'mic';
decode_typed_field(party_id_source, <<"H">>) -> 'csdpartcode';
decode_typed_field(party_id_source, <<"I">>) -> 'directeddefinedisitc';
decode_typed_field(party_id, V) -> V;
decode_typed_field(total_volume_traded_date, V) -> V;
decode_typed_field(total_volume_traded_time, V) -> V;
decode_typed_field(net_chg_prev_day, V) -> V;
decode_typed_field(party_role, V) -> parse_num(V);
decode_typed_field(no_party_ids, V) -> parse_num(V);
decode_typed_field(no_security_alt_id, V) -> parse_num(V);
decode_typed_field(security_alt_id, V) -> V;
decode_typed_field(security_alt_id_source, V) -> V;
decode_typed_field(no_underlying_security_alt_id, V) -> parse_num(V);
decode_typed_field(underlying_security_alt_id, V) -> V;
decode_typed_field(underlying_security_alt_id_source, V) -> V;
decode_typed_field(product, V) -> parse_num(V);
decode_typed_field(cfi_code, V) -> V;
decode_typed_field(underlying_product, V) -> parse_num(V);
decode_typed_field(underlying_cfi_code, V) -> V;
decode_typed_field(test_message_indicator, V) -> V == <<"Y">>;
decode_typed_field(quantity_type, V) -> parse_num(V);
decode_typed_field(booking_ref_id, V) -> V;
decode_typed_field(individual_alloc_id, V) -> V;
decode_typed_field(rounding_direction, <<"0">>) -> 'roundnearest';
decode_typed_field(rounding_direction, <<"1">>) -> 'rounddown';
decode_typed_field(rounding_direction, <<"2">>) -> 'roundup';
decode_typed_field(rounding_modulus, V) -> V;
decode_typed_field(country_of_issue, V) -> V;
decode_typed_field(state_or_province_of_issue, V) -> V;
decode_typed_field(locale_of_issue, V) -> V;
decode_typed_field(no_regist_dtls, V) -> parse_num(V);
decode_typed_field(mailing_dtls, V) -> V;
decode_typed_field(investor_country_of_residence, V) -> V;
decode_typed_field(payment_ref, V) -> V;
decode_typed_field(distrib_payment_method, V) -> parse_num(V);
decode_typed_field(cash_distrib_curr, V) -> V;
decode_typed_field(comm_currency, V) -> V;
decode_typed_field(cancellation_rights, <<"M">>) -> 'nowaiver';
decode_typed_field(cancellation_rights, <<"N">>) -> 'noexeconly';
decode_typed_field(cancellation_rights, <<"O">>) -> 'noinstit';
decode_typed_field(cancellation_rights, <<"Y">>) -> 'yes';
decode_typed_field(money_laundering_status, <<"1">>) -> 'exbelowlim';
decode_typed_field(money_laundering_status, <<"2">>) -> 'exclientmoneytype';
decode_typed_field(money_laundering_status, <<"3">>) -> 'exauthcredit';
decode_typed_field(money_laundering_status, <<"N">>) -> 'notchecked';
decode_typed_field(money_laundering_status, <<"Y">>) -> 'passed';
decode_typed_field(mailing_inst, V) -> V;
decode_typed_field(trans_bkd_time, V) -> V;
decode_typed_field(exec_price_type, <<"B">>) -> 'b_idprice';
decode_typed_field(exec_price_type, <<"C">>) -> 'creationprice';
decode_typed_field(exec_price_type, <<"D">>) -> 'creationpriceadjpct';
decode_typed_field(exec_price_type, <<"E">>) -> 'creationpriceadjamt';
decode_typed_field(exec_price_type, <<"O">>) -> 'offerprice';
decode_typed_field(exec_price_type, <<"P">>) -> 'offerpriceminusadjpct';
decode_typed_field(exec_price_type, <<"Q">>) -> 'offerpriceminusadjamt';
decode_typed_field(exec_price_type, <<"S">>) -> 'singleprice';
decode_typed_field(exec_price_adjustment, V) -> V;
decode_typed_field(date_of_birth, V) -> V;
decode_typed_field(trade_report_trans_type, V) -> parse_num(V);
decode_typed_field(card_holder_name, V) -> V;
decode_typed_field(card_number, V) -> V;
decode_typed_field(card_exp_date, V) -> V;
decode_typed_field(card_iss_num, V) -> V;
decode_typed_field(payment_method, V) -> parse_num(V);
decode_typed_field(regist_acct_type, V) -> V;
decode_typed_field(designation, V) -> V;
decode_typed_field(tax_advantage_type, V) -> parse_num(V);
decode_typed_field(regist_rej_reason_text, V) -> V;
decode_typed_field(fund_renew_waiv, <<"N">>) -> 'no';
decode_typed_field(fund_renew_waiv, <<"Y">>) -> 'yes';
decode_typed_field(cash_distrib_agent_name, V) -> V;
decode_typed_field(cash_distrib_agent_code, V) -> V;
decode_typed_field(cash_distrib_agent_acct_number, V) -> V;
decode_typed_field(cash_distrib_pay_ref, V) -> V;
decode_typed_field(cash_distrib_agent_acct_name, V) -> V;
decode_typed_field(card_start_date, V) -> V;
decode_typed_field(payment_date, V) -> V;
decode_typed_field(payment_remitter_id, V) -> V;
decode_typed_field(regist_status, <<"A">>) -> 'accepted';
decode_typed_field(regist_status, <<"H">>) -> 'held';
decode_typed_field(regist_status, <<"N">>) -> 'reminder_ie_registration_instructions_are_still_outstanding';
decode_typed_field(regist_status, <<"R">>) -> 'rejected';
decode_typed_field(regist_rej_reason_code, V) -> parse_num(V);
decode_typed_field(regist_ref_id, V) -> V;
decode_typed_field(regist_dtls, V) -> V;
decode_typed_field(no_distrib_insts, V) -> parse_num(V);
decode_typed_field(regist_email, V) -> V;
decode_typed_field(distrib_percentage, V) -> V;
decode_typed_field(regist_id, V) -> V;
decode_typed_field(regist_trans_type, <<"0">>) -> 'new';
decode_typed_field(regist_trans_type, <<"1">>) -> 'replace';
decode_typed_field(regist_trans_type, <<"2">>) -> 'cancel';
decode_typed_field(exec_valuation_point, V) -> V;
decode_typed_field(order_percent, V) -> V;
decode_typed_field(ownership_type, <<"2">>) -> 'joint_trustees';
decode_typed_field(ownership_type, <<"J">>) -> 'joint_investors';
decode_typed_field(ownership_type, <<"T">>) -> 'tenants_in_common';
decode_typed_field(no_cont_amts, V) -> parse_num(V);
decode_typed_field(cont_amt_type, V) -> parse_num(V);
decode_typed_field(cont_amt_value, V) -> V;
decode_typed_field(cont_amt_curr, V) -> V;
decode_typed_field(owner_type, V) -> parse_num(V);
decode_typed_field(party_sub_id, V) -> V;
decode_typed_field(nested_party_id, V) -> V;
decode_typed_field(secondary_cl_ord_id, V) -> V;
decode_typed_field(secondary_exec_id, V) -> V;
decode_typed_field(order_capacity, <<"A">>) -> 'agency';
decode_typed_field(order_capacity, <<"G">>) -> 'proprietary';
decode_typed_field(order_capacity, <<"I">>) -> 'indiv_idual';
decode_typed_field(order_capacity, <<"P">>) -> 'principal';
decode_typed_field(order_capacity, <<"R">>) -> 'risklessprincipal';
decode_typed_field(order_capacity, <<"W">>) -> 'agentothermember';
decode_typed_field(order_restrictions, V) -> V;
decode_typed_field(mass_cancel_request_type, <<"1">>) -> 'cxlorderssecurity';
decode_typed_field(mass_cancel_request_type, <<"2">>) -> 'cxlordersunderlyingsecurity';
decode_typed_field(mass_cancel_request_type, <<"3">>) -> 'cxlordersproduct';
decode_typed_field(mass_cancel_request_type, <<"4">>) -> 'cxlorderscficode';
decode_typed_field(mass_cancel_request_type, <<"5">>) -> 'cxlorderssecuritytype';
decode_typed_field(mass_cancel_request_type, <<"6">>) -> 'cxlorderstrdsession';
decode_typed_field(mass_cancel_request_type, <<"7">>) -> 'cxlallorders';
decode_typed_field(mass_cancel_response, <<"0">>) -> 'cxlreqrej';
decode_typed_field(mass_cancel_response, <<"1">>) -> 'cxlorderssecurity';
decode_typed_field(mass_cancel_response, <<"2">>) -> 'cxlordersunderlyingsecurity';
decode_typed_field(mass_cancel_response, <<"3">>) -> 'cxlordersproduct';
decode_typed_field(mass_cancel_response, <<"4">>) -> 'cxlorderscficode';
decode_typed_field(mass_cancel_response, <<"5">>) -> 'cxlorderssecuritytype';
decode_typed_field(mass_cancel_response, <<"6">>) -> 'cxlorderstrdsession';
decode_typed_field(mass_cancel_response, <<"7">>) -> 'cxlallorders';
decode_typed_field(mass_cancel_reject_reason, <<"0">>) -> 'masscxlnotsupported';
decode_typed_field(mass_cancel_reject_reason, <<"1">>) -> 'inval_idsecurity';
decode_typed_field(mass_cancel_reject_reason, <<"2">>) -> 'inval_idunderlying';
decode_typed_field(mass_cancel_reject_reason, <<"3">>) -> 'inval_idproduct';
decode_typed_field(mass_cancel_reject_reason, <<"4">>) -> 'inval_idcficode';
decode_typed_field(mass_cancel_reject_reason, <<"5">>) -> 'inval_idsecuritytype';
decode_typed_field(mass_cancel_reject_reason, <<"6">>) -> 'inval_idtrdsession';
decode_typed_field(mass_cancel_reject_reason, <<"99">>) -> 'other';
decode_typed_field(total_affected_orders, V) -> parse_num(V);
decode_typed_field(no_affected_orders, V) -> parse_num(V);
decode_typed_field(affected_order_id, V) -> V;
decode_typed_field(affected_secondary_order_id, V) -> V;
decode_typed_field(quote_type, V) -> parse_num(V);
decode_typed_field(nested_party_role, V) -> parse_num(V);
decode_typed_field(no_nested_party_ids, V) -> parse_num(V);
decode_typed_field(total_accrued_interest_amt, V) -> V;
decode_typed_field(maturity_date, V) -> V;
decode_typed_field(underlying_maturity_date, V) -> V;
decode_typed_field(instr_registry, V) -> V;
decode_typed_field(cash_margin, <<"1">>) -> 'cash';
decode_typed_field(cash_margin, <<"2">>) -> 'marginopen';
decode_typed_field(cash_margin, <<"3">>) -> 'marginclose';
decode_typed_field(nested_party_sub_id, V) -> V;
decode_typed_field(scope, V) -> V;
decode_typed_field(md_implicit_delete, V) -> V == <<"Y">>;
decode_typed_field(cross_id, V) -> V;
decode_typed_field(cross_type, V) -> parse_num(V);
decode_typed_field(cross_prioritization, V) -> parse_num(V);
decode_typed_field(orig_cross_id, V) -> V;
decode_typed_field(no_sides, V) -> parse_num(V);
decode_typed_field(username, V) -> V;
decode_typed_field(password, V) -> V;
decode_typed_field(no_legs, V) -> parse_num(V);
decode_typed_field(leg_currency, V) -> V;
decode_typed_field(tot_no_security_types, V) -> parse_num(V);
decode_typed_field(no_security_types, V) -> parse_num(V);
decode_typed_field(security_list_request_type, V) -> parse_num(V);
decode_typed_field(security_request_result, 0) -> val_idreq;
decode_typed_field(security_request_result, 1) -> inval_idreq;
decode_typed_field(security_request_result, 2) -> noinstrumentsfound;
decode_typed_field(security_request_result, 3) -> notauthorized;
decode_typed_field(security_request_result, 4) -> instrumentunavailable;
decode_typed_field(security_request_result, 5) -> notsupported;
decode_typed_field(round_lot, V) -> parse_num(V);
decode_typed_field(min_trade_vol, V) -> parse_num(V);
decode_typed_field(multi_leg_rpt_type_req, V) -> parse_num(V);
decode_typed_field(leg_covered_or_uncovered, V) -> parse_num(V);
decode_typed_field(leg_price, V) -> parse_num(V)*1.0;
decode_typed_field(trad_ses_status_rej_reason, V) -> parse_num(V);
decode_typed_field(trade_request_id, V) -> V;
decode_typed_field(trade_request_type, V) -> parse_num(V);
decode_typed_field(previously_reported, V) -> V == <<"Y">>;
decode_typed_field(trade_report_id, V) -> V;
decode_typed_field(trade_report_ref_id, V) -> V;
decode_typed_field(match_status, <<"0">>) -> 'compmataff';
decode_typed_field(match_status, <<"1">>) -> 'uncompunmatunaff';
decode_typed_field(match_status, <<"2">>) -> 'advalert';
decode_typed_field(match_type, V) -> V;
decode_typed_field(odd_lot, V) -> V == <<"Y">>;
decode_typed_field(no_clearing_instructions, V) -> parse_num(V);
decode_typed_field(clearing_instruction, V) -> parse_num(V);
decode_typed_field(trade_input_source, V) -> V;
decode_typed_field(trade_input_device, V) -> V;
decode_typed_field(no_dates, V) -> parse_num(V);
decode_typed_field(account_type, V) -> parse_num(V);
decode_typed_field(cust_order_capacity, V) -> parse_num(V);
decode_typed_field(cl_ord_link_id, V) -> V;
decode_typed_field(mass_status_req_id, V) -> V;
decode_typed_field(mass_status_req_type, V) -> parse_num(V);
decode_typed_field(orig_ord_mod_time, V) -> V;
decode_typed_field(leg_settl_date, V) -> V;
decode_typed_field(day_booking_inst, <<"0">>) -> 'can_trigger_booking_without_reference_to_the_order_initiator_auto';
decode_typed_field(day_booking_inst, <<"1">>) -> 'speak_with_order_initiator_before_booking_speak_first';
decode_typed_field(day_booking_inst, <<"2">>) -> 'accumulate';
decode_typed_field(booking_unit, <<"0">>) -> 'each_partial_execution_is_a_bookable_unit';
decode_typed_field(booking_unit, <<"1">>) -> 'aggregate_partial_executions_on_this_order_and_book_one_trade_per_order';
decode_typed_field(booking_unit, <<"2">>) -> 'aggregate_executions_for_this_symbol_s_ide_and_settlement_date';
decode_typed_field(prealloc_method, <<"0">>) -> 'prorata';
decode_typed_field(prealloc_method, <<"1">>) -> 'do_not_prorata_discuss_first';
decode_typed_field(underlying_country_of_issue, V) -> V;
decode_typed_field(underlying_state_or_province_of_issue, V) -> V;
decode_typed_field(underlying_locale_of_issue, V) -> V;
decode_typed_field(underlying_instr_registry, V) -> V;
decode_typed_field(leg_country_of_issue, V) -> V;
decode_typed_field(leg_state_or_province_of_issue, V) -> V;
decode_typed_field(leg_locale_of_issue, V) -> V;
decode_typed_field(leg_instr_registry, V) -> V;
decode_typed_field(leg_symbol, V) -> V;
decode_typed_field(leg_symbol_sfx, V) -> V;
decode_typed_field(leg_security_id, V) -> V;
decode_typed_field(leg_security_id_source, V) -> V;
decode_typed_field(no_leg_security_alt_id, V) -> V;
decode_typed_field(leg_security_alt_id, V) -> V;
decode_typed_field(leg_security_alt_id_source, V) -> V;
decode_typed_field(leg_product, V) -> parse_num(V);
decode_typed_field(leg_cfi_code, V) -> V;
decode_typed_field(leg_security_type, V) -> V;
decode_typed_field(leg_maturity_month_year, V) -> V;
decode_typed_field(leg_maturity_date, V) -> V;
decode_typed_field(leg_strike_price, V) -> parse_num(V)*1.0;
decode_typed_field(leg_contract_multiplier, V) -> V;
decode_typed_field(leg_coupon_rate, V) -> V;
decode_typed_field(leg_security_exchange, V) -> V;
decode_typed_field(leg_issuer, V) -> V;
decode_typed_field(encoded_leg_issuer_len, V) -> parse_num(V);
decode_typed_field(encoded_leg_issuer, V) -> V;
decode_typed_field(leg_security_desc, V) -> V;
decode_typed_field(encoded_leg_security_desc_len, V) -> parse_num(V);
decode_typed_field(encoded_leg_security_desc, V) -> V;
decode_typed_field(leg_ratio_qty, V) -> V;
decode_typed_field(trading_session_sub_id, V) -> V;
decode_typed_field(alloc_type, V) -> parse_num(V);
decode_typed_field(no_hops, V) -> parse_num(V);
decode_typed_field(hop_comp_id, V) -> V;
decode_typed_field(hop_sending_time, V) -> V;
decode_typed_field(hop_ref_id, V) -> parse_num(V);
decode_typed_field(mid_px, V) -> parse_num(V)*1.0;
decode_typed_field(bid_yield, V) -> V;
decode_typed_field(mid_yield, V) -> V;
decode_typed_field(offer_yield, V) -> V;
decode_typed_field(clearing_fee_indicator, V) -> V;
decode_typed_field(working_indicator, V) -> V == <<"Y">>;
decode_typed_field(leg_last_px, V) -> parse_num(V)*1.0;
decode_typed_field(priority_indicator, V) -> parse_num(V);
decode_typed_field(price_improvement, V) -> V;
decode_typed_field(price2, V) -> parse_num(V)*1.0;
decode_typed_field(last_forward_points2, V) -> V;
decode_typed_field(bid_forward_points2, V) -> V;
decode_typed_field(offer_forward_points2, V) -> V;
decode_typed_field(rfq_req_id, V) -> V;
decode_typed_field(mkt_bid_px, V) -> parse_num(V)*1.0;
decode_typed_field(mkt_offer_px, V) -> parse_num(V)*1.0;
decode_typed_field(min_bid_size, V) -> parse_num(V);
decode_typed_field(min_offer_size, V) -> parse_num(V);
decode_typed_field(quote_status_req_id, V) -> V;
decode_typed_field(legal_confirm, V) -> V == <<"Y">>;
decode_typed_field(underlying_last_px, V) -> parse_num(V)*1.0;
decode_typed_field(underlying_last_qty, V) -> parse_num(V);
decode_typed_field(sec_def_status, V) -> parse_num(V);
decode_typed_field(leg_ref_id, V) -> V;
decode_typed_field(contra_leg_ref_id, V) -> V;
decode_typed_field(settl_curr_bid_fx_rate, V) -> V;
decode_typed_field(settl_curr_offer_fx_rate, V) -> V;
decode_typed_field(quote_request_reject_reason, V) -> parse_num(V);
decode_typed_field(side_compliance_id, V) -> V;
decode_typed_field(acct_id_source, V) -> parse_num(V);
decode_typed_field(alloc_acct_id_source, V) -> parse_num(V);
decode_typed_field(benchmark_price, V) -> parse_num(V)*1.0;
decode_typed_field(benchmark_price_type, V) -> parse_num(V);
decode_typed_field(confirm_id, V) -> V;
decode_typed_field(confirm_status, V) -> parse_num(V);
decode_typed_field(confirm_trans_type, V) -> parse_num(V);
decode_typed_field(contract_settl_month, V) -> V;
decode_typed_field(delivery_form, V) -> parse_num(V);
decode_typed_field(last_par_px, V) -> parse_num(V)*1.0;
decode_typed_field(no_leg_allocs, V) -> parse_num(V);
decode_typed_field(leg_alloc_account, V) -> V;
decode_typed_field(leg_individual_alloc_id, V) -> V;
decode_typed_field(leg_alloc_qty, V) -> parse_num(V);
decode_typed_field(leg_alloc_acct_id_source, V) -> V;
decode_typed_field(leg_settl_currency, V) -> V;
decode_typed_field(leg_benchmark_curve_currency, V) -> V;
decode_typed_field(leg_benchmark_curve_name, V) -> V;
decode_typed_field(leg_benchmark_curve_point, V) -> V;
decode_typed_field(leg_benchmark_price, V) -> parse_num(V)*1.0;
decode_typed_field(leg_benchmark_price_type, V) -> parse_num(V);
decode_typed_field(leg_bid_px, V) -> parse_num(V)*1.0;
decode_typed_field(leg_ioi_qty, V) -> V;
decode_typed_field(no_leg_stipulations, V) -> parse_num(V);
decode_typed_field(leg_offer_px, V) -> parse_num(V)*1.0;
decode_typed_field(leg_order_qty, V) -> parse_num(V);
decode_typed_field(leg_price_type, V) -> parse_num(V);
decode_typed_field(leg_qty, V) -> parse_num(V);
decode_typed_field(leg_stipulation_type, V) -> V;
decode_typed_field(leg_stipulation_value, V) -> V;
decode_typed_field(leg_swap_type, V) -> parse_num(V);
decode_typed_field(pool, V) -> V;
decode_typed_field(quote_price_type, V) -> parse_num(V);
decode_typed_field(quote_resp_id, V) -> V;
decode_typed_field(quote_resp_type, V) -> parse_num(V);
decode_typed_field(yield_redemption_date, V) -> V;
decode_typed_field(yield_redemption_price, V) -> parse_num(V)*1.0;
decode_typed_field(yield_redemption_price_type, V) -> parse_num(V);
decode_typed_field(benchmark_security_id, V) -> V;
decode_typed_field(reversal_indicator, V) -> V == <<"Y">>;
decode_typed_field(yield_calc_date, V) -> V;
decode_typed_field(no_positions, V) -> parse_num(V);
decode_typed_field(pos_type, V) -> V;
decode_typed_field(long_qty, V) -> parse_num(V);
decode_typed_field(short_qty, V) -> parse_num(V);
decode_typed_field(pos_qty_status, V) -> parse_num(V);
decode_typed_field(pos_amt_type, V) -> V;
decode_typed_field(pos_amt, V) -> V;
decode_typed_field(pos_trans_type, V) -> parse_num(V);
decode_typed_field(pos_req_id, V) -> V;
decode_typed_field(no_underlyings, V) -> parse_num(V);
decode_typed_field(pos_maint_action, V) -> parse_num(V);
decode_typed_field(orig_pos_req_ref_id, V) -> V;
decode_typed_field(pos_maint_rpt_ref_id, V) -> V;
decode_typed_field(clearing_business_date, V) -> V;
decode_typed_field(settl_sess_id, V) -> V;
decode_typed_field(settl_sess_sub_id, V) -> V;
decode_typed_field(adjustment_type, V) -> parse_num(V);
decode_typed_field(contrary_instruction_indicator, V) -> V == <<"Y">>;
decode_typed_field(prior_spread_indicator, V) -> V == <<"Y">>;
decode_typed_field(pos_maint_rpt_id, V) -> V;
decode_typed_field(pos_maint_status, V) -> parse_num(V);
decode_typed_field(pos_maint_result, V) -> parse_num(V);
decode_typed_field(pos_req_type, V) -> parse_num(V);
decode_typed_field(response_transport_type, V) -> parse_num(V);
decode_typed_field(response_destination, V) -> V;
decode_typed_field(total_num_pos_reports, V) -> parse_num(V);
decode_typed_field(pos_req_result, V) -> parse_num(V);
decode_typed_field(pos_req_status, V) -> parse_num(V);
decode_typed_field(settl_price, V) -> parse_num(V)*1.0;
decode_typed_field(settl_price_type, V) -> parse_num(V);
decode_typed_field(underlying_settl_price, V) -> parse_num(V)*1.0;
decode_typed_field(underlying_settl_price_type, V) -> parse_num(V);
decode_typed_field(prior_settl_price, V) -> parse_num(V)*1.0;
decode_typed_field(no_quote_qualifiers, V) -> parse_num(V);
decode_typed_field(alloc_settl_currency, V) -> V;
decode_typed_field(alloc_settl_curr_amt, V) -> V;
decode_typed_field(interest_at_maturity, V) -> V;
decode_typed_field(leg_dated_date, V) -> V;
decode_typed_field(leg_pool, V) -> V;
decode_typed_field(alloc_interest_at_maturity, V) -> V;
decode_typed_field(alloc_accrued_interest_amt, V) -> V;
decode_typed_field(delivery_date, V) -> V;
decode_typed_field(assignment_method, <<"P">>) -> 'prorata';
decode_typed_field(assignment_method, <<"R">>) -> 'random';
decode_typed_field(assignment_unit, V) -> parse_num(V);
decode_typed_field(open_interest, V) -> V;
decode_typed_field(exercise_method, <<"A">>) -> 'automatic';
decode_typed_field(exercise_method, <<"M">>) -> 'manual';
decode_typed_field(tot_num_trade_reports, V) -> parse_num(V);
decode_typed_field(trade_request_result, V) -> parse_num(V);
decode_typed_field(trade_request_status, V) -> parse_num(V);
decode_typed_field(trade_report_reject_reason, V) -> parse_num(V);
decode_typed_field(side_multi_leg_reporting_type, V) -> parse_num(V);
decode_typed_field(no_pos_amt, V) -> parse_num(V);
decode_typed_field(auto_accept_indicator, V) -> V == <<"Y">>;
decode_typed_field(alloc_report_id, V) -> V;
decode_typed_field(no_nested2_party_ids, V) -> parse_num(V);
decode_typed_field(nested2_party_id, V) -> V;
decode_typed_field(nested2_party_role, V) -> parse_num(V);
decode_typed_field(nested2_party_sub_id, V) -> V;
decode_typed_field(benchmark_security_id_source, V) -> V;
decode_typed_field(security_sub_type, V) -> V;
decode_typed_field(underlying_security_sub_type, V) -> V;
decode_typed_field(leg_security_sub_type, V) -> V;
decode_typed_field(allowable_one_sidedness_pct, V) -> V;
decode_typed_field(allowable_one_sidedness_value, V) -> V;
decode_typed_field(allowable_one_sidedness_curr, V) -> V;
decode_typed_field(no_trd_reg_timestamps, V) -> parse_num(V);
decode_typed_field(trd_reg_timestamp, V) -> V;
decode_typed_field(trd_reg_timestamp_type, V) -> parse_num(V);
decode_typed_field(trd_reg_timestamp_origin, V) -> V;
decode_typed_field(confirm_ref_id, V) -> V;
decode_typed_field(confirm_type, V) -> parse_num(V);
decode_typed_field(confirm_rej_reason, V) -> parse_num(V);
decode_typed_field(individual_alloc_rej_code, V) -> parse_num(V);
decode_typed_field(settl_inst_msg_id, V) -> V;
decode_typed_field(no_settl_inst, V) -> parse_num(V);
decode_typed_field(last_update_time, V) -> V;
decode_typed_field(alloc_settl_inst_type, V) -> parse_num(V);
decode_typed_field(no_settl_party_ids, V) -> parse_num(V);
decode_typed_field(settl_party_id, V) -> V;
decode_typed_field(settl_party_role, V) -> parse_num(V);
decode_typed_field(settl_party_sub_id, V) -> V;
decode_typed_field(settl_party_sub_id_type, V) -> parse_num(V);
decode_typed_field(dlvy_inst_type, <<"C">>) -> 'cash';
decode_typed_field(dlvy_inst_type, <<"S">>) -> 'securities';
decode_typed_field(termination_type, V) -> parse_num(V);
decode_typed_field(next_expected_msg_seq_num, V) -> parse_num(V);
decode_typed_field(ord_status_req_id, V) -> V;
decode_typed_field(settl_inst_req_id, V) -> V;
decode_typed_field(settl_inst_req_rej_code, V) -> parse_num(V);
decode_typed_field(secondary_alloc_id, V) -> V;
decode_typed_field(alloc_report_type, V) -> parse_num(V);
decode_typed_field(alloc_report_ref_id, V) -> V;
decode_typed_field(alloc_canc_replace_reason, V) -> parse_num(V);
decode_typed_field(copy_msg_indicator, V) -> V == <<"Y">>;
decode_typed_field(alloc_account_type, V) -> parse_num(V);
decode_typed_field(order_avg_px, V) -> parse_num(V)*1.0;
decode_typed_field(order_booking_qty, V) -> parse_num(V);
decode_typed_field(no_settl_party_sub_ids, V) -> parse_num(V);
decode_typed_field(no_party_sub_ids, V) -> parse_num(V);
decode_typed_field(party_sub_id_type, V) -> parse_num(V);
decode_typed_field(no_nested_party_sub_ids, V) -> parse_num(V);
decode_typed_field(nested_party_sub_id_type, V) -> parse_num(V);
decode_typed_field(no_nested2_party_sub_ids, V) -> parse_num(V);
decode_typed_field(nested2_party_sub_id_type, V) -> parse_num(V);
decode_typed_field(alloc_intermed_req_type, V) -> parse_num(V);
decode_typed_field(underlying_px, V) -> parse_num(V)*1.0;
decode_typed_field(price_delta, V) -> V;
decode_typed_field(appl_queue_max, V) -> parse_num(V);
decode_typed_field(appl_queue_depth, V) -> parse_num(V);
decode_typed_field(appl_queue_resolution, V) -> parse_num(V);
decode_typed_field(appl_queue_action, V) -> parse_num(V);
decode_typed_field(no_alt_md_source, V) -> parse_num(V);
decode_typed_field(alt_md_source_id, V) -> V;
decode_typed_field(secondary_trade_report_id, V) -> V;
decode_typed_field(avg_px_indicator, V) -> parse_num(V);
decode_typed_field(trade_link_id, V) -> V;
decode_typed_field(order_input_device, V) -> V;
decode_typed_field(underlying_trading_session_id, V) -> V;
decode_typed_field(underlying_trading_session_sub_id, V) -> V;
decode_typed_field(trade_leg_ref_id, V) -> V;
decode_typed_field(exchange_rule, V) -> V;
decode_typed_field(trade_alloc_indicator, V) -> parse_num(V);
decode_typed_field(expiration_cycle, V) -> parse_num(V);
decode_typed_field(trd_type, V) -> parse_num(V);
decode_typed_field(trd_sub_type, V) -> parse_num(V);
decode_typed_field(transfer_reason, V) -> V;
decode_typed_field(asgn_req_id, V) -> V;
decode_typed_field(tot_num_assignment_reports, V) -> parse_num(V);
decode_typed_field(asgn_rpt_id, V) -> V;
decode_typed_field(threshold_amount, V) -> V;
decode_typed_field(peg_move_type, V) -> parse_num(V);
decode_typed_field(peg_offset_type, V) -> parse_num(V);
decode_typed_field(peg_limit_type, V) -> parse_num(V);
decode_typed_field(peg_round_direction, V) -> parse_num(V);
decode_typed_field(pegged_price, V) -> parse_num(V)*1.0;
decode_typed_field(peg_scope, V) -> parse_num(V);
decode_typed_field(discretion_move_type, V) -> parse_num(V);
decode_typed_field(discretion_offset_type, V) -> parse_num(V);
decode_typed_field(discretion_limit_type, V) -> parse_num(V);
decode_typed_field(discretion_round_direction, V) -> parse_num(V);
decode_typed_field(discretion_price, V) -> parse_num(V)*1.0;
decode_typed_field(discretion_scope, V) -> parse_num(V);
decode_typed_field(target_strategy, V) -> parse_num(V);
decode_typed_field(target_strategy_parameters, V) -> V;
decode_typed_field(participation_rate, V) -> V;
decode_typed_field(target_strategy_performance, V) -> V;
decode_typed_field(last_liquidity_ind, V) -> parse_num(V);
decode_typed_field(publish_trd_indicator, V) -> V == <<"Y">>;
decode_typed_field(short_sale_reason, V) -> parse_num(V);
decode_typed_field(qty_type, V) -> parse_num(V);
decode_typed_field(secondary_trd_type, V) -> parse_num(V);
decode_typed_field(trade_report_type, V) -> parse_num(V);
decode_typed_field(alloc_no_orders_type, V) -> parse_num(V);
decode_typed_field(shared_commission, V) -> V;
decode_typed_field(confirm_req_id, V) -> V;
decode_typed_field(avg_par_px, V) -> parse_num(V)*1.0;
decode_typed_field(reported_px, V) -> parse_num(V)*1.0;
decode_typed_field(no_capacities, V) -> parse_num(V);
decode_typed_field(order_capacity_qty, V) -> parse_num(V);
decode_typed_field(no_events, V) -> parse_num(V);
decode_typed_field(event_type, V) -> parse_num(V);
decode_typed_field(event_date, V) -> V;
decode_typed_field(event_px, V) -> parse_num(V)*1.0;
decode_typed_field(event_text, V) -> V;
decode_typed_field(pct_at_risk, V) -> V;
decode_typed_field(no_instr_attrib, V) -> parse_num(V);
decode_typed_field(instr_attrib_type, V) -> parse_num(V);
decode_typed_field(instr_attrib_value, V) -> V;
decode_typed_field(dated_date, V) -> V;
decode_typed_field(interest_accrual_date, V) -> V;
decode_typed_field(cp_program, V) -> parse_num(V);
decode_typed_field(cp_reg_type, V) -> V;
decode_typed_field(underlying_cp_program, V) -> V;
decode_typed_field(underlying_cp_reg_type, V) -> V;
decode_typed_field(underlying_qty, V) -> parse_num(V);
decode_typed_field(trd_match_id, V) -> V;
decode_typed_field(secondary_trade_report_ref_id, V) -> V;
decode_typed_field(underlying_dirty_price, V) -> parse_num(V)*1.0;
decode_typed_field(underlying_end_price, V) -> parse_num(V)*1.0;
decode_typed_field(underlying_start_value, V) -> V;
decode_typed_field(underlying_current_value, V) -> V;
decode_typed_field(underlying_end_value, V) -> V;
decode_typed_field(no_underlying_stips, V) -> parse_num(V);
decode_typed_field(underlying_stip_type, V) -> V;
decode_typed_field(underlying_stip_value, V) -> V;
decode_typed_field(maturity_net_money, V) -> V;
decode_typed_field(misc_fee_basis, V) -> parse_num(V);
decode_typed_field(tot_no_allocs, V) -> parse_num(V);
decode_typed_field(last_fragment, V) -> V == <<"Y">>;
decode_typed_field(coll_req_id, V) -> V;
decode_typed_field(coll_asgn_reason, V) -> parse_num(V);
decode_typed_field(coll_inquiry_qualifier, V) -> parse_num(V);
decode_typed_field(no_trades, V) -> parse_num(V);
decode_typed_field(margin_ratio, V) -> V;
decode_typed_field(margin_excess, V) -> V;
decode_typed_field(total_net_value, V) -> V;
decode_typed_field(cash_outstanding, V) -> V;
decode_typed_field(coll_asgn_id, V) -> V;
decode_typed_field(coll_asgn_trans_type, V) -> parse_num(V);
decode_typed_field(coll_resp_id, V) -> V;
decode_typed_field(coll_asgn_resp_type, V) -> parse_num(V);
decode_typed_field(coll_asgn_reject_reason, V) -> parse_num(V);
decode_typed_field(coll_asgn_ref_id, V) -> V;
decode_typed_field(coll_rpt_id, V) -> V;
decode_typed_field(coll_inquiry_id, V) -> V;
decode_typed_field(coll_status, V) -> parse_num(V);
decode_typed_field(tot_num_reports, V) -> parse_num(V);
decode_typed_field(last_rpt_requested, V) -> V == <<"Y">>;
decode_typed_field(agreement_desc, V) -> V;
decode_typed_field(agreement_id, V) -> V;
decode_typed_field(agreement_date, V) -> V;
decode_typed_field(start_date, V) -> V;
decode_typed_field(end_date, V) -> V;
decode_typed_field(agreement_currency, V) -> V;
decode_typed_field(delivery_type, V) -> parse_num(V);
decode_typed_field(end_accrued_interest_amt, V) -> V;
decode_typed_field(start_cash, V) -> V;
decode_typed_field(end_cash, V) -> V;
decode_typed_field(user_request_id, V) -> V;
decode_typed_field(user_request_type, V) -> parse_num(V);
decode_typed_field(new_password, V) -> V;
decode_typed_field(user_status, V) -> parse_num(V);
decode_typed_field(user_status_text, V) -> V;
decode_typed_field(status_value, V) -> parse_num(V);
decode_typed_field(status_text, V) -> V;
decode_typed_field(ref_comp_id, V) -> V;
decode_typed_field(ref_sub_id, V) -> V;
decode_typed_field(network_response_id, V) -> V;
decode_typed_field(network_request_id, V) -> V;
decode_typed_field(last_network_response_id, V) -> V;
decode_typed_field(network_request_type, V) -> parse_num(V);
decode_typed_field(no_comp_ids, V) -> parse_num(V);
decode_typed_field(network_status_response_type, V) -> parse_num(V);
decode_typed_field(no_coll_inquiry_qualifier, V) -> parse_num(V);
decode_typed_field(trd_rpt_status, V) -> parse_num(V);
decode_typed_field(affirm_status, V) -> parse_num(V);
decode_typed_field(underlying_strike_currency, V) -> V;
decode_typed_field(leg_strike_currency, V) -> V;
decode_typed_field(time_bracket, V) -> V;
decode_typed_field(coll_action, V) -> parse_num(V);
decode_typed_field(coll_inquiry_status, V) -> parse_num(V);
decode_typed_field(coll_inquiry_result, V) -> parse_num(V);
decode_typed_field(strike_currency, V) -> V;
decode_typed_field(no_nested3_party_ids, V) -> parse_num(V);
decode_typed_field(nested3_party_id, V) -> V;
decode_typed_field(nested3_party_role, V) -> parse_num(V);
decode_typed_field(no_nested3_party_sub_ids, V) -> parse_num(V);
decode_typed_field(nested3_party_sub_id, V) -> V;
decode_typed_field(nested3_party_sub_id_type, V) -> parse_num(V);
decode_typed_field(leg_contract_settl_month, V) -> V;
decode_typed_field(leg_interest_accrual_date, V) -> V;
decode_typed_field(appl_ver_id, V) -> V;
decode_typed_field(default_appl_ver_id, V) -> V;
decode_typed_field(_Key, V) -> V.

encode_typed_field(adv_side, 'buy') -> <<"B">>;
encode_typed_field(adv_side, 'sell') -> <<"S">>;
encode_typed_field(adv_side, 'trade') -> <<"T">>;
encode_typed_field(adv_side, 'cross') -> <<"X">>;
encode_typed_field(avg_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(begin_seq_no, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(body_length, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(comm_type, 'per_unit') -> <<"1">>;
encode_typed_field(comm_type, 'percent') -> <<"2">>;
encode_typed_field(comm_type, 'absolute') -> <<"3">>;
encode_typed_field(comm_type, 'pctwaivedcshdisc') -> <<"4">>;
encode_typed_field(comm_type, 'pctwaivedenunits') -> <<"5">>;
encode_typed_field(comm_type, 'perbond') -> <<"6">>;
encode_typed_field(cum_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(end_seq_no, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(exec_trans_type, 'new') -> <<"0">>;
encode_typed_field(exec_trans_type, 'cancel') -> <<"1">>;
encode_typed_field(exec_trans_type, 'correct') -> <<"2">>;
encode_typed_field(exec_trans_type, 'status') -> <<"3">>;
encode_typed_field(handl_inst, 'autoexecpriv') -> <<"1">>;
encode_typed_field(handl_inst, 'autoexecpub') -> <<"2">>;
encode_typed_field(handl_inst, 'manual') -> <<"3">>;
encode_typed_field(ioi_qlty_ind, 'high') -> <<"H">>;
encode_typed_field(ioi_qlty_ind, 'low') -> <<"L">>;
encode_typed_field(ioi_qlty_ind, 'medium') -> <<"M">>;
encode_typed_field(ioi_trans_type, 'cancel') -> <<"C">>;
encode_typed_field(ioi_trans_type, 'new') -> <<"N">>;
encode_typed_field(ioi_trans_type, 'replace') -> <<"R">>;
encode_typed_field(last_capacity, 'a') -> <<"1">>;
encode_typed_field(last_capacity, 'xa') -> <<"2">>;
encode_typed_field(last_capacity, 'xp') -> <<"3">>;
encode_typed_field(last_capacity, 'p') -> <<"4">>;
encode_typed_field(last_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(last_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_lines_of_text, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(msg_seq_num, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(msg_type, V) -> number_by_message(V);
encode_typed_field(new_seq_no, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(order_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(ord_status, 'new') -> <<"0">>;
encode_typed_field(ord_status, 'partial') -> <<"1">>;
encode_typed_field(ord_status, 'filled') -> <<"2">>;
encode_typed_field(ord_status, 'done') -> <<"3">>;
encode_typed_field(ord_status, 'canceled') -> <<"4">>;
encode_typed_field(ord_status, 'pending_cancel') -> <<"6">>;
encode_typed_field(ord_status, 'stopped') -> <<"7">>;
encode_typed_field(ord_status, 'rejected') -> <<"8">>;
encode_typed_field(ord_status, 'suspended') -> <<"9">>;
encode_typed_field(ord_status, 'pendingnew') -> <<"A">>;
encode_typed_field(ord_status, 'calculated') -> <<"B">>;
encode_typed_field(ord_status, 'expired') -> <<"C">>;
encode_typed_field(ord_status, 'acceptb_idding') -> <<"D">>;
encode_typed_field(ord_status, 'pendingrep') -> <<"E">>;
encode_typed_field(ord_type, 'market') -> <<"1">>;
encode_typed_field(ord_type, 'limit') -> <<"2">>;
encode_typed_field(ord_type, 'stop') -> <<"3">>;
encode_typed_field(ord_type, 'stoplimit') -> <<"4">>;
encode_typed_field(ord_type, 'marketonclose') -> <<"5">>;
encode_typed_field(ord_type, 'withorwithout') -> <<"6">>;
encode_typed_field(ord_type, 'limitorbetter') -> <<"7">>;
encode_typed_field(ord_type, 'limitwithorwithout') -> <<"8">>;
encode_typed_field(ord_type, 'onbasis') -> <<"9">>;
encode_typed_field(ord_type, 'onclose') -> <<"A">>;
encode_typed_field(ord_type, 'limitonclose') -> <<"B">>;
encode_typed_field(ord_type, 'forexmarket') -> <<"C">>;
encode_typed_field(ord_type, 'previouslyquoted') -> <<"D">>;
encode_typed_field(ord_type, 'previouslyindicated') -> <<"E">>;
encode_typed_field(ord_type, 'forexlimit') -> <<"F">>;
encode_typed_field(ord_type, 'forexswap') -> <<"G">>;
encode_typed_field(ord_type, 'forexpreviouslyquoted') -> <<"H">>;
encode_typed_field(ord_type, 'funari') -> <<"I">>;
encode_typed_field(ord_type, 'marketiftouched') -> <<"J">>;
encode_typed_field(ord_type, 'marketwithleftoverlimit') -> <<"K">>;
encode_typed_field(ord_type, 'previousfundvaluationpoint') -> <<"L">>;
encode_typed_field(ord_type, 'nextfundvaluationpoint') -> <<"M">>;
encode_typed_field(ord_type, 'pegged') -> <<"P">>;
encode_typed_field(poss_dup_flag, true) -> <<"Y">>;
encode_typed_field(poss_dup_flag,false) -> <<"N">>;
encode_typed_field(price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(ref_seq_num, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(rule80a, 'agencysingle') -> <<"A">>;
encode_typed_field(rule80a, 'shtextrana') -> <<"B">>;
encode_typed_field(rule80a, 'prgnonindexarbmem') -> <<"C">>;
encode_typed_field(rule80a, 'prgindexarbmem') -> <<"D">>;
encode_typed_field(rule80a, 'marketmaker') -> <<"E">>;
encode_typed_field(rule80a, 'shtextranw') -> <<"F">>;
encode_typed_field(rule80a, 'shtextrani') -> <<"H">>;
encode_typed_field(rule80a, 'invinestor') -> <<"I">>;
encode_typed_field(rule80a, 'prgnonindexarbinv') -> <<"J">>;
encode_typed_field(rule80a, 'prgindexarbinv') -> <<"K">>;
encode_typed_field(rule80a, 'shtextranmem') -> <<"L">>;
encode_typed_field(rule80a, 'prgnonindexarbothmem') -> <<"M">>;
encode_typed_field(rule80a, 'prgindexarbothmem') -> <<"N">>;
encode_typed_field(rule80a, 'competingdealer') -> <<"O">>;
encode_typed_field(rule80a, 'principal') -> <<"P">>;
encode_typed_field(rule80a, 'compdeale_r1') -> <<"R">>;
encode_typed_field(rule80a, 'specialist') -> <<"S">>;
encode_typed_field(rule80a, 'compdeale_r2') -> <<"T">>;
encode_typed_field(rule80a, 'prgindexarbothagn') -> <<"U">>;
encode_typed_field(rule80a, 'allotheragn') -> <<"W">>;
encode_typed_field(rule80a, 'shtextranmemwt') -> <<"X">>;
encode_typed_field(rule80a, 'prgnonindexarbothagn') -> <<"Y">>;
encode_typed_field(rule80a, 'shtextrannonmem') -> <<"Z">>;
encode_typed_field(quantity, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(side, 'buy') -> <<"1">>;
encode_typed_field(side, 'sell') -> <<"2">>;
encode_typed_field(side, 'buymin') -> <<"3">>;
encode_typed_field(side, 'sellplus') -> <<"4">>;
encode_typed_field(side, 'sellsht') -> <<"5">>;
encode_typed_field(side, 'sellshtex') -> <<"6">>;
encode_typed_field(side, 'undisc') -> <<"7">>;
encode_typed_field(side, 'cross') -> <<"8">>;
encode_typed_field(side, 'crossshort') -> <<"9">>;
encode_typed_field(side, 'crossshortex') -> <<"A">>;
encode_typed_field(side, 'asdefined') -> <<"B">>;
encode_typed_field(side, 'opposite') -> <<"C">>;
encode_typed_field(side, 'subscribe') -> <<"D">>;
encode_typed_field(side, 'redeem') -> <<"E">>;
encode_typed_field(side, 'lendfinancing') -> <<"F">>;
encode_typed_field(side, 'borrowfinancing') -> <<"G">>;
encode_typed_field(time_in_force, 'day') -> <<"0">>;
encode_typed_field(time_in_force, 'goodtillcancel') -> <<"1">>;
encode_typed_field(time_in_force, 'attheopening') -> <<"2">>;
encode_typed_field(time_in_force, 'immediateorcancel') -> <<"3">>;
encode_typed_field(time_in_force, 'fillorkill') -> <<"4">>;
encode_typed_field(time_in_force, 'goodtillcrossing') -> <<"5">>;
encode_typed_field(time_in_force, 'goodtilldate') -> <<"6">>;
encode_typed_field(time_in_force, 'attheclose') -> <<"7">>;
encode_typed_field(urgency, 'normal') -> <<"0">>;
encode_typed_field(urgency, 'flash') -> <<"1">>;
encode_typed_field(urgency, 'background') -> <<"2">>;
encode_typed_field(settl_type, 'regular') -> <<"0">>;
encode_typed_field(settl_type, 'cash') -> <<"1">>;
encode_typed_field(settl_type, 'nextday') -> <<"2">>;
encode_typed_field(settl_type, 't2') -> <<"3">>;
encode_typed_field(settl_type, 't3') -> <<"4">>;
encode_typed_field(settl_type, 't4') -> <<"5">>;
encode_typed_field(settl_type, 'future') -> <<"6">>;
encode_typed_field(settl_type, 'whenissued') -> <<"7">>;
encode_typed_field(settl_type, 't5') -> <<"8">>;
encode_typed_field(settl_type, 't1') -> <<"9">>;
encode_typed_field(list_seq_no, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_no_orders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_trans_type, 'new') -> <<"0">>;
encode_typed_field(alloc_trans_type, 'replace') -> <<"1">>;
encode_typed_field(alloc_trans_type, 'cancel') -> <<"2">>;
encode_typed_field(alloc_trans_type, 'preliminary') -> <<"3">>;
encode_typed_field(alloc_trans_type, 'calculated') -> <<"4">>;
encode_typed_field(alloc_trans_type, 'calculatedwithoutpreliminary') -> <<"5">>;
encode_typed_field(no_orders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(avg_px_precision, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(position_effect, 'close') -> <<"C">>;
encode_typed_field(position_effect, 'fifo') -> <<"F">>;
encode_typed_field(position_effect, 'open') -> <<"O">>;
encode_typed_field(position_effect, 'rolled') -> <<"R">>;
encode_typed_field(no_allocs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(process_code, 'regular') -> <<"0">>;
encode_typed_field(process_code, 'softdollar') -> <<"1">>;
encode_typed_field(process_code, 'stepin') -> <<"2">>;
encode_typed_field(process_code, 'stepout') -> <<"3">>;
encode_typed_field(process_code, 'stepinsoft') -> <<"4">>;
encode_typed_field(process_code, 'stepoutsoft') -> <<"5">>;
encode_typed_field(process_code, 'plansponsor') -> <<"6">>;
encode_typed_field(no_rpts, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(rpt_seq, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cxl_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_dlvy_inst, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_rej_code, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(secure_data_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(signature_length, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(email_type, 'new') -> <<"0">>;
encode_typed_field(email_type, 'reply') -> <<"1">>;
encode_typed_field(email_type, 'adminreply') -> <<"2">>;
encode_typed_field(raw_data_length, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(poss_resend, true) -> <<"Y">>;
encode_typed_field(poss_resend,false) -> <<"N">>;
encode_typed_field(encrypt_method, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(stop_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(cxl_rej_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(ord_rej_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(ioi_qualifier, 'aon') -> <<"A">>;
encode_typed_field(ioi_qualifier, 'moc') -> <<"B">>;
encode_typed_field(ioi_qualifier, 'atclose') -> <<"C">>;
encode_typed_field(ioi_qualifier, 'vwap') -> <<"D">>;
encode_typed_field(ioi_qualifier, 'intouch') -> <<"I">>;
encode_typed_field(ioi_qualifier, 'limit') -> <<"L">>;
encode_typed_field(ioi_qualifier, 'morebehind') -> <<"M">>;
encode_typed_field(ioi_qualifier, 'atopen') -> <<"O">>;
encode_typed_field(ioi_qualifier, 'takeposition') -> <<"P">>;
encode_typed_field(ioi_qualifier, 'atmarket') -> <<"Q">>;
encode_typed_field(ioi_qualifier, 'readytrade') -> <<"R">>;
encode_typed_field(ioi_qualifier, 'portshow') -> <<"S">>;
encode_typed_field(ioi_qualifier, 'throughday') -> <<"T">>;
encode_typed_field(ioi_qualifier, 'versus') -> <<"V">>;
encode_typed_field(ioi_qualifier, 'indwrkaway') -> <<"W">>;
encode_typed_field(ioi_qualifier, 'crossopp') -> <<"X">>;
encode_typed_field(ioi_qualifier, 'atm_id') -> <<"Y">>;
encode_typed_field(ioi_qualifier, 'preopen') -> <<"Z">>;
encode_typed_field(heart_bt_int, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(min_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(max_floor, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(report_to_exch, true) -> <<"Y">>;
encode_typed_field(report_to_exch,false) -> <<"N">>;
encode_typed_field(locate_reqd, true) -> <<"Y">>;
encode_typed_field(locate_reqd,false) -> <<"N">>;
encode_typed_field(forex_req, true) -> <<"Y">>;
encode_typed_field(forex_req,false) -> <<"N">>;
encode_typed_field(gap_fill_flag, true) -> <<"Y">>;
encode_typed_field(gap_fill_flag,false) -> <<"N">>;
encode_typed_field(no_execs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(dk_reason, 'unknownsymbol') -> <<"A">>;
encode_typed_field(dk_reason, 'wrongs_ide') -> <<"B">>;
encode_typed_field(dk_reason, 'quantityexceedsorder') -> <<"C">>;
encode_typed_field(dk_reason, 'nomatch') -> <<"D">>;
encode_typed_field(dk_reason, 'priceexceedslimit') -> <<"E">>;
encode_typed_field(dk_reason, 'calculationdifference') -> <<"F">>;
encode_typed_field(dk_reason, 'other') -> <<"Z">>;
encode_typed_field(ioi_natural_flag, true) -> <<"Y">>;
encode_typed_field(ioi_natural_flag,false) -> <<"N">>;
encode_typed_field(bid_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.13f", [V*1.0]));
encode_typed_field(offer_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.13f", [V*1.0]));
encode_typed_field(bid_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(offer_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_misc_fees, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(misc_fee_type, 'reg') -> <<"1">>;
encode_typed_field(misc_fee_type, 'transaction') -> <<"10">>;
encode_typed_field(misc_fee_type, 'conversion') -> <<"11">>;
encode_typed_field(misc_fee_type, 'agent') -> <<"12">>;
encode_typed_field(misc_fee_type, 'tax') -> <<"2">>;
encode_typed_field(misc_fee_type, 'localcomm') -> <<"3">>;
encode_typed_field(misc_fee_type, 'exchfee') -> <<"4">>;
encode_typed_field(misc_fee_type, 'stamp') -> <<"5">>;
encode_typed_field(misc_fee_type, 'levy') -> <<"6">>;
encode_typed_field(misc_fee_type, 'other') -> <<"7">>;
encode_typed_field(misc_fee_type, 'markup') -> <<"8">>;
encode_typed_field(misc_fee_type, 'consumption') -> <<"9">>;
encode_typed_field(prev_close_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(reset_seq_num_flag, true) -> <<"Y">>;
encode_typed_field(reset_seq_num_flag,false) -> <<"N">>;
encode_typed_field(no_related_sym, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(exec_type, 'new') -> <<"0">>;
encode_typed_field(exec_type, 'done') -> <<"3">>;
encode_typed_field(exec_type, 'canceled') -> <<"4">>;
encode_typed_field(exec_type, 'replaced') -> <<"5">>;
encode_typed_field(exec_type, 'pendingcxl') -> <<"6">>;
encode_typed_field(exec_type, 'stopped') -> <<"7">>;
encode_typed_field(exec_type, 'rejected') -> <<"8">>;
encode_typed_field(exec_type, 'suspended') -> <<"9">>;
encode_typed_field(exec_type, 'pendingnew') -> <<"A">>;
encode_typed_field(exec_type, 'calculated') -> <<"B">>;
encode_typed_field(exec_type, 'expired') -> <<"C">>;
encode_typed_field(exec_type, 'restated') -> <<"D">>;
encode_typed_field(exec_type, 'pendingreplace') -> <<"E">>;
encode_typed_field(exec_type, 'trade') -> <<"F">>;
encode_typed_field(exec_type, 'tradecorrect') -> <<"G">>;
encode_typed_field(exec_type, 'tradecancel') -> <<"H">>;
encode_typed_field(exec_type, 'orderstatus') -> <<"I">>;
encode_typed_field(leaves_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cash_order_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_avg_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(settl_curr_fx_rate_calc, 'multiply') -> <<"M">>;
encode_typed_field(settl_curr_fx_rate_calc, 'div_ide') -> <<"D">>;
encode_typed_field(num_days_interest, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_inst_mode, 'default') -> <<"0">>;
encode_typed_field(settl_inst_mode, 'siprov_ided') -> <<"1">>;
encode_typed_field(settl_inst_mode, 'accountoverr_iding') -> <<"2">>;
encode_typed_field(settl_inst_mode, 'accountstanding') -> <<"3">>;
encode_typed_field(settl_inst_mode, 'civordersingleacct') -> <<"4">>;
encode_typed_field(settl_inst_mode, 'reject') -> <<"5">>;
encode_typed_field(settl_inst_trans_type, 'cancel') -> <<"C">>;
encode_typed_field(settl_inst_trans_type, 'new') -> <<"N">>;
encode_typed_field(settl_inst_trans_type, 'replace') -> <<"R">>;
encode_typed_field(settl_inst_trans_type, 'restate') -> <<"T">>;
encode_typed_field(settl_inst_source, 'brokerinstr') -> <<"1">>;
encode_typed_field(settl_inst_source, 'instinstr') -> <<"2">>;
encode_typed_field(settl_inst_source, 'investorciv') -> <<"3">>;
encode_typed_field(stand_inst_db_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_delivery_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(bid_spot_rate, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(offer_spot_rate, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(order_qty2, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_spot_rate, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(alloc_link_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_ioi_qualifiers, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(put_or_call, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(strike_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(covered_or_uncovered, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(customer_or_firm, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(notify_broker_of_credit, true) -> <<"Y">>;
encode_typed_field(notify_broker_of_credit,false) -> <<"N">>;
encode_typed_field(alloc_handl_inst, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(max_show, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(xml_data_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_routing_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(routing_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(benchmark, 'curve') -> <<"1">>;
encode_typed_field(benchmark, '5yr') -> <<"2">>;
encode_typed_field(benchmark, 'ol_d5') -> <<"3">>;
encode_typed_field(benchmark, '10_yr') -> <<"4">>;
encode_typed_field(benchmark, 'ol_d10') -> <<"5">>;
encode_typed_field(benchmark, '30_yr') -> <<"6">>;
encode_typed_field(benchmark, 'ol_d30') -> <<"7">>;
encode_typed_field(benchmark, '3molibor') -> <<"8">>;
encode_typed_field(benchmark, '6molibor') -> <<"9">>;
encode_typed_field(repurchase_term, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_stipulations, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(repo_collateral_security_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_repo_collateral_security_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_repurchase_term, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_repo_collateral_security_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_repurchase_term, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(traded_flat_switch, true) -> <<"Y">>;
encode_typed_field(traded_flat_switch,false) -> <<"N">>;
encode_typed_field(basis_feature_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(subscription_request_type, 'snapshot') -> <<"0">>;
encode_typed_field(subscription_request_type, 'snapshotupdate') -> <<"1">>;
encode_typed_field(subscription_request_type, 'unsubscribe') -> <<"2">>;
encode_typed_field(market_depth, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(md_update_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(aggregated_book, true) -> <<"Y">>;
encode_typed_field(aggregated_book,false) -> <<"N">>;
encode_typed_field(no_md_entry_types, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_md_entries, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(md_entry_type, 'bid') -> <<"0">>;
encode_typed_field(md_entry_type, 'offer') -> <<"1">>;
encode_typed_field(md_entry_type, 'trade') -> <<"2">>;
encode_typed_field(md_entry_type, 'indexvalue') -> <<"3">>;
encode_typed_field(md_entry_type, 'opening') -> <<"4">>;
encode_typed_field(md_entry_type, 'closing') -> <<"5">>;
encode_typed_field(md_entry_type, 'settlement') -> <<"6">>;
encode_typed_field(md_entry_type, 'tradinghigh') -> <<"7">>;
encode_typed_field(md_entry_type, 'tradinglow') -> <<"8">>;
encode_typed_field(md_entry_type, 'tradingvwap') -> <<"9">>;
encode_typed_field(md_entry_type, 'imbalance') -> <<"A">>;
encode_typed_field(md_entry_type, 'tradevolume') -> <<"B">>;
encode_typed_field(md_entry_type, 'openinterest') -> <<"C">>;
encode_typed_field(md_entry_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(md_entry_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tick_direction, 'plus') -> <<"0">>;
encode_typed_field(tick_direction, 'zeroplus') -> <<"1">>;
encode_typed_field(tick_direction, 'minus') -> <<"2">>;
encode_typed_field(tick_direction, 'zerominus') -> <<"3">>;
encode_typed_field(md_update_action, 'new') -> <<"0">>;
encode_typed_field(md_update_action, 'change') -> <<"1">>;
encode_typed_field(md_update_action, 'delete') -> <<"2">>;
encode_typed_field(md_req_rej_reason, 'unknownsym') -> <<"0">>;
encode_typed_field(md_req_rej_reason, 'dup_id') -> <<"1">>;
encode_typed_field(md_req_rej_reason, 'insband') -> <<"2">>;
encode_typed_field(md_req_rej_reason, 'insperm') -> <<"3">>;
encode_typed_field(md_req_rej_reason, 'unsuppsub') -> <<"4">>;
encode_typed_field(md_req_rej_reason, 'unsuppmktdepth') -> <<"5">>;
encode_typed_field(md_req_rej_reason, 'unsuppmdupdate') -> <<"6">>;
encode_typed_field(md_req_rej_reason, 'unsuppaggbk') -> <<"7">>;
encode_typed_field(md_req_rej_reason, 'unsuppentry') -> <<"8">>;
encode_typed_field(md_req_rej_reason, 'unsupptrdsession_id') -> <<"9">>;
encode_typed_field(md_req_rej_reason, 'unsuppscope') -> <<"A">>;
encode_typed_field(md_req_rej_reason, 'unsupppositioneffectsettleflag') -> <<"B">>;
encode_typed_field(md_req_rej_reason, 'unsuppmdimplicitdelete') -> <<"C">>;
encode_typed_field(delete_reason, 'canceltradebust') -> <<"0">>;
encode_typed_field(delete_reason, 'error') -> <<"1">>;
encode_typed_field(seller_days, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(md_entry_position_no, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(def_bid_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(def_offer_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_quote_entries, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_quote_sets, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_cancel_type, cxlsym) -> <<"1">>;
encode_typed_field(quote_cancel_type, cxlsectype) -> <<"2">>;
encode_typed_field(quote_cancel_type, cxlunder) -> <<"3">>;
encode_typed_field(quote_cancel_type, cxlall) -> <<"4">>;
encode_typed_field(quote_cancel_type, cxlquote) -> <<"5">>;
encode_typed_field(quote_cancel_type, cxlquotetype) -> <<"6">>;
encode_typed_field(quote_cancel_type, cxlsecissuer) -> <<"7">>;
encode_typed_field(quote_cancel_type, cxlissuer) -> <<"8">>;
encode_typed_field(quote_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_response_level, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_no_quote_entries, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_put_or_call, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_strike_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(ratio_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(security_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(security_response_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(unsolicited_indicator, true) -> <<"Y">>;
encode_typed_field(unsolicited_indicator,false) -> <<"N">>;
encode_typed_field(security_trading_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(halt_reason_char, 'newsdiss') -> <<"D">>;
encode_typed_field(halt_reason_char, 'ordinfl') -> <<"E">>;
encode_typed_field(halt_reason_char, 'ordimb') -> <<"I">>;
encode_typed_field(halt_reason_char, 'addinfo') -> <<"M">>;
encode_typed_field(halt_reason_char, 'newspend') -> <<"P">>;
encode_typed_field(halt_reason_char, 'equipchange') -> <<"X">>;
encode_typed_field(in_view_of_common, true) -> <<"Y">>;
encode_typed_field(in_view_of_common,false) -> <<"N">>;
encode_typed_field(due_to_related, true) -> <<"Y">>;
encode_typed_field(due_to_related,false) -> <<"N">>;
encode_typed_field(buy_volume, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(sell_volume, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(high_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(low_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(adjustment, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trad_ses_method, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trad_ses_mode, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trad_ses_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(number_of_orders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_issuer_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_security_desc_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_list_exec_inst_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_text_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_subject_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_headline_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_alloc_text_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_underlying_issuer_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_underlying_security_desc_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(quote_entry_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_msg_seq_num_processed, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(ref_tag_id, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(session_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(bid_request_trans_type, 'cancel') -> <<"C">>;
encode_typed_field(bid_request_trans_type, 'no') -> <<"N">>;
encode_typed_field(solicited_flag, true) -> <<"Y">>;
encode_typed_field(solicited_flag,false) -> <<"N">>;
encode_typed_field(exec_restatement_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(business_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_contra_brokers, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(max_message_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_msg_types, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(msg_direction, 'receive') -> <<"R">>;
encode_typed_field(msg_direction, 'send') -> <<"S">>;
encode_typed_field(no_trading_sessions, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(total_volume_traded, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_inst, 'reldisppx') -> <<"0">>;
encode_typed_field(discretion_inst, 'relmktpx') -> <<"1">>;
encode_typed_field(discretion_inst, 'relprimpx') -> <<"2">>;
encode_typed_field(discretion_inst, 'rellocprimpx') -> <<"3">>;
encode_typed_field(discretion_inst, 'relm_idpx') -> <<"4">>;
encode_typed_field(discretion_inst, 'rellstpx') -> <<"5">>;
encode_typed_field(discretion_inst, 'relvwap') -> <<"6">>;
encode_typed_field(tot_no_related_sym, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(bid_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(num_tickets, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_bid_descriptors, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(bid_descriptor_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(side_value_ind, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(liquidity_ind_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(exchange_for_physical, true) -> <<"Y">>;
encode_typed_field(exchange_for_physical,false) -> <<"N">>;
encode_typed_field(prog_rpt_reqs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(prog_period_interval, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(inc_tax_ind, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(num_bidders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(bid_trade_type, 'agency') -> <<"A">>;
encode_typed_field(bid_trade_type, 'vwapguarantee') -> <<"G">>;
encode_typed_field(bid_trade_type, 'guaranteedclose') -> <<"J">>;
encode_typed_field(bid_trade_type, 'risktrade') -> <<"R">>;
encode_typed_field(basis_px_type, 'clspxmorn') -> <<"2">>;
encode_typed_field(basis_px_type, 'clspx') -> <<"3">>;
encode_typed_field(basis_px_type, 'currpx') -> <<"4">>;
encode_typed_field(basis_px_type, 'sq') -> <<"5">>;
encode_typed_field(basis_px_type, 'vwapday') -> <<"6">>;
encode_typed_field(basis_px_type, 'vwapmorn') -> <<"7">>;
encode_typed_field(basis_px_type, 'vwapaft') -> <<"8">>;
encode_typed_field(basis_px_type, 'vwapdayxyori') -> <<"9">>;
encode_typed_field(basis_px_type, 'vwapmornxyori') -> <<"A">>;
encode_typed_field(basis_px_type, 'vwapaftxyori') -> <<"B">>;
encode_typed_field(basis_px_type, 'strike') -> <<"C">>;
encode_typed_field(basis_px_type, 'open') -> <<"D">>;
encode_typed_field(basis_px_type, 'others') -> <<"Z">>;
encode_typed_field(no_bid_components, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_no_strikes, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(day_order_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(day_cum_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(day_avg_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(gt_booking_inst, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_strikes, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(list_status_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(net_gross_ind, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(list_order_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(list_exec_inst_type, 'immed') -> <<"1">>;
encode_typed_field(list_exec_inst_type, 'wait') -> <<"2">>;
encode_typed_field(list_exec_inst_type, 'exchcivsell') -> <<"3">>;
encode_typed_field(list_exec_inst_type, 'exchcivbuytop') -> <<"4">>;
encode_typed_field(list_exec_inst_type, 'exchcivbuywd') -> <<"5">>;
encode_typed_field(cxl_rej_response_to, 'ordcxlreq') -> <<"1">>;
encode_typed_field(cxl_rej_response_to, 'ordcxlrepreq') -> <<"2">>;
encode_typed_field(contra_trade_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(liquidity_num_securities, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(multi_leg_reporting_type, 'single') -> <<"1">>;
encode_typed_field(multi_leg_reporting_type, 'indivleg') -> <<"2">>;
encode_typed_field(multi_leg_reporting_type, 'multileg') -> <<"3">>;
encode_typed_field(encoded_list_status_text_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(party_id_source, 'koreaninvestor_id') -> <<"1">>;
encode_typed_field(party_id_source, 'taiwanesequalified') -> <<"2">>;
encode_typed_field(party_id_source, 'taiwanesetradingacct') -> <<"3">>;
encode_typed_field(party_id_source, 'mcdnumber') -> <<"4">>;
encode_typed_field(party_id_source, 'chinesebshare') -> <<"5">>;
encode_typed_field(party_id_source, 'uknationalinspennumber') -> <<"6">>;
encode_typed_field(party_id_source, 'ussocialsecurity') -> <<"7">>;
encode_typed_field(party_id_source, 'usemployer_idnumber') -> <<"8">>;
encode_typed_field(party_id_source, 'australianbusinessnumber') -> <<"9">>;
encode_typed_field(party_id_source, 'australiantaxfilenumber') -> <<"A">>;
encode_typed_field(party_id_source, 'bic') -> <<"B">>;
encode_typed_field(party_id_source, 'accptmarketpart') -> <<"C">>;
encode_typed_field(party_id_source, 'propcode') -> <<"D">>;
encode_typed_field(party_id_source, 'isocode') -> <<"E">>;
encode_typed_field(party_id_source, 'settlentloc') -> <<"F">>;
encode_typed_field(party_id_source, 'mic') -> <<"G">>;
encode_typed_field(party_id_source, 'csdpartcode') -> <<"H">>;
encode_typed_field(party_id_source, 'directeddefinedisitc') -> <<"I">>;
encode_typed_field(party_role, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_party_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_security_alt_id, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_underlying_security_alt_id, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(product, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_product, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(test_message_indicator, true) -> <<"Y">>;
encode_typed_field(test_message_indicator,false) -> <<"N">>;
encode_typed_field(quantity_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(rounding_direction, 'roundnearest') -> <<"0">>;
encode_typed_field(rounding_direction, 'rounddown') -> <<"1">>;
encode_typed_field(rounding_direction, 'roundup') -> <<"2">>;
encode_typed_field(no_regist_dtls, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(distrib_payment_method, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cancellation_rights, 'nowaiver') -> <<"M">>;
encode_typed_field(cancellation_rights, 'noexeconly') -> <<"N">>;
encode_typed_field(cancellation_rights, 'noinstit') -> <<"O">>;
encode_typed_field(cancellation_rights, 'yes') -> <<"Y">>;
encode_typed_field(money_laundering_status, 'exbelowlim') -> <<"1">>;
encode_typed_field(money_laundering_status, 'exclientmoneytype') -> <<"2">>;
encode_typed_field(money_laundering_status, 'exauthcredit') -> <<"3">>;
encode_typed_field(money_laundering_status, 'notchecked') -> <<"N">>;
encode_typed_field(money_laundering_status, 'passed') -> <<"Y">>;
encode_typed_field(exec_price_type, 'b_idprice') -> <<"B">>;
encode_typed_field(exec_price_type, 'creationprice') -> <<"C">>;
encode_typed_field(exec_price_type, 'creationpriceadjpct') -> <<"D">>;
encode_typed_field(exec_price_type, 'creationpriceadjamt') -> <<"E">>;
encode_typed_field(exec_price_type, 'offerprice') -> <<"O">>;
encode_typed_field(exec_price_type, 'offerpriceminusadjpct') -> <<"P">>;
encode_typed_field(exec_price_type, 'offerpriceminusadjamt') -> <<"Q">>;
encode_typed_field(exec_price_type, 'singleprice') -> <<"S">>;
encode_typed_field(trade_report_trans_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(payment_method, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tax_advantage_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(fund_renew_waiv, 'no') -> <<"N">>;
encode_typed_field(fund_renew_waiv, 'yes') -> <<"Y">>;
encode_typed_field(regist_status, 'accepted') -> <<"A">>;
encode_typed_field(regist_status, 'held') -> <<"H">>;
encode_typed_field(regist_status, 'reminder_ie_registration_instructions_are_still_outstanding') -> <<"N">>;
encode_typed_field(regist_status, 'rejected') -> <<"R">>;
encode_typed_field(regist_rej_reason_code, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_distrib_insts, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(regist_trans_type, 'new') -> <<"0">>;
encode_typed_field(regist_trans_type, 'replace') -> <<"1">>;
encode_typed_field(regist_trans_type, 'cancel') -> <<"2">>;
encode_typed_field(ownership_type, 'joint_trustees') -> <<"2">>;
encode_typed_field(ownership_type, 'joint_investors') -> <<"J">>;
encode_typed_field(ownership_type, 'tenants_in_common') -> <<"T">>;
encode_typed_field(no_cont_amts, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cont_amt_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(owner_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(order_capacity, 'agency') -> <<"A">>;
encode_typed_field(order_capacity, 'proprietary') -> <<"G">>;
encode_typed_field(order_capacity, 'indiv_idual') -> <<"I">>;
encode_typed_field(order_capacity, 'principal') -> <<"P">>;
encode_typed_field(order_capacity, 'risklessprincipal') -> <<"R">>;
encode_typed_field(order_capacity, 'agentothermember') -> <<"W">>;
encode_typed_field(mass_cancel_request_type, 'cxlorderssecurity') -> <<"1">>;
encode_typed_field(mass_cancel_request_type, 'cxlordersunderlyingsecurity') -> <<"2">>;
encode_typed_field(mass_cancel_request_type, 'cxlordersproduct') -> <<"3">>;
encode_typed_field(mass_cancel_request_type, 'cxlorderscficode') -> <<"4">>;
encode_typed_field(mass_cancel_request_type, 'cxlorderssecuritytype') -> <<"5">>;
encode_typed_field(mass_cancel_request_type, 'cxlorderstrdsession') -> <<"6">>;
encode_typed_field(mass_cancel_request_type, 'cxlallorders') -> <<"7">>;
encode_typed_field(mass_cancel_response, 'cxlreqrej') -> <<"0">>;
encode_typed_field(mass_cancel_response, 'cxlorderssecurity') -> <<"1">>;
encode_typed_field(mass_cancel_response, 'cxlordersunderlyingsecurity') -> <<"2">>;
encode_typed_field(mass_cancel_response, 'cxlordersproduct') -> <<"3">>;
encode_typed_field(mass_cancel_response, 'cxlorderscficode') -> <<"4">>;
encode_typed_field(mass_cancel_response, 'cxlorderssecuritytype') -> <<"5">>;
encode_typed_field(mass_cancel_response, 'cxlorderstrdsession') -> <<"6">>;
encode_typed_field(mass_cancel_response, 'cxlallorders') -> <<"7">>;
encode_typed_field(mass_cancel_reject_reason, 'masscxlnotsupported') -> <<"0">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idsecurity') -> <<"1">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idunderlying') -> <<"2">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idproduct') -> <<"3">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idcficode') -> <<"4">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idsecuritytype') -> <<"5">>;
encode_typed_field(mass_cancel_reject_reason, 'inval_idtrdsession') -> <<"6">>;
encode_typed_field(mass_cancel_reject_reason, 'other') -> <<"99">>;
encode_typed_field(total_affected_orders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_affected_orders, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_type, indicative) -> <<"0">>;
encode_typed_field(quote_type, tradeable) -> <<"1">>;
encode_typed_field(quote_type, restrictedtradeable) -> <<"2">>;
encode_typed_field(quote_type, counter) -> <<"3">>;
encode_typed_field(quote_type, initiallytradeable) -> <<"4">>;
encode_typed_field(nested_party_role, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_nested_party_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cash_margin, 'cash') -> <<"1">>;
encode_typed_field(cash_margin, 'marginopen') -> <<"2">>;
encode_typed_field(cash_margin, 'marginclose') -> <<"3">>;
encode_typed_field(md_implicit_delete, true) -> <<"Y">>;
encode_typed_field(md_implicit_delete,false) -> <<"N">>;
encode_typed_field(cross_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cross_prioritization, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_sides, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_legs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_no_security_types, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_security_types, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(security_list_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(security_request_result, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(round_lot, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(min_trade_vol, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(multi_leg_rpt_type_req, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_covered_or_uncovered, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(trad_ses_status_rej_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(previously_reported, true) -> <<"Y">>;
encode_typed_field(previously_reported,false) -> <<"N">>;
encode_typed_field(match_status, 'compmataff') -> <<"0">>;
encode_typed_field(match_status, 'uncompunmatunaff') -> <<"1">>;
encode_typed_field(match_status, 'advalert') -> <<"2">>;
encode_typed_field(odd_lot, true) -> <<"Y">>;
encode_typed_field(odd_lot,false) -> <<"N">>;
encode_typed_field(no_clearing_instructions, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(clearing_instruction, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_dates, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(account_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cust_order_capacity, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(mass_status_req_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(day_booking_inst, 'can_trigger_booking_without_reference_to_the_order_initiator_auto') -> <<"0">>;
encode_typed_field(day_booking_inst, 'speak_with_order_initiator_before_booking_speak_first') -> <<"1">>;
encode_typed_field(day_booking_inst, 'accumulate') -> <<"2">>;
encode_typed_field(booking_unit, 'each_partial_execution_is_a_bookable_unit') -> <<"0">>;
encode_typed_field(booking_unit, 'aggregate_partial_executions_on_this_order_and_book_one_trade_per_order') -> <<"1">>;
encode_typed_field(booking_unit, 'aggregate_executions_for_this_symbol_s_ide_and_settlement_date') -> <<"2">>;
encode_typed_field(prealloc_method, 'prorata') -> <<"0">>;
encode_typed_field(prealloc_method, 'do_not_prorata_discuss_first') -> <<"1">>;
encode_typed_field(leg_product, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_strike_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(encoded_leg_issuer_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(encoded_leg_security_desc_len, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_hops, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(hop_ref_id, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(mid_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(working_indicator, true) -> <<"Y">>;
encode_typed_field(working_indicator,false) -> <<"N">>;
encode_typed_field(leg_last_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(priority_indicator, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(price2, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(mkt_bid_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(mkt_offer_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(min_bid_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(min_offer_size, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(legal_confirm, true) -> <<"Y">>;
encode_typed_field(legal_confirm,false) -> <<"N">>;
encode_typed_field(underlying_last_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(underlying_last_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(sec_def_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_request_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(acct_id_source, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_acct_id_source, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(benchmark_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(benchmark_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(confirm_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(confirm_trans_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(delivery_form, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_par_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_leg_allocs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_alloc_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_benchmark_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(leg_benchmark_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_bid_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_leg_stipulations, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_offer_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(leg_order_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(leg_swap_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(quote_resp_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(yield_redemption_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(yield_redemption_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(reversal_indicator, true) -> <<"Y">>;
encode_typed_field(reversal_indicator,false) -> <<"N">>;
encode_typed_field(no_positions, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(long_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(short_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_qty_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_trans_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_underlyings, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_maint_action, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(adjustment_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(contrary_instruction_indicator, true) -> <<"Y">>;
encode_typed_field(contrary_instruction_indicator,false) -> <<"N">>;
encode_typed_field(prior_spread_indicator, true) -> <<"Y">>;
encode_typed_field(prior_spread_indicator,false) -> <<"N">>;
encode_typed_field(pos_maint_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_maint_result, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_req_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(response_transport_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(total_num_pos_reports, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_req_result, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pos_req_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(settl_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_settl_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(underlying_settl_price_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(prior_settl_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_quote_qualifiers, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(assignment_method, 'prorata') -> <<"P">>;
encode_typed_field(assignment_method, 'random') -> <<"R">>;
encode_typed_field(assignment_unit, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(exercise_method, 'automatic') -> <<"A">>;
encode_typed_field(exercise_method, 'manual') -> <<"M">>;
encode_typed_field(tot_num_trade_reports, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_request_result, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_request_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_report_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(side_multi_leg_reporting_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_pos_amt, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(auto_accept_indicator, true) -> <<"Y">>;
encode_typed_field(auto_accept_indicator,false) -> <<"N">>;
encode_typed_field(no_nested2_party_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(nested2_party_role, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_trd_reg_timestamps, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trd_reg_timestamp_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(confirm_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(confirm_rej_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(booking_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(individual_alloc_rej_code, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_settl_inst, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_settl_inst_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_settl_party_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_party_role, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_party_sub_id_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(dlvy_inst_type, 'cash') -> <<"C">>;
encode_typed_field(dlvy_inst_type, 'securities') -> <<"S">>;
encode_typed_field(termination_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(next_expected_msg_seq_num, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(settl_inst_req_rej_code, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_report_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_canc_replace_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(copy_msg_indicator, true) -> <<"Y">>;
encode_typed_field(copy_msg_indicator,false) -> <<"N">>;
encode_typed_field(alloc_account_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(order_avg_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(order_booking_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_settl_party_sub_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_party_sub_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(party_sub_id_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_nested_party_sub_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(nested_party_sub_id_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_nested2_party_sub_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(nested2_party_sub_id_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_intermed_req_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(appl_queue_max, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(appl_queue_depth, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(appl_queue_resolution, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(appl_queue_action, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_alt_md_source, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(avg_px_indicator, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_alloc_indicator, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(expiration_cycle, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trd_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trd_sub_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_num_assignment_reports, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(peg_move_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(peg_offset_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(peg_limit_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(peg_round_direction, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(pegged_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(peg_scope, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_move_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_offset_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_limit_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_round_direction, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(discretion_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(discretion_scope, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(target_strategy, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_liquidity_ind, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(publish_trd_indicator, true) -> <<"Y">>;
encode_typed_field(publish_trd_indicator,false) -> <<"N">>;
encode_typed_field(short_sale_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(qty_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(secondary_trd_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trade_report_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(alloc_no_orders_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(avg_par_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(reported_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_capacities, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(order_capacity_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_events, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(event_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(event_px, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_instr_attrib, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(instr_attrib_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(cp_program, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_qty, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(underlying_dirty_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(underlying_end_price, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0]));
encode_typed_field(no_underlying_stips, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(misc_fee_basis, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_no_allocs, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_fragment, true) -> <<"Y">>;
encode_typed_field(last_fragment,false) -> <<"N">>;
encode_typed_field(coll_asgn_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_inquiry_qualifier, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_trades, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_asgn_trans_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_asgn_resp_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_asgn_reject_reason, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(tot_num_reports, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(last_rpt_requested, true) -> <<"Y">>;
encode_typed_field(last_rpt_requested,false) -> <<"N">>;
encode_typed_field(delivery_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(user_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(user_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(status_value, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(network_request_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_comp_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(network_status_response_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_coll_inquiry_qualifier, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(trd_rpt_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(affirm_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_action, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_inquiry_status, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(coll_inquiry_result, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_nested3_party_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(nested3_party_role, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(no_nested3_party_sub_ids, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(nested3_party_sub_id_type, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(appl_ver_id, fix_27) -> <<"0">>;
encode_typed_field(appl_ver_id, fix_30) -> <<"1">>;
encode_typed_field(appl_ver_id, fix_40) -> <<"2">>;
encode_typed_field(appl_ver_id, fix_41) -> <<"3">>;
encode_typed_field(appl_ver_id, fix_42) -> <<"4">>;
encode_typed_field(appl_ver_id, fix_43) -> <<"5">>;
encode_typed_field(appl_ver_id, fix_44) -> <<"6">>;
encode_typed_field(appl_ver_id, fix_50) -> <<"7">>;
encode_typed_field(appl_ver_id, fix_50_sp1) -> <<"8">>;
encode_typed_field(appl_ver_id, fix_50_sp2) -> <<"9">>;
encode_typed_field(default_appl_ver_id, VerId) -> encode_typed_field(appl_ver_id, VerId);
encode_typed_field(security_list_request_type, symbol) -> <<"0">>;
encode_typed_field(security_list_request_type, securitytypecficode) -> <<"1">>;
encode_typed_field(security_list_request_type, product) -> <<"2">>;
encode_typed_field(security_list_request_type, tradingsession_id) -> <<"3">>;
encode_typed_field(security_list_request_type, allsecurities) -> <<"4">>;
encode_typed_field(security_list_request_type, marketid) -> <<"5">>;
encode_typed_field(security_list_type, industryclassification) -> <<"1">>;
encode_typed_field(security_list_type, tradinglist) -> <<"2">>;
encode_typed_field(security_list_type, market) -> <<"3">>;
encode_typed_field(security_list_type, newspaperlist) -> <<"4">>;
encode_typed_field(security_request_result, val_idreq) -> <<"0">>;
encode_typed_field(security_request_result, inval_idreq) -> <<"1">>;
encode_typed_field(security_request_result, noinstrumentsfound) -> <<"2">>;
encode_typed_field(security_request_result, notauthorized) -> <<"3">>;
encode_typed_field(security_request_result, instrumentunavailable) -> <<"4">>;
encode_typed_field(security_request_result, notsupported) -> <<"5">>;
encode_typed_field(ref_msg_type, V) -> number_by_message(V);
encode_typed_field(business_reject_reason, other) -> <<"0">>;
encode_typed_field(business_reject_reason, unkn_id) -> <<"1">>;
encode_typed_field(business_reject_reason, unknsec) -> <<"2">>;
encode_typed_field(business_reject_reason, unknmsgtype) -> <<"3">>;
encode_typed_field(business_reject_reason, appna) -> <<"4">>;
encode_typed_field(business_reject_reason, condfldmiss) -> <<"5">>;
encode_typed_field(business_reject_reason, notauth) -> <<"6">>;
encode_typed_field(business_reject_reason, nodelivtofirm) -> <<"7">>;
encode_typed_field(business_reject_reason, throttlelimitexceeded) -> <<"8">>;
encode_typed_field(business_reject_reason, throttlelimitexceeded_session) -> <<"9">>;
encode_typed_field(business_reject_reason, throttled_messages) -> <<"10">>;
encode_typed_field(business_reject_reason, invalidpriceincrement) -> <<"18">>;
encode_typed_field(security_reject_reason, invalid_instrument_requested) -> <<"1">>;
encode_typed_field(security_reject_reason, instrument_already_exists) -> <<"2">>;
encode_typed_field(security_reject_reason, request_type_not_supported) -> <<"3">>;
encode_typed_field(security_reject_reason, system_unavailable) -> <<"4">>;
encode_typed_field(security_reject_reason, ineligible_instrument_group) -> <<"5">>;
encode_typed_field(security_reject_reason, instrument_id_unavailable) -> <<"6">>;
encode_typed_field(security_reject_reason, invalid_option_leg) -> <<"7">>;
encode_typed_field(security_reject_reason, invalid_future_leg) -> <<"8">>;
encode_typed_field(security_reject_reason, invalid_fx_leg) -> <<"10">>;
encode_typed_field(security_reject_reason, invalid_leg_price) -> <<"11">>;
encode_typed_field(security_reject_reason, invalid_instrument_structure) -> <<"12">>;
encode_typed_field(quote_status, invalid_instrument_structure) -> <<"12">>;
encode_typed_field(quote_status, accpt) -> <<"0">>;
encode_typed_field(quote_status, cxlsym) -> <<"1">>;
encode_typed_field(quote_status, cxlsectype) -> <<"2">>;
encode_typed_field(quote_status, cxlunder) -> <<"3">>;
encode_typed_field(quote_status, cxlall) -> <<"4">>;
encode_typed_field(quote_status, rej) -> <<"5">>;
encode_typed_field(quote_status, removed) -> <<"6">>;
encode_typed_field(quote_status, expired) -> <<"7">>;
encode_typed_field(quote_status, query) -> <<"8">>;
encode_typed_field(quote_status, quotenotfound) -> <<"9">>;
encode_typed_field(quote_status, pending) -> <<"10">>;
encode_typed_field(quote_status, pass) -> <<"11">>;
encode_typed_field(quote_status, lockedmarketwarning) -> <<"12">>;
encode_typed_field(quote_status, crossmarketwarning) -> <<"13">>;
encode_typed_field(quote_status, canceledduetolockmarket) -> <<"14">>;
encode_typed_field(quote_status, canceledduetocrossmarket) -> <<"15">>;
encode_typed_field(quote_status, active) -> <<"16">>;
encode_typed_field(quote_status, canceled) -> <<"17">>;
encode_typed_field(quote_status, unsolicitedquotereplenishment) -> <<"18">>;
encode_typed_field(quote_status, pendingendtrade) -> <<"19">>;
encode_typed_field(quote_status, toolatetoend) -> <<"20">>;
encode_typed_field(_Key, V) when is_binary(V) -> V;
encode_typed_field(_Key, V) when is_list(V) -> V;
encode_typed_field(_Key, V) when is_integer(V) -> list_to_binary(integer_to_list(V));
encode_typed_field(_Key, V) when is_float(V) -> iolist_to_binary(io_lib:format("~.3f", [V*1.0])).

number_by_field(Key) when is_integer(Key) -> list_to_binary(integer_to_list(Key));
number_by_field(account) -> <<"1">>;
number_by_field(adv_id) -> <<"2">>;
number_by_field(adv_ref_id) -> <<"3">>;
number_by_field(adv_side) -> <<"4">>;
number_by_field(adv_trans_type) -> <<"5">>;
number_by_field(avg_px) -> <<"6">>;
number_by_field(begin_seq_no) -> <<"7">>;
number_by_field(begin_string) -> <<"8">>;
number_by_field(body_length) -> <<"9">>;
number_by_field(check_sum) -> <<"10">>;
number_by_field(cl_ord_id) -> <<"11">>;
number_by_field(commission) -> <<"12">>;
number_by_field(comm_type) -> <<"13">>;
number_by_field(cum_qty) -> <<"14">>;
number_by_field(currency) -> <<"15">>;
number_by_field(end_seq_no) -> <<"16">>;
number_by_field(exec_id) -> <<"17">>;
number_by_field(exec_inst) -> <<"18">>;
number_by_field(exec_ref_id) -> <<"19">>;
number_by_field(exec_trans_type) -> <<"20">>;
number_by_field(handl_inst) -> <<"21">>;
number_by_field(security_id_source) -> <<"22">>;
number_by_field(ioi_id) -> <<"23">>;
number_by_field(ioi_oth_svc) -> <<"24">>;
number_by_field(ioi_qlty_ind) -> <<"25">>;
number_by_field(ioi_ref_id) -> <<"26">>;
number_by_field(ioi_qty) -> <<"27">>;
number_by_field(ioi_trans_type) -> <<"28">>;
number_by_field(last_capacity) -> <<"29">>;
number_by_field(last_mkt) -> <<"30">>;
number_by_field(last_px) -> <<"31">>;
number_by_field(last_qty) -> <<"32">>;
number_by_field(no_lines_of_text) -> <<"33">>;
number_by_field(msg_seq_num) -> <<"34">>;
number_by_field(msg_type) -> <<"35">>;
number_by_field(new_seq_no) -> <<"36">>;
number_by_field(order_id) -> <<"37">>;
number_by_field(order_qty) -> <<"38">>;
number_by_field(ord_status) -> <<"39">>;
number_by_field(ord_type) -> <<"40">>;
number_by_field(orig_cl_ord_id) -> <<"41">>;
number_by_field(orig_time) -> <<"42">>;
number_by_field(poss_dup_flag) -> <<"43">>;
number_by_field(price) -> <<"44">>;
number_by_field(ref_seq_num) -> <<"45">>;
number_by_field(relatd_sym) -> <<"46">>;
number_by_field(rule80a) -> <<"47">>;
number_by_field(security_id) -> <<"48">>;
number_by_field(sender_comp_id) -> <<"49">>;
number_by_field(sender_sub_id) -> <<"50">>;
number_by_field(sending_date) -> <<"51">>;
number_by_field(sending_time) -> <<"52">>;
number_by_field(quantity) -> <<"53">>;
number_by_field(side) -> <<"54">>;
number_by_field(symbol) -> <<"55">>;
number_by_field(target_comp_id) -> <<"56">>;
number_by_field(target_sub_id) -> <<"57">>;
number_by_field(text) -> <<"58">>;
number_by_field(time_in_force) -> <<"59">>;
number_by_field(transact_time) -> <<"60">>;
number_by_field(urgency) -> <<"61">>;
number_by_field(valid_until_time) -> <<"62">>;
number_by_field(settl_type) -> <<"63">>;
number_by_field(settl_date) -> <<"64">>;
number_by_field(symbol_sfx) -> <<"65">>;
number_by_field(list_id) -> <<"66">>;
number_by_field(list_seq_no) -> <<"67">>;
number_by_field(tot_no_orders) -> <<"68">>;
number_by_field(list_exec_inst) -> <<"69">>;
number_by_field(alloc_id) -> <<"70">>;
number_by_field(alloc_trans_type) -> <<"71">>;
number_by_field(ref_alloc_id) -> <<"72">>;
number_by_field(no_orders) -> <<"73">>;
number_by_field(avg_px_precision) -> <<"74">>;
number_by_field(trade_date) -> <<"75">>;
number_by_field(exec_broker) -> <<"76">>;
number_by_field(position_effect) -> <<"77">>;
number_by_field(no_allocs) -> <<"78">>;
number_by_field(alloc_account) -> <<"79">>;
number_by_field(alloc_qty) -> <<"80">>;
number_by_field(process_code) -> <<"81">>;
number_by_field(no_rpts) -> <<"82">>;
number_by_field(rpt_seq) -> <<"83">>;
number_by_field(cxl_qty) -> <<"84">>;
number_by_field(no_dlvy_inst) -> <<"85">>;
number_by_field(dlvy_inst) -> <<"86">>;
number_by_field(alloc_status) -> <<"87">>;
number_by_field(alloc_rej_code) -> <<"88">>;
number_by_field(signature) -> <<"89">>;
number_by_field(secure_data_len) -> <<"90">>;
number_by_field(secure_data) -> <<"91">>;
number_by_field(broker_of_credit) -> <<"92">>;
number_by_field(signature_length) -> <<"93">>;
number_by_field(email_type) -> <<"94">>;
number_by_field(raw_data_length) -> <<"95">>;
number_by_field(raw_data) -> <<"96">>;
number_by_field(poss_resend) -> <<"97">>;
number_by_field(encrypt_method) -> <<"98">>;
number_by_field(stop_px) -> <<"99">>;
number_by_field(ex_destination) -> <<"100">>;
number_by_field(cxl_rej_reason) -> <<"102">>;
number_by_field(ord_rej_reason) -> <<"103">>;
number_by_field(ioi_qualifier) -> <<"104">>;
number_by_field(wave_no) -> <<"105">>;
number_by_field(issuer) -> <<"106">>;
number_by_field(security_desc) -> <<"107">>;
number_by_field(heart_bt_int) -> <<"108">>;
number_by_field(client_id) -> <<"109">>;
number_by_field(min_qty) -> <<"110">>;
number_by_field(max_floor) -> <<"111">>;
number_by_field(test_req_id) -> <<"112">>;
number_by_field(report_to_exch) -> <<"113">>;
number_by_field(locate_reqd) -> <<"114">>;
number_by_field(on_behalf_of_comp_id) -> <<"115">>;
number_by_field(on_behalf_of_sub_id) -> <<"116">>;
number_by_field(quote_id) -> <<"117">>;
number_by_field(net_money) -> <<"118">>;
number_by_field(settl_curr_amt) -> <<"119">>;
number_by_field(settl_currency) -> <<"120">>;
number_by_field(forex_req) -> <<"121">>;
number_by_field(orig_sending_time) -> <<"122">>;
number_by_field(gap_fill_flag) -> <<"123">>;
number_by_field(no_execs) -> <<"124">>;
number_by_field(cxl_type) -> <<"125">>;
number_by_field(expire_time) -> <<"126">>;
number_by_field(dk_reason) -> <<"127">>;
number_by_field(deliver_to_comp_id) -> <<"128">>;
number_by_field(deliver_to_sub_id) -> <<"129">>;
number_by_field(ioi_natural_flag) -> <<"130">>;
number_by_field(quote_req_id) -> <<"131">>;
number_by_field(bid_px) -> <<"132">>;
number_by_field(offer_px) -> <<"133">>;
number_by_field(bid_size) -> <<"134">>;
number_by_field(offer_size) -> <<"135">>;
number_by_field(no_misc_fees) -> <<"136">>;
number_by_field(misc_fee_amt) -> <<"137">>;
number_by_field(misc_fee_curr) -> <<"138">>;
number_by_field(misc_fee_type) -> <<"139">>;
number_by_field(prev_close_px) -> <<"140">>;
number_by_field(reset_seq_num_flag) -> <<"141">>;
number_by_field(sender_location_id) -> <<"142">>;
number_by_field(target_location_id) -> <<"143">>;
number_by_field(on_behalf_of_location_id) -> <<"144">>;
number_by_field(deliver_to_location_id) -> <<"145">>;
number_by_field(no_related_sym) -> <<"146">>;
number_by_field(subject) -> <<"147">>;
number_by_field(headline) -> <<"148">>;
number_by_field(url_link) -> <<"149">>;
number_by_field(exec_type) -> <<"150">>;
number_by_field(leaves_qty) -> <<"151">>;
number_by_field(cash_order_qty) -> <<"152">>;
number_by_field(alloc_avg_px) -> <<"153">>;
number_by_field(alloc_net_money) -> <<"154">>;
number_by_field(settl_curr_fx_rate) -> <<"155">>;
number_by_field(settl_curr_fx_rate_calc) -> <<"156">>;
number_by_field(num_days_interest) -> <<"157">>;
number_by_field(accrued_interest_rate) -> <<"158">>;
number_by_field(accrued_interest_amt) -> <<"159">>;
number_by_field(settl_inst_mode) -> <<"160">>;
number_by_field(alloc_text) -> <<"161">>;
number_by_field(settl_inst_id) -> <<"162">>;
number_by_field(settl_inst_trans_type) -> <<"163">>;
number_by_field(email_thread_id) -> <<"164">>;
number_by_field(settl_inst_source) -> <<"165">>;
number_by_field(settl_location) -> <<"166">>;
number_by_field(security_type) -> <<"167">>;
number_by_field(effective_time) -> <<"168">>;
number_by_field(stand_inst_db_type) -> <<"169">>;
number_by_field(stand_inst_db_name) -> <<"170">>;
number_by_field(stand_inst_db_id) -> <<"171">>;
number_by_field(settl_delivery_type) -> <<"172">>;
number_by_field(settl_depository_code) -> <<"173">>;
number_by_field(settl_brkr_code) -> <<"174">>;
number_by_field(settl_inst_code) -> <<"175">>;
number_by_field(security_settl_agent_name) -> <<"176">>;
number_by_field(security_settl_agent_code) -> <<"177">>;
number_by_field(security_settl_agent_acct_num) -> <<"178">>;
number_by_field(security_settl_agent_acct_name) -> <<"179">>;
number_by_field(security_settl_agent_contact_name) -> <<"180">>;
number_by_field(security_settl_agent_contact_phone) -> <<"181">>;
number_by_field(cash_settl_agent_name) -> <<"182">>;
number_by_field(cash_settl_agent_code) -> <<"183">>;
number_by_field(cash_settl_agent_acct_num) -> <<"184">>;
number_by_field(cash_settl_agent_acct_name) -> <<"185">>;
number_by_field(cash_settl_agent_contact_name) -> <<"186">>;
number_by_field(cash_settl_agent_contact_phone) -> <<"187">>;
number_by_field(bid_spot_rate) -> <<"188">>;
number_by_field(bid_forward_points) -> <<"189">>;
number_by_field(offer_spot_rate) -> <<"190">>;
number_by_field(offer_forward_points) -> <<"191">>;
number_by_field(order_qty2) -> <<"192">>;
number_by_field(settl_date2) -> <<"193">>;
number_by_field(last_spot_rate) -> <<"194">>;
number_by_field(last_forward_points) -> <<"195">>;
number_by_field(alloc_link_id) -> <<"196">>;
number_by_field(alloc_link_type) -> <<"197">>;
number_by_field(secondary_order_id) -> <<"198">>;
number_by_field(no_ioi_qualifiers) -> <<"199">>;
number_by_field(maturity_month_year) -> <<"200">>;
number_by_field(put_or_call) -> <<"201">>;
number_by_field(strike_price) -> <<"202">>;
number_by_field(covered_or_uncovered) -> <<"203">>;
number_by_field(customer_or_firm) -> <<"204">>;
number_by_field(maturity_day) -> <<"205">>;
number_by_field(opt_attribute) -> <<"206">>;
number_by_field(security_exchange) -> <<"207">>;
number_by_field(notify_broker_of_credit) -> <<"208">>;
number_by_field(alloc_handl_inst) -> <<"209">>;
number_by_field(max_show) -> <<"210">>;
number_by_field(peg_offset_value) -> <<"211">>;
number_by_field(xml_data_len) -> <<"212">>;
number_by_field(xml_data) -> <<"213">>;
number_by_field(settl_inst_ref_id) -> <<"214">>;
number_by_field(no_routing_ids) -> <<"215">>;
number_by_field(routing_type) -> <<"216">>;
number_by_field(routing_id) -> <<"217">>;
number_by_field(spread) -> <<"218">>;
number_by_field(benchmark) -> <<"219">>;
number_by_field(benchmark_curve_currency) -> <<"220">>;
number_by_field(benchmark_curve_name) -> <<"221">>;
number_by_field(benchmark_curve_point) -> <<"222">>;
number_by_field(coupon_rate) -> <<"223">>;
number_by_field(coupon_payment_date) -> <<"224">>;
number_by_field(issue_date) -> <<"225">>;
number_by_field(repurchase_term) -> <<"226">>;
number_by_field(repurchase_rate) -> <<"227">>;
number_by_field(factor) -> <<"228">>;
number_by_field(trade_origination_date) -> <<"229">>;
number_by_field(ex_date) -> <<"230">>;
number_by_field(contract_multiplier) -> <<"231">>;
number_by_field(no_stipulations) -> <<"232">>;
number_by_field(stipulation_type) -> <<"233">>;
number_by_field(stipulation_value) -> <<"234">>;
number_by_field(yield_type) -> <<"235">>;
number_by_field(yield) -> <<"236">>;
number_by_field(total_takedown) -> <<"237">>;
number_by_field(concession) -> <<"238">>;
number_by_field(repo_collateral_security_type) -> <<"239">>;
number_by_field(redemption_date) -> <<"240">>;
number_by_field(underlying_coupon_payment_date) -> <<"241">>;
number_by_field(underlying_issue_date) -> <<"242">>;
number_by_field(underlying_repo_collateral_security_type) -> <<"243">>;
number_by_field(underlying_repurchase_term) -> <<"244">>;
number_by_field(underlying_repurchase_rate) -> <<"245">>;
number_by_field(underlying_factor) -> <<"246">>;
number_by_field(underlying_redemption_date) -> <<"247">>;
number_by_field(leg_coupon_payment_date) -> <<"248">>;
number_by_field(leg_issue_date) -> <<"249">>;
number_by_field(leg_repo_collateral_security_type) -> <<"250">>;
number_by_field(leg_repurchase_term) -> <<"251">>;
number_by_field(leg_repurchase_rate) -> <<"252">>;
number_by_field(leg_factor) -> <<"253">>;
number_by_field(leg_redemption_date) -> <<"254">>;
number_by_field(credit_rating) -> <<"255">>;
number_by_field(underlying_credit_rating) -> <<"256">>;
number_by_field(leg_credit_rating) -> <<"257">>;
number_by_field(traded_flat_switch) -> <<"258">>;
number_by_field(basis_feature_date) -> <<"259">>;
number_by_field(basis_feature_price) -> <<"260">>;
number_by_field(md_req_id) -> <<"262">>;
number_by_field(subscription_request_type) -> <<"263">>;
number_by_field(market_depth) -> <<"264">>;
number_by_field(md_update_type) -> <<"265">>;
number_by_field(aggregated_book) -> <<"266">>;
number_by_field(no_md_entry_types) -> <<"267">>;
number_by_field(no_md_entries) -> <<"268">>;
number_by_field(md_entry_type) -> <<"269">>;
number_by_field(md_entry_px) -> <<"270">>;
number_by_field(md_entry_size) -> <<"271">>;
number_by_field(md_entry_date) -> <<"272">>;
number_by_field(md_entry_time) -> <<"273">>;
number_by_field(tick_direction) -> <<"274">>;
number_by_field(md_mkt) -> <<"275">>;
number_by_field(quote_condition) -> <<"276">>;
number_by_field(trade_condition) -> <<"277">>;
number_by_field(md_entry_id) -> <<"278">>;
number_by_field(md_update_action) -> <<"279">>;
number_by_field(md_entry_ref_id) -> <<"280">>;
number_by_field(md_req_rej_reason) -> <<"281">>;
number_by_field(md_entry_originator) -> <<"282">>;
number_by_field(location_id) -> <<"283">>;
number_by_field(desk_id) -> <<"284">>;
number_by_field(delete_reason) -> <<"285">>;
number_by_field(open_close_settl_flag) -> <<"286">>;
number_by_field(seller_days) -> <<"287">>;
number_by_field(md_entry_buyer) -> <<"288">>;
number_by_field(md_entry_seller) -> <<"289">>;
number_by_field(md_entry_position_no) -> <<"290">>;
number_by_field(financial_status) -> <<"291">>;
number_by_field(corporate_action) -> <<"292">>;
number_by_field(def_bid_size) -> <<"293">>;
number_by_field(def_offer_size) -> <<"294">>;
number_by_field(no_quote_entries) -> <<"295">>;
number_by_field(no_quote_sets) -> <<"296">>;
number_by_field(quote_status) -> <<"297">>;
number_by_field(quote_cancel_type) -> <<"298">>;
number_by_field(quote_entry_id) -> <<"299">>;
number_by_field(quote_reject_reason) -> <<"300">>;
number_by_field(quote_response_level) -> <<"301">>;
number_by_field(quote_set_id) -> <<"302">>;
number_by_field(quote_request_type) -> <<"303">>;
number_by_field(tot_no_quote_entries) -> <<"304">>;
number_by_field(underlying_security_id_source) -> <<"305">>;
number_by_field(underlying_issuer) -> <<"306">>;
number_by_field(underlying_security_desc) -> <<"307">>;
number_by_field(underlying_security_exchange) -> <<"308">>;
number_by_field(underlying_security_id) -> <<"309">>;
number_by_field(underlying_security_type) -> <<"310">>;
number_by_field(underlying_symbol) -> <<"311">>;
number_by_field(underlying_symbol_sfx) -> <<"312">>;
number_by_field(underlying_maturity_month_year) -> <<"313">>;
number_by_field(underlying_maturity_day) -> <<"314">>;
number_by_field(underlying_put_or_call) -> <<"315">>;
number_by_field(underlying_strike_price) -> <<"316">>;
number_by_field(underlying_opt_attribute) -> <<"317">>;
number_by_field(underlying_currency) -> <<"318">>;
number_by_field(ratio_qty) -> <<"319">>;
number_by_field(security_req_id) -> <<"320">>;
number_by_field(security_request_type) -> <<"321">>;
number_by_field(security_response_id) -> <<"322">>;
number_by_field(security_response_type) -> <<"323">>;
number_by_field(security_status_req_id) -> <<"324">>;
number_by_field(unsolicited_indicator) -> <<"325">>;
number_by_field(security_trading_status) -> <<"326">>;
number_by_field(halt_reason_char) -> <<"327">>;
number_by_field(in_view_of_common) -> <<"328">>;
number_by_field(due_to_related) -> <<"329">>;
number_by_field(buy_volume) -> <<"330">>;
number_by_field(sell_volume) -> <<"331">>;
number_by_field(high_px) -> <<"332">>;
number_by_field(low_px) -> <<"333">>;
number_by_field(adjustment) -> <<"334">>;
number_by_field(trad_ses_req_id) -> <<"335">>;
number_by_field(trading_session_id) -> <<"336">>;
number_by_field(contra_trader) -> <<"337">>;
number_by_field(trad_ses_method) -> <<"338">>;
number_by_field(trad_ses_mode) -> <<"339">>;
number_by_field(trad_ses_status) -> <<"340">>;
number_by_field(trad_ses_start_time) -> <<"341">>;
number_by_field(trad_ses_open_time) -> <<"342">>;
number_by_field(trad_ses_pre_close_time) -> <<"343">>;
number_by_field(trad_ses_close_time) -> <<"344">>;
number_by_field(trad_ses_end_time) -> <<"345">>;
number_by_field(number_of_orders) -> <<"346">>;
number_by_field(message_encoding) -> <<"347">>;
number_by_field(encoded_issuer_len) -> <<"348">>;
number_by_field(encoded_issuer) -> <<"349">>;
number_by_field(encoded_security_desc_len) -> <<"350">>;
number_by_field(encoded_security_desc) -> <<"351">>;
number_by_field(encoded_list_exec_inst_len) -> <<"352">>;
number_by_field(encoded_list_exec_inst) -> <<"353">>;
number_by_field(encoded_text_len) -> <<"354">>;
number_by_field(encoded_text) -> <<"355">>;
number_by_field(encoded_subject_len) -> <<"356">>;
number_by_field(encoded_subject) -> <<"357">>;
number_by_field(encoded_headline_len) -> <<"358">>;
number_by_field(encoded_headline) -> <<"359">>;
number_by_field(encoded_alloc_text_len) -> <<"360">>;
number_by_field(encoded_alloc_text) -> <<"361">>;
number_by_field(encoded_underlying_issuer_len) -> <<"362">>;
number_by_field(encoded_underlying_issuer) -> <<"363">>;
number_by_field(encoded_underlying_security_desc_len) -> <<"364">>;
number_by_field(encoded_underlying_security_desc) -> <<"365">>;
number_by_field(alloc_price) -> <<"366">>;
number_by_field(quote_set_valid_until_time) -> <<"367">>;
number_by_field(quote_entry_reject_reason) -> <<"368">>;
number_by_field(last_msg_seq_num_processed) -> <<"369">>;
number_by_field(on_behalf_of_sending_time) -> <<"370">>;
number_by_field(ref_tag_id) -> <<"371">>;
number_by_field(ref_msg_type) -> <<"372">>;
number_by_field(session_reject_reason) -> <<"373">>;
number_by_field(bid_request_trans_type) -> <<"374">>;
number_by_field(contra_broker) -> <<"375">>;
number_by_field(compliance_id) -> <<"376">>;
number_by_field(solicited_flag) -> <<"377">>;
number_by_field(exec_restatement_reason) -> <<"378">>;
number_by_field(business_reject_ref_id) -> <<"379">>;
number_by_field(business_reject_reason) -> <<"380">>;
number_by_field(gross_trade_amt) -> <<"381">>;
number_by_field(no_contra_brokers) -> <<"382">>;
number_by_field(max_message_size) -> <<"383">>;
number_by_field(no_msg_types) -> <<"384">>;
number_by_field(msg_direction) -> <<"385">>;
number_by_field(no_trading_sessions) -> <<"386">>;
number_by_field(total_volume_traded) -> <<"387">>;
number_by_field(discretion_inst) -> <<"388">>;
number_by_field(discretion_offset_value) -> <<"389">>;
number_by_field(bid_id) -> <<"390">>;
number_by_field(client_bid_id) -> <<"391">>;
number_by_field(list_name) -> <<"392">>;
number_by_field(tot_no_related_sym) -> <<"393">>;
number_by_field(bid_type) -> <<"394">>;
number_by_field(num_tickets) -> <<"395">>;
number_by_field(side_value1) -> <<"396">>;
number_by_field(side_value2) -> <<"397">>;
number_by_field(no_bid_descriptors) -> <<"398">>;
number_by_field(bid_descriptor_type) -> <<"399">>;
number_by_field(bid_descriptor) -> <<"400">>;
number_by_field(side_value_ind) -> <<"401">>;
number_by_field(liquidity_pct_low) -> <<"402">>;
number_by_field(liquidity_pct_high) -> <<"403">>;
number_by_field(liquidity_value) -> <<"404">>;
number_by_field(efp_tracking_error) -> <<"405">>;
number_by_field(fair_value) -> <<"406">>;
number_by_field(outside_index_pct) -> <<"407">>;
number_by_field(value_of_futures) -> <<"408">>;
number_by_field(liquidity_ind_type) -> <<"409">>;
number_by_field(wt_average_liquidity) -> <<"410">>;
number_by_field(exchange_for_physical) -> <<"411">>;
number_by_field(out_main_cntry_u_index) -> <<"412">>;
number_by_field(cross_percent) -> <<"413">>;
number_by_field(prog_rpt_reqs) -> <<"414">>;
number_by_field(prog_period_interval) -> <<"415">>;
number_by_field(inc_tax_ind) -> <<"416">>;
number_by_field(num_bidders) -> <<"417">>;
number_by_field(bid_trade_type) -> <<"418">>;
number_by_field(basis_px_type) -> <<"419">>;
number_by_field(no_bid_components) -> <<"420">>;
number_by_field(country) -> <<"421">>;
number_by_field(tot_no_strikes) -> <<"422">>;
number_by_field(price_type) -> <<"423">>;
number_by_field(day_order_qty) -> <<"424">>;
number_by_field(day_cum_qty) -> <<"425">>;
number_by_field(day_avg_px) -> <<"426">>;
number_by_field(gt_booking_inst) -> <<"427">>;
number_by_field(no_strikes) -> <<"428">>;
number_by_field(list_status_type) -> <<"429">>;
number_by_field(net_gross_ind) -> <<"430">>;
number_by_field(list_order_status) -> <<"431">>;
number_by_field(expire_date) -> <<"432">>;
number_by_field(list_exec_inst_type) -> <<"433">>;
number_by_field(cxl_rej_response_to) -> <<"434">>;
number_by_field(underlying_coupon_rate) -> <<"435">>;
number_by_field(underlying_contract_multiplier) -> <<"436">>;
number_by_field(contra_trade_qty) -> <<"437">>;
number_by_field(contra_trade_time) -> <<"438">>;
number_by_field(clearing_firm) -> <<"439">>;
number_by_field(clearing_account) -> <<"440">>;
number_by_field(liquidity_num_securities) -> <<"441">>;
number_by_field(multi_leg_reporting_type) -> <<"442">>;
number_by_field(strike_time) -> <<"443">>;
number_by_field(list_status_text) -> <<"444">>;
number_by_field(encoded_list_status_text_len) -> <<"445">>;
number_by_field(encoded_list_status_text) -> <<"446">>;
number_by_field(party_id_source) -> <<"447">>;
number_by_field(party_id) -> <<"448">>;
number_by_field(total_volume_traded_date) -> <<"449">>;
number_by_field(total_volume_traded_time) -> <<"450">>;
number_by_field(net_chg_prev_day) -> <<"451">>;
number_by_field(party_role) -> <<"452">>;
number_by_field(no_party_ids) -> <<"453">>;
number_by_field(no_security_alt_id) -> <<"454">>;
number_by_field(security_alt_id) -> <<"455">>;
number_by_field(security_alt_id_source) -> <<"456">>;
number_by_field(no_underlying_security_alt_id) -> <<"457">>;
number_by_field(underlying_security_alt_id) -> <<"458">>;
number_by_field(underlying_security_alt_id_source) -> <<"459">>;
number_by_field(product) -> <<"460">>;
number_by_field(cfi_code) -> <<"461">>;
number_by_field(underlying_product) -> <<"462">>;
number_by_field(underlying_cfi_code) -> <<"463">>;
number_by_field(test_message_indicator) -> <<"464">>;
number_by_field(quantity_type) -> <<"465">>;
number_by_field(booking_ref_id) -> <<"466">>;
number_by_field(individual_alloc_id) -> <<"467">>;
number_by_field(rounding_direction) -> <<"468">>;
number_by_field(rounding_modulus) -> <<"469">>;
number_by_field(country_of_issue) -> <<"470">>;
number_by_field(state_or_province_of_issue) -> <<"471">>;
number_by_field(locale_of_issue) -> <<"472">>;
number_by_field(no_regist_dtls) -> <<"473">>;
number_by_field(mailing_dtls) -> <<"474">>;
number_by_field(investor_country_of_residence) -> <<"475">>;
number_by_field(payment_ref) -> <<"476">>;
number_by_field(distrib_payment_method) -> <<"477">>;
number_by_field(cash_distrib_curr) -> <<"478">>;
number_by_field(comm_currency) -> <<"479">>;
number_by_field(cancellation_rights) -> <<"480">>;
number_by_field(money_laundering_status) -> <<"481">>;
number_by_field(mailing_inst) -> <<"482">>;
number_by_field(trans_bkd_time) -> <<"483">>;
number_by_field(exec_price_type) -> <<"484">>;
number_by_field(exec_price_adjustment) -> <<"485">>;
number_by_field(date_of_birth) -> <<"486">>;
number_by_field(trade_report_trans_type) -> <<"487">>;
number_by_field(card_holder_name) -> <<"488">>;
number_by_field(card_number) -> <<"489">>;
number_by_field(card_exp_date) -> <<"490">>;
number_by_field(card_iss_num) -> <<"491">>;
number_by_field(payment_method) -> <<"492">>;
number_by_field(regist_acct_type) -> <<"493">>;
number_by_field(designation) -> <<"494">>;
number_by_field(tax_advantage_type) -> <<"495">>;
number_by_field(regist_rej_reason_text) -> <<"496">>;
number_by_field(fund_renew_waiv) -> <<"497">>;
number_by_field(cash_distrib_agent_name) -> <<"498">>;
number_by_field(cash_distrib_agent_code) -> <<"499">>;
number_by_field(cash_distrib_agent_acct_number) -> <<"500">>;
number_by_field(cash_distrib_pay_ref) -> <<"501">>;
number_by_field(cash_distrib_agent_acct_name) -> <<"502">>;
number_by_field(card_start_date) -> <<"503">>;
number_by_field(payment_date) -> <<"504">>;
number_by_field(payment_remitter_id) -> <<"505">>;
number_by_field(regist_status) -> <<"506">>;
number_by_field(regist_rej_reason_code) -> <<"507">>;
number_by_field(regist_ref_id) -> <<"508">>;
number_by_field(regist_dtls) -> <<"509">>;
number_by_field(no_distrib_insts) -> <<"510">>;
number_by_field(regist_email) -> <<"511">>;
number_by_field(distrib_percentage) -> <<"512">>;
number_by_field(regist_id) -> <<"513">>;
number_by_field(regist_trans_type) -> <<"514">>;
number_by_field(exec_valuation_point) -> <<"515">>;
number_by_field(order_percent) -> <<"516">>;
number_by_field(ownership_type) -> <<"517">>;
number_by_field(no_cont_amts) -> <<"518">>;
number_by_field(cont_amt_type) -> <<"519">>;
number_by_field(cont_amt_value) -> <<"520">>;
number_by_field(cont_amt_curr) -> <<"521">>;
number_by_field(owner_type) -> <<"522">>;
number_by_field(party_sub_id) -> <<"523">>;
number_by_field(nested_party_id) -> <<"524">>;
number_by_field(nested_party_id_source) -> <<"525">>;
number_by_field(secondary_cl_ord_id) -> <<"526">>;
number_by_field(secondary_exec_id) -> <<"527">>;
number_by_field(order_capacity) -> <<"528">>;
number_by_field(order_restrictions) -> <<"529">>;
number_by_field(mass_cancel_request_type) -> <<"530">>;
number_by_field(mass_cancel_response) -> <<"531">>;
number_by_field(mass_cancel_reject_reason) -> <<"532">>;
number_by_field(total_affected_orders) -> <<"533">>;
number_by_field(no_affected_orders) -> <<"534">>;
number_by_field(affected_order_id) -> <<"535">>;
number_by_field(affected_secondary_order_id) -> <<"536">>;
number_by_field(quote_type) -> <<"537">>;
number_by_field(nested_party_role) -> <<"538">>;
number_by_field(no_nested_party_ids) -> <<"539">>;
number_by_field(total_accrued_interest_amt) -> <<"540">>;
number_by_field(maturity_date) -> <<"541">>;
number_by_field(underlying_maturity_date) -> <<"542">>;
number_by_field(instr_registry) -> <<"543">>;
number_by_field(cash_margin) -> <<"544">>;
number_by_field(nested_party_sub_id) -> <<"545">>;
number_by_field(scope) -> <<"546">>;
number_by_field(md_implicit_delete) -> <<"547">>;
number_by_field(cross_id) -> <<"548">>;
number_by_field(cross_type) -> <<"549">>;
number_by_field(cross_prioritization) -> <<"550">>;
number_by_field(orig_cross_id) -> <<"551">>;
number_by_field(no_sides) -> <<"552">>;
number_by_field(username) -> <<"553">>;
number_by_field(password) -> <<"554">>;
number_by_field(no_legs) -> <<"555">>;
number_by_field(leg_currency) -> <<"556">>;
number_by_field(tot_no_security_types) -> <<"557">>;
number_by_field(no_security_types) -> <<"558">>;
number_by_field(security_list_request_type) -> <<"559">>;
number_by_field(security_request_result) -> <<"560">>;
number_by_field(round_lot) -> <<"561">>;
number_by_field(min_trade_vol) -> <<"562">>;
number_by_field(multi_leg_rpt_type_req) -> <<"563">>;
number_by_field(leg_position_effect) -> <<"564">>;
number_by_field(leg_covered_or_uncovered) -> <<"565">>;
number_by_field(leg_price) -> <<"566">>;
number_by_field(trad_ses_status_rej_reason) -> <<"567">>;
number_by_field(trade_request_id) -> <<"568">>;
number_by_field(trade_request_type) -> <<"569">>;
number_by_field(previously_reported) -> <<"570">>;
number_by_field(trade_report_id) -> <<"571">>;
number_by_field(trade_report_ref_id) -> <<"572">>;
number_by_field(match_status) -> <<"573">>;
number_by_field(match_type) -> <<"574">>;
number_by_field(odd_lot) -> <<"575">>;
number_by_field(no_clearing_instructions) -> <<"576">>;
number_by_field(clearing_instruction) -> <<"577">>;
number_by_field(trade_input_source) -> <<"578">>;
number_by_field(trade_input_device) -> <<"579">>;
number_by_field(no_dates) -> <<"580">>;
number_by_field(account_type) -> <<"581">>;
number_by_field(cust_order_capacity) -> <<"582">>;
number_by_field(cl_ord_link_id) -> <<"583">>;
number_by_field(mass_status_req_id) -> <<"584">>;
number_by_field(mass_status_req_type) -> <<"585">>;
number_by_field(orig_ord_mod_time) -> <<"586">>;
number_by_field(leg_settl_type) -> <<"587">>;
number_by_field(leg_settl_date) -> <<"588">>;
number_by_field(day_booking_inst) -> <<"589">>;
number_by_field(booking_unit) -> <<"590">>;
number_by_field(prealloc_method) -> <<"591">>;
number_by_field(underlying_country_of_issue) -> <<"592">>;
number_by_field(underlying_state_or_province_of_issue) -> <<"593">>;
number_by_field(underlying_locale_of_issue) -> <<"594">>;
number_by_field(underlying_instr_registry) -> <<"595">>;
number_by_field(leg_country_of_issue) -> <<"596">>;
number_by_field(leg_state_or_province_of_issue) -> <<"597">>;
number_by_field(leg_locale_of_issue) -> <<"598">>;
number_by_field(leg_instr_registry) -> <<"599">>;
number_by_field(leg_symbol) -> <<"600">>;
number_by_field(leg_symbol_sfx) -> <<"601">>;
number_by_field(leg_security_id) -> <<"602">>;
number_by_field(leg_security_id_source) -> <<"603">>;
number_by_field(no_leg_security_alt_id) -> <<"604">>;
number_by_field(leg_security_alt_id) -> <<"605">>;
number_by_field(leg_security_alt_id_source) -> <<"606">>;
number_by_field(leg_product) -> <<"607">>;
number_by_field(leg_cfi_code) -> <<"608">>;
number_by_field(leg_security_type) -> <<"609">>;
number_by_field(leg_maturity_month_year) -> <<"610">>;
number_by_field(leg_maturity_date) -> <<"611">>;
number_by_field(leg_strike_price) -> <<"612">>;
number_by_field(leg_opt_attribute) -> <<"613">>;
number_by_field(leg_contract_multiplier) -> <<"614">>;
number_by_field(leg_coupon_rate) -> <<"615">>;
number_by_field(leg_security_exchange) -> <<"616">>;
number_by_field(leg_issuer) -> <<"617">>;
number_by_field(encoded_leg_issuer_len) -> <<"618">>;
number_by_field(encoded_leg_issuer) -> <<"619">>;
number_by_field(leg_security_desc) -> <<"620">>;
number_by_field(encoded_leg_security_desc_len) -> <<"621">>;
number_by_field(encoded_leg_security_desc) -> <<"622">>;
number_by_field(leg_ratio_qty) -> <<"623">>;
number_by_field(leg_side) -> <<"624">>;
number_by_field(trading_session_sub_id) -> <<"625">>;
number_by_field(alloc_type) -> <<"626">>;
number_by_field(no_hops) -> <<"627">>;
number_by_field(hop_comp_id) -> <<"628">>;
number_by_field(hop_sending_time) -> <<"629">>;
number_by_field(hop_ref_id) -> <<"630">>;
number_by_field(mid_px) -> <<"631">>;
number_by_field(bid_yield) -> <<"632">>;
number_by_field(mid_yield) -> <<"633">>;
number_by_field(offer_yield) -> <<"634">>;
number_by_field(clearing_fee_indicator) -> <<"635">>;
number_by_field(working_indicator) -> <<"636">>;
number_by_field(leg_last_px) -> <<"637">>;
number_by_field(priority_indicator) -> <<"638">>;
number_by_field(price_improvement) -> <<"639">>;
number_by_field(price2) -> <<"640">>;
number_by_field(last_forward_points2) -> <<"641">>;
number_by_field(bid_forward_points2) -> <<"642">>;
number_by_field(offer_forward_points2) -> <<"643">>;
number_by_field(rfq_req_id) -> <<"644">>;
number_by_field(mkt_bid_px) -> <<"645">>;
number_by_field(mkt_offer_px) -> <<"646">>;
number_by_field(min_bid_size) -> <<"647">>;
number_by_field(min_offer_size) -> <<"648">>;
number_by_field(quote_status_req_id) -> <<"649">>;
number_by_field(legal_confirm) -> <<"650">>;
number_by_field(underlying_last_px) -> <<"651">>;
number_by_field(underlying_last_qty) -> <<"652">>;
number_by_field(sec_def_status) -> <<"653">>;
number_by_field(leg_ref_id) -> <<"654">>;
number_by_field(contra_leg_ref_id) -> <<"655">>;
number_by_field(settl_curr_bid_fx_rate) -> <<"656">>;
number_by_field(settl_curr_offer_fx_rate) -> <<"657">>;
number_by_field(quote_request_reject_reason) -> <<"658">>;
number_by_field(side_compliance_id) -> <<"659">>;
number_by_field(acct_id_source) -> <<"660">>;
number_by_field(alloc_acct_id_source) -> <<"661">>;
number_by_field(benchmark_price) -> <<"662">>;
number_by_field(benchmark_price_type) -> <<"663">>;
number_by_field(confirm_id) -> <<"664">>;
number_by_field(confirm_status) -> <<"665">>;
number_by_field(confirm_trans_type) -> <<"666">>;
number_by_field(contract_settl_month) -> <<"667">>;
number_by_field(delivery_form) -> <<"668">>;
number_by_field(last_par_px) -> <<"669">>;
number_by_field(no_leg_allocs) -> <<"670">>;
number_by_field(leg_alloc_account) -> <<"671">>;
number_by_field(leg_individual_alloc_id) -> <<"672">>;
number_by_field(leg_alloc_qty) -> <<"673">>;
number_by_field(leg_alloc_acct_id_source) -> <<"674">>;
number_by_field(leg_settl_currency) -> <<"675">>;
number_by_field(leg_benchmark_curve_currency) -> <<"676">>;
number_by_field(leg_benchmark_curve_name) -> <<"677">>;
number_by_field(leg_benchmark_curve_point) -> <<"678">>;
number_by_field(leg_benchmark_price) -> <<"679">>;
number_by_field(leg_benchmark_price_type) -> <<"680">>;
number_by_field(leg_bid_px) -> <<"681">>;
number_by_field(leg_ioi_qty) -> <<"682">>;
number_by_field(no_leg_stipulations) -> <<"683">>;
number_by_field(leg_offer_px) -> <<"684">>;
number_by_field(leg_order_qty) -> <<"685">>;
number_by_field(leg_price_type) -> <<"686">>;
number_by_field(leg_qty) -> <<"687">>;
number_by_field(leg_stipulation_type) -> <<"688">>;
number_by_field(leg_stipulation_value) -> <<"689">>;
number_by_field(leg_swap_type) -> <<"690">>;
number_by_field(pool) -> <<"691">>;
number_by_field(quote_price_type) -> <<"692">>;
number_by_field(quote_resp_id) -> <<"693">>;
number_by_field(quote_resp_type) -> <<"694">>;
number_by_field(quote_qualifier) -> <<"695">>;
number_by_field(yield_redemption_date) -> <<"696">>;
number_by_field(yield_redemption_price) -> <<"697">>;
number_by_field(yield_redemption_price_type) -> <<"698">>;
number_by_field(benchmark_security_id) -> <<"699">>;
number_by_field(reversal_indicator) -> <<"700">>;
number_by_field(yield_calc_date) -> <<"701">>;
number_by_field(no_positions) -> <<"702">>;
number_by_field(pos_type) -> <<"703">>;
number_by_field(long_qty) -> <<"704">>;
number_by_field(short_qty) -> <<"705">>;
number_by_field(pos_qty_status) -> <<"706">>;
number_by_field(pos_amt_type) -> <<"707">>;
number_by_field(pos_amt) -> <<"708">>;
number_by_field(pos_trans_type) -> <<"709">>;
number_by_field(pos_req_id) -> <<"710">>;
number_by_field(no_underlyings) -> <<"711">>;
number_by_field(pos_maint_action) -> <<"712">>;
number_by_field(orig_pos_req_ref_id) -> <<"713">>;
number_by_field(pos_maint_rpt_ref_id) -> <<"714">>;
number_by_field(clearing_business_date) -> <<"715">>;
number_by_field(settl_sess_id) -> <<"716">>;
number_by_field(settl_sess_sub_id) -> <<"717">>;
number_by_field(adjustment_type) -> <<"718">>;
number_by_field(contrary_instruction_indicator) -> <<"719">>;
number_by_field(prior_spread_indicator) -> <<"720">>;
number_by_field(pos_maint_rpt_id) -> <<"721">>;
number_by_field(pos_maint_status) -> <<"722">>;
number_by_field(pos_maint_result) -> <<"723">>;
number_by_field(pos_req_type) -> <<"724">>;
number_by_field(response_transport_type) -> <<"725">>;
number_by_field(response_destination) -> <<"726">>;
number_by_field(total_num_pos_reports) -> <<"727">>;
number_by_field(pos_req_result) -> <<"728">>;
number_by_field(pos_req_status) -> <<"729">>;
number_by_field(settl_price) -> <<"730">>;
number_by_field(settl_price_type) -> <<"731">>;
number_by_field(underlying_settl_price) -> <<"732">>;
number_by_field(underlying_settl_price_type) -> <<"733">>;
number_by_field(prior_settl_price) -> <<"734">>;
number_by_field(no_quote_qualifiers) -> <<"735">>;
number_by_field(alloc_settl_currency) -> <<"736">>;
number_by_field(alloc_settl_curr_amt) -> <<"737">>;
number_by_field(interest_at_maturity) -> <<"738">>;
number_by_field(leg_dated_date) -> <<"739">>;
number_by_field(leg_pool) -> <<"740">>;
number_by_field(alloc_interest_at_maturity) -> <<"741">>;
number_by_field(alloc_accrued_interest_amt) -> <<"742">>;
number_by_field(delivery_date) -> <<"743">>;
number_by_field(assignment_method) -> <<"744">>;
number_by_field(assignment_unit) -> <<"745">>;
number_by_field(open_interest) -> <<"746">>;
number_by_field(exercise_method) -> <<"747">>;
number_by_field(tot_num_trade_reports) -> <<"748">>;
number_by_field(trade_request_result) -> <<"749">>;
number_by_field(trade_request_status) -> <<"750">>;
number_by_field(trade_report_reject_reason) -> <<"751">>;
number_by_field(side_multi_leg_reporting_type) -> <<"752">>;
number_by_field(no_pos_amt) -> <<"753">>;
number_by_field(auto_accept_indicator) -> <<"754">>;
number_by_field(alloc_report_id) -> <<"755">>;
number_by_field(no_nested2_party_ids) -> <<"756">>;
number_by_field(nested2_party_id) -> <<"757">>;
number_by_field(nested2_party_id_source) -> <<"758">>;
number_by_field(nested2_party_role) -> <<"759">>;
number_by_field(nested2_party_sub_id) -> <<"760">>;
number_by_field(benchmark_security_id_source) -> <<"761">>;
number_by_field(security_sub_type) -> <<"762">>;
number_by_field(underlying_security_sub_type) -> <<"763">>;
number_by_field(leg_security_sub_type) -> <<"764">>;
number_by_field(allowable_one_sidedness_pct) -> <<"765">>;
number_by_field(allowable_one_sidedness_value) -> <<"766">>;
number_by_field(allowable_one_sidedness_curr) -> <<"767">>;
number_by_field(no_trd_reg_timestamps) -> <<"768">>;
number_by_field(trd_reg_timestamp) -> <<"769">>;
number_by_field(trd_reg_timestamp_type) -> <<"770">>;
number_by_field(trd_reg_timestamp_origin) -> <<"771">>;
number_by_field(confirm_ref_id) -> <<"772">>;
number_by_field(confirm_type) -> <<"773">>;
number_by_field(confirm_rej_reason) -> <<"774">>;
number_by_field(booking_type) -> <<"775">>;
number_by_field(individual_alloc_rej_code) -> <<"776">>;
number_by_field(settl_inst_msg_id) -> <<"777">>;
number_by_field(no_settl_inst) -> <<"778">>;
number_by_field(last_update_time) -> <<"779">>;
number_by_field(alloc_settl_inst_type) -> <<"780">>;
number_by_field(no_settl_party_ids) -> <<"781">>;
number_by_field(settl_party_id) -> <<"782">>;
number_by_field(settl_party_id_source) -> <<"783">>;
number_by_field(settl_party_role) -> <<"784">>;
number_by_field(settl_party_sub_id) -> <<"785">>;
number_by_field(settl_party_sub_id_type) -> <<"786">>;
number_by_field(dlvy_inst_type) -> <<"787">>;
number_by_field(termination_type) -> <<"788">>;
number_by_field(next_expected_msg_seq_num) -> <<"789">>;
number_by_field(ord_status_req_id) -> <<"790">>;
number_by_field(settl_inst_req_id) -> <<"791">>;
number_by_field(settl_inst_req_rej_code) -> <<"792">>;
number_by_field(secondary_alloc_id) -> <<"793">>;
number_by_field(alloc_report_type) -> <<"794">>;
number_by_field(alloc_report_ref_id) -> <<"795">>;
number_by_field(alloc_canc_replace_reason) -> <<"796">>;
number_by_field(copy_msg_indicator) -> <<"797">>;
number_by_field(alloc_account_type) -> <<"798">>;
number_by_field(order_avg_px) -> <<"799">>;
number_by_field(order_booking_qty) -> <<"800">>;
number_by_field(no_settl_party_sub_ids) -> <<"801">>;
number_by_field(no_party_sub_ids) -> <<"802">>;
number_by_field(party_sub_id_type) -> <<"803">>;
number_by_field(no_nested_party_sub_ids) -> <<"804">>;
number_by_field(nested_party_sub_id_type) -> <<"805">>;
number_by_field(no_nested2_party_sub_ids) -> <<"806">>;
number_by_field(nested2_party_sub_id_type) -> <<"807">>;
number_by_field(alloc_intermed_req_type) -> <<"808">>;
number_by_field(underlying_px) -> <<"810">>;
number_by_field(price_delta) -> <<"811">>;
number_by_field(appl_queue_max) -> <<"812">>;
number_by_field(appl_queue_depth) -> <<"813">>;
number_by_field(appl_queue_resolution) -> <<"814">>;
number_by_field(appl_queue_action) -> <<"815">>;
number_by_field(no_alt_md_source) -> <<"816">>;
number_by_field(alt_md_source_id) -> <<"817">>;
number_by_field(secondary_trade_report_id) -> <<"818">>;
number_by_field(avg_px_indicator) -> <<"819">>;
number_by_field(trade_link_id) -> <<"820">>;
number_by_field(order_input_device) -> <<"821">>;
number_by_field(underlying_trading_session_id) -> <<"822">>;
number_by_field(underlying_trading_session_sub_id) -> <<"823">>;
number_by_field(trade_leg_ref_id) -> <<"824">>;
number_by_field(exchange_rule) -> <<"825">>;
number_by_field(trade_alloc_indicator) -> <<"826">>;
number_by_field(expiration_cycle) -> <<"827">>;
number_by_field(trd_type) -> <<"828">>;
number_by_field(trd_sub_type) -> <<"829">>;
number_by_field(transfer_reason) -> <<"830">>;
number_by_field(asgn_req_id) -> <<"831">>;
number_by_field(tot_num_assignment_reports) -> <<"832">>;
number_by_field(asgn_rpt_id) -> <<"833">>;
number_by_field(threshold_amount) -> <<"834">>;
number_by_field(peg_move_type) -> <<"835">>;
number_by_field(peg_offset_type) -> <<"836">>;
number_by_field(peg_limit_type) -> <<"837">>;
number_by_field(peg_round_direction) -> <<"838">>;
number_by_field(pegged_price) -> <<"839">>;
number_by_field(peg_scope) -> <<"840">>;
number_by_field(discretion_move_type) -> <<"841">>;
number_by_field(discretion_offset_type) -> <<"842">>;
number_by_field(discretion_limit_type) -> <<"843">>;
number_by_field(discretion_round_direction) -> <<"844">>;
number_by_field(discretion_price) -> <<"845">>;
number_by_field(discretion_scope) -> <<"846">>;
number_by_field(target_strategy) -> <<"847">>;
number_by_field(target_strategy_parameters) -> <<"848">>;
number_by_field(participation_rate) -> <<"849">>;
number_by_field(target_strategy_performance) -> <<"850">>;
number_by_field(last_liquidity_ind) -> <<"851">>;
number_by_field(publish_trd_indicator) -> <<"852">>;
number_by_field(short_sale_reason) -> <<"853">>;
number_by_field(qty_type) -> <<"854">>;
number_by_field(secondary_trd_type) -> <<"855">>;
number_by_field(trade_report_type) -> <<"856">>;
number_by_field(alloc_no_orders_type) -> <<"857">>;
number_by_field(shared_commission) -> <<"858">>;
number_by_field(confirm_req_id) -> <<"859">>;
number_by_field(avg_par_px) -> <<"860">>;
number_by_field(reported_px) -> <<"861">>;
number_by_field(no_capacities) -> <<"862">>;
number_by_field(order_capacity_qty) -> <<"863">>;
number_by_field(no_events) -> <<"864">>;
number_by_field(event_type) -> <<"865">>;
number_by_field(event_date) -> <<"866">>;
number_by_field(event_px) -> <<"867">>;
number_by_field(event_text) -> <<"868">>;
number_by_field(pct_at_risk) -> <<"869">>;
number_by_field(no_instr_attrib) -> <<"870">>;
number_by_field(instr_attrib_type) -> <<"871">>;
number_by_field(instr_attrib_value) -> <<"872">>;
number_by_field(dated_date) -> <<"873">>;
number_by_field(interest_accrual_date) -> <<"874">>;
number_by_field(cp_program) -> <<"875">>;
number_by_field(cp_reg_type) -> <<"876">>;
number_by_field(underlying_cp_program) -> <<"877">>;
number_by_field(underlying_cp_reg_type) -> <<"878">>;
number_by_field(underlying_qty) -> <<"879">>;
number_by_field(trd_match_id) -> <<"880">>;
number_by_field(secondary_trade_report_ref_id) -> <<"881">>;
number_by_field(underlying_dirty_price) -> <<"882">>;
number_by_field(underlying_end_price) -> <<"883">>;
number_by_field(underlying_start_value) -> <<"884">>;
number_by_field(underlying_current_value) -> <<"885">>;
number_by_field(underlying_end_value) -> <<"886">>;
number_by_field(no_underlying_stips) -> <<"887">>;
number_by_field(underlying_stip_type) -> <<"888">>;
number_by_field(underlying_stip_value) -> <<"889">>;
number_by_field(maturity_net_money) -> <<"890">>;
number_by_field(misc_fee_basis) -> <<"891">>;
number_by_field(tot_no_allocs) -> <<"892">>;
number_by_field(last_fragment) -> <<"893">>;
number_by_field(coll_req_id) -> <<"894">>;
number_by_field(coll_asgn_reason) -> <<"895">>;
number_by_field(coll_inquiry_qualifier) -> <<"896">>;
number_by_field(no_trades) -> <<"897">>;
number_by_field(margin_ratio) -> <<"898">>;
number_by_field(margin_excess) -> <<"899">>;
number_by_field(total_net_value) -> <<"900">>;
number_by_field(cash_outstanding) -> <<"901">>;
number_by_field(coll_asgn_id) -> <<"902">>;
number_by_field(coll_asgn_trans_type) -> <<"903">>;
number_by_field(coll_resp_id) -> <<"904">>;
number_by_field(coll_asgn_resp_type) -> <<"905">>;
number_by_field(coll_asgn_reject_reason) -> <<"906">>;
number_by_field(coll_asgn_ref_id) -> <<"907">>;
number_by_field(coll_rpt_id) -> <<"908">>;
number_by_field(coll_inquiry_id) -> <<"909">>;
number_by_field(coll_status) -> <<"910">>;
number_by_field(tot_num_reports) -> <<"911">>;
number_by_field(last_rpt_requested) -> <<"912">>;
number_by_field(agreement_desc) -> <<"913">>;
number_by_field(agreement_id) -> <<"914">>;
number_by_field(agreement_date) -> <<"915">>;
number_by_field(start_date) -> <<"916">>;
number_by_field(end_date) -> <<"917">>;
number_by_field(agreement_currency) -> <<"918">>;
number_by_field(delivery_type) -> <<"919">>;
number_by_field(end_accrued_interest_amt) -> <<"920">>;
number_by_field(start_cash) -> <<"921">>;
number_by_field(end_cash) -> <<"922">>;
number_by_field(user_request_id) -> <<"923">>;
number_by_field(user_request_type) -> <<"924">>;
number_by_field(new_password) -> <<"925">>;
number_by_field(user_status) -> <<"926">>;
number_by_field(user_status_text) -> <<"927">>;
number_by_field(status_value) -> <<"928">>;
number_by_field(status_text) -> <<"929">>;
number_by_field(ref_comp_id) -> <<"930">>;
number_by_field(ref_sub_id) -> <<"931">>;
number_by_field(network_response_id) -> <<"932">>;
number_by_field(network_request_id) -> <<"933">>;
number_by_field(last_network_response_id) -> <<"934">>;
number_by_field(network_request_type) -> <<"935">>;
number_by_field(no_comp_ids) -> <<"936">>;
number_by_field(network_status_response_type) -> <<"937">>;
number_by_field(no_coll_inquiry_qualifier) -> <<"938">>;
number_by_field(trd_rpt_status) -> <<"939">>;
number_by_field(affirm_status) -> <<"940">>;
number_by_field(underlying_strike_currency) -> <<"941">>;
number_by_field(leg_strike_currency) -> <<"942">>;
number_by_field(time_bracket) -> <<"943">>;
number_by_field(coll_action) -> <<"944">>;
number_by_field(coll_inquiry_status) -> <<"945">>;
number_by_field(coll_inquiry_result) -> <<"946">>;
number_by_field(strike_currency) -> <<"947">>;
number_by_field(no_nested3_party_ids) -> <<"948">>;
number_by_field(nested3_party_id) -> <<"949">>;
number_by_field(nested3_party_id_source) -> <<"950">>;
number_by_field(nested3_party_role) -> <<"951">>;
number_by_field(no_nested3_party_sub_ids) -> <<"952">>;
number_by_field(nested3_party_sub_id) -> <<"953">>;
number_by_field(nested3_party_sub_id_type) -> <<"954">>;
number_by_field(leg_contract_settl_month) -> <<"955">>;
number_by_field(leg_interest_accrual_date) -> <<"956">>;
number_by_field(appl_ver_id) -> <<"1128">>;
number_by_field(default_appl_ver_id) -> <<"1137">>;
number_by_field(quote_msg_id) -> <<"1166">>;
number_by_field(private_quote) -> <<"1171">>;
number_by_field(security_list_type) -> <<"1470">>;
number_by_field(security_reject_reason) -> <<"1607">>;
number_by_field(Key) when is_binary(Key) -> Key.

message_by_number(<<"0">>) -> heartbeat;
message_by_number(<<"1">>) -> test_request;
message_by_number(<<"2">>) -> resend_request;
message_by_number(<<"3">>) -> reject;
message_by_number(<<"4">>) -> sequence_reset;
message_by_number(<<"5">>) -> logout;
message_by_number(<<"8">>) -> execution_report;
message_by_number(<<"9">>) -> order_cancel_reject;
message_by_number(<<"A">>) -> logon;
message_by_number(<<"D">>) -> new_order_single;
message_by_number(<<"F">>) -> order_cancel_request;
message_by_number(<<"H">>) -> order_status_request;
message_by_number(<<"V">>) -> market_data_request;
message_by_number(<<"W">>) -> market_data_snapshot_full_refresh;
message_by_number(<<"X">>) -> market_data_incremental_refresh;
message_by_number(<<"Y">>) -> market_data_request_reject;
message_by_number(<<"j">>) -> business_message_reject;
message_by_number(<<"AF">>) -> order_mass_status_request;
message_by_number(<<"AN">>) -> request_for_positions;
message_by_number(<<"AP">>) -> position_report;
message_by_number(<<"R">>) -> quote_request;
message_by_number(<<"S">>) -> quote;
message_by_number(<<"x">>) -> security_list_request;
message_by_number(<<"y">>) -> security_list;
message_by_number(Type) when is_binary(Type) -> Type.

number_by_message(heartbeat) -> <<"0">>;
number_by_message(test_request) -> <<"1">>;
number_by_message(resend_request) -> <<"2">>;
number_by_message(reject) -> <<"3">>;
number_by_message(sequence_reset) -> <<"4">>;
number_by_message(logout) -> <<"5">>;
number_by_message(execution_report) -> <<"8">>;
number_by_message(order_cancel_reject) -> <<"9">>;
number_by_message(logon) -> <<"A">>;
number_by_message(new_order_single) -> <<"D">>;
number_by_message(order_cancel_request) -> <<"F">>;
number_by_message(order_status_request) -> <<"H">>;
number_by_message(market_data_request) -> <<"V">>;
number_by_message(market_data_snapshot_full_refresh) -> <<"W">>;
number_by_message(market_data_incremental_refresh) -> <<"X">>;
number_by_message(market_data_request_reject) -> <<"Y">>;
number_by_message(business_message_reject) -> <<"j">>;
number_by_message(order_mass_status_request) -> <<"AF">>;
number_by_message(quote_request_reject) -> <<"AG">>;
number_by_message(quote_status_report) -> <<"AI">>;
number_by_message(request_for_positions) -> <<"AN">>;
number_by_message(position_report) -> <<"AP">>;
number_by_message(quote_request) -> <<"R">>;
number_by_message(quote) -> <<"S">>;
number_by_message(quote_cancel) -> <<"Z">>;
number_by_message(mass_quote) -> <<"i">>;
number_by_message(security_list_request) -> <<"x">>;
number_by_message(security_list) -> <<"y">>;
number_by_message(Type) when is_binary(Type) -> Type.

parse_num(Bin) -> parse_num_erl(Bin).

parse_num_erl(Bin) -> parse_num(Bin, 0, 0).
parse_num(<<$., Bin/binary>>, Acc, 0) -> parse_num(Bin, Acc*1.0, 0.1);
parse_num(<<X, Bin/binary>>, Acc, 0) -> parse_num(Bin, Acc*10 + X - $0, 0);
parse_num(<<X, Bin/binary>>, Acc, Coeff) -> parse_num(Bin, Acc + (X - $0)*Coeff, Coeff*0.1);
parse_num(<<>>, Acc, _) -> Acc.

